//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/net/ssl/SSLEngineResult.java
//

#ifndef _JavaxNetSslSSLEngineResult_H_
#define _JavaxNetSslSSLEngineResult_H_

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

@class JavaxNetSslSSLEngineResult_HandshakeStatusEnum;
@class JavaxNetSslSSLEngineResult_StatusEnum;

/*!
 @brief The result object describing the state of the <code>SSLEngine</code> produced
 by the <code>wrap()</code> and <code>unwrap()</code> operations.
 */
@interface JavaxNetSslSSLEngineResult : NSObject

#pragma mark Public

/*!
 @brief Creates a new <code>SSLEngineResult</code> instance with the specified state
 values.
 @param status
 the return value of the <code>SSLEngine</code> operation.
 @param handshakeStatus
 the status of the current handshake
 @param bytesConsumed
 the number of bytes retrieved from the source buffer(s).
 @param bytesProduced
 the number of bytes transferred to the destination buffer(s).
 @throws IllegalArgumentException
 if <code>status</code> or <code>handshakeStatus</code> is <code>null</code>,
 or if <code>bytesConsumed</code> or <code>bytesProduces</code> are
 negative.
 */
- (instancetype)initWithJavaxNetSslSSLEngineResult_StatusEnum:(JavaxNetSslSSLEngineResult_StatusEnum *)status
           withJavaxNetSslSSLEngineResult_HandshakeStatusEnum:(JavaxNetSslSSLEngineResult_HandshakeStatusEnum *)handshakeStatus
                                                      withInt:(jint)bytesConsumed
                                                      withInt:(jint)bytesProduced;

/*!
 @brief Returns the number of bytes retrieved from the source buffer(s).
 @return the number of bytes retrieved from the source buffer(s).
 */
- (jint)bytesConsumed;

/*!
 @brief Returns the number of bytes transferred to the destination buffer(s).
 @return the number of bytes transferred to the destination buffer(s).
 */
- (jint)bytesProduced;

/*!
 @brief Returns the status of the current handshake.
 @return the status of the current handshake.
 */
- (JavaxNetSslSSLEngineResult_HandshakeStatusEnum *)getHandshakeStatus;

/*!
 @brief Returns the return value of the <code>SSLEngine</code> operation.
 @return the return value of the <code>SSLEngine</code> operation.
 */
- (JavaxNetSslSSLEngineResult_StatusEnum *)getStatus;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNetSslSSLEngineResult)

FOUNDATION_EXPORT void JavaxNetSslSSLEngineResult_initWithJavaxNetSslSSLEngineResult_StatusEnum_withJavaxNetSslSSLEngineResult_HandshakeStatusEnum_withInt_withInt_(JavaxNetSslSSLEngineResult *self, JavaxNetSslSSLEngineResult_StatusEnum *status, JavaxNetSslSSLEngineResult_HandshakeStatusEnum *handshakeStatus, jint bytesConsumed, jint bytesProduced);

FOUNDATION_EXPORT JavaxNetSslSSLEngineResult *new_JavaxNetSslSSLEngineResult_initWithJavaxNetSslSSLEngineResult_StatusEnum_withJavaxNetSslSSLEngineResult_HandshakeStatusEnum_withInt_withInt_(JavaxNetSslSSLEngineResult_StatusEnum *status, JavaxNetSslSSLEngineResult_HandshakeStatusEnum *handshakeStatus, jint bytesConsumed, jint bytesProduced) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslSSLEngineResult)

typedef NS_ENUM(NSUInteger, JavaxNetSslSSLEngineResult_HandshakeStatus) {
  JavaxNetSslSSLEngineResult_HandshakeStatus_NOT_HANDSHAKING = 0,
  JavaxNetSslSSLEngineResult_HandshakeStatus_FINISHED = 1,
  JavaxNetSslSSLEngineResult_HandshakeStatus_NEED_TASK = 2,
  JavaxNetSslSSLEngineResult_HandshakeStatus_NEED_WRAP = 3,
  JavaxNetSslSSLEngineResult_HandshakeStatus_NEED_UNWRAP = 4,
};

/*!
 @brief The <code>enum</code> describing the state of the current handshake.
 */
@interface JavaxNetSslSSLEngineResult_HandshakeStatusEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *JavaxNetSslSSLEngineResult_HandshakeStatusEnum_values();

+ (JavaxNetSslSSLEngineResult_HandshakeStatusEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT JavaxNetSslSSLEngineResult_HandshakeStatusEnum *JavaxNetSslSSLEngineResult_HandshakeStatusEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(JavaxNetSslSSLEngineResult_HandshakeStatusEnum)

FOUNDATION_EXPORT JavaxNetSslSSLEngineResult_HandshakeStatusEnum *JavaxNetSslSSLEngineResult_HandshakeStatusEnum_values_[];

#define JavaxNetSslSSLEngineResult_HandshakeStatusEnum_NOT_HANDSHAKING JavaxNetSslSSLEngineResult_HandshakeStatusEnum_values_[JavaxNetSslSSLEngineResult_HandshakeStatus_NOT_HANDSHAKING]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_HandshakeStatusEnum, NOT_HANDSHAKING)

#define JavaxNetSslSSLEngineResult_HandshakeStatusEnum_FINISHED JavaxNetSslSSLEngineResult_HandshakeStatusEnum_values_[JavaxNetSslSSLEngineResult_HandshakeStatus_FINISHED]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_HandshakeStatusEnum, FINISHED)

#define JavaxNetSslSSLEngineResult_HandshakeStatusEnum_NEED_TASK JavaxNetSslSSLEngineResult_HandshakeStatusEnum_values_[JavaxNetSslSSLEngineResult_HandshakeStatus_NEED_TASK]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_HandshakeStatusEnum, NEED_TASK)

#define JavaxNetSslSSLEngineResult_HandshakeStatusEnum_NEED_WRAP JavaxNetSslSSLEngineResult_HandshakeStatusEnum_values_[JavaxNetSslSSLEngineResult_HandshakeStatus_NEED_WRAP]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_HandshakeStatusEnum, NEED_WRAP)

#define JavaxNetSslSSLEngineResult_HandshakeStatusEnum_NEED_UNWRAP JavaxNetSslSSLEngineResult_HandshakeStatusEnum_values_[JavaxNetSslSSLEngineResult_HandshakeStatus_NEED_UNWRAP]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_HandshakeStatusEnum, NEED_UNWRAP)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslSSLEngineResult_HandshakeStatusEnum)

typedef NS_ENUM(NSUInteger, JavaxNetSslSSLEngineResult_Status) {
  JavaxNetSslSSLEngineResult_Status_BUFFER_OVERFLOW = 0,
  JavaxNetSslSSLEngineResult_Status_BUFFER_UNDERFLOW = 1,
  JavaxNetSslSSLEngineResult_Status_CLOSED = 2,
  JavaxNetSslSSLEngineResult_Status_OK = 3,
};

/*!
 @brief The <code>enum</code> describing the result of the <code>SSLEngine</code>
 operation.
 */
@interface JavaxNetSslSSLEngineResult_StatusEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *JavaxNetSslSSLEngineResult_StatusEnum_values();

+ (JavaxNetSslSSLEngineResult_StatusEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT JavaxNetSslSSLEngineResult_StatusEnum *JavaxNetSslSSLEngineResult_StatusEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(JavaxNetSslSSLEngineResult_StatusEnum)

FOUNDATION_EXPORT JavaxNetSslSSLEngineResult_StatusEnum *JavaxNetSslSSLEngineResult_StatusEnum_values_[];

#define JavaxNetSslSSLEngineResult_StatusEnum_BUFFER_OVERFLOW JavaxNetSslSSLEngineResult_StatusEnum_values_[JavaxNetSslSSLEngineResult_Status_BUFFER_OVERFLOW]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_StatusEnum, BUFFER_OVERFLOW)

#define JavaxNetSslSSLEngineResult_StatusEnum_BUFFER_UNDERFLOW JavaxNetSslSSLEngineResult_StatusEnum_values_[JavaxNetSslSSLEngineResult_Status_BUFFER_UNDERFLOW]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_StatusEnum, BUFFER_UNDERFLOW)

#define JavaxNetSslSSLEngineResult_StatusEnum_CLOSED JavaxNetSslSSLEngineResult_StatusEnum_values_[JavaxNetSslSSLEngineResult_Status_CLOSED]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_StatusEnum, CLOSED)

#define JavaxNetSslSSLEngineResult_StatusEnum_OK JavaxNetSslSSLEngineResult_StatusEnum_values_[JavaxNetSslSSLEngineResult_Status_OK]
J2OBJC_ENUM_CONSTANT_GETTER(JavaxNetSslSSLEngineResult_StatusEnum, OK)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslSSLEngineResult_StatusEnum)

#endif // _JavaxNetSslSSLEngineResult_H_
