//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/security/x501/AttributeTypeAndValue.java
//

#ifndef _OrgApacheHarmonySecurityX501AttributeTypeAndValue_H_
#define _OrgApacheHarmonySecurityX501AttributeTypeAndValue_H_

#include "J2ObjC_header.h"

@class JavaLangStringBuilder;
@class OrgApacheHarmonySecurityAsn1ASN1Sequence;
@class OrgApacheHarmonySecurityAsn1ASN1Type;
@class OrgApacheHarmonySecurityUtilsObjectIdentifier;
@class OrgApacheHarmonySecurityX501AttributeValue;

/*!
 @author Alexander V. Esin, Stepan M. Mishura
 @version $Revision$
 */

/*!
 @brief X.501 AttributeTypeAndValue
 */
@interface OrgApacheHarmonySecurityX501AttributeTypeAndValue : NSObject

#pragma mark Public

/*!
 @brief Creates AttributeTypeAndValue with OID and AttributeValue.
 @param oid
 object identifier
 @param value
 attribute value
 */
- (instancetype)initWithOrgApacheHarmonySecurityUtilsObjectIdentifier:(OrgApacheHarmonySecurityUtilsObjectIdentifier *)oid
                       withOrgApacheHarmonySecurityX501AttributeValue:(OrgApacheHarmonySecurityX501AttributeValue *)value;

/*!
 @brief Appends AttributeTypeAndValue string representation
 @param attrFormat - format of DN
 */
- (void)appendNameWithNSString:(NSString *)attrFormat
     withJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

/*!
 @brief Parses OID string representation.
 @param sOid
 string representation of OID
 @throws IOException
 if OID can not be created from its string representation
 */
+ (OrgApacheHarmonySecurityUtilsObjectIdentifier *)getObjectIdentifierWithNSString:(NSString *)sOid;

/*!
 @brief Gets type of the AttributeTypeAndValue
 */
- (OrgApacheHarmonySecurityUtilsObjectIdentifier *)getType;

- (OrgApacheHarmonySecurityX501AttributeValue *)getValue;

@end

J2OBJC_STATIC_INIT(OrgApacheHarmonySecurityX501AttributeTypeAndValue)

FOUNDATION_EXPORT OrgApacheHarmonySecurityUtilsObjectIdentifier *OrgApacheHarmonySecurityX501AttributeTypeAndValue_DC_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheHarmonySecurityX501AttributeTypeAndValue, DC_, OrgApacheHarmonySecurityUtilsObjectIdentifier *)

FOUNDATION_EXPORT OrgApacheHarmonySecurityUtilsObjectIdentifier *OrgApacheHarmonySecurityX501AttributeTypeAndValue_EMAILADDRESS_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheHarmonySecurityX501AttributeTypeAndValue, EMAILADDRESS_, OrgApacheHarmonySecurityUtilsObjectIdentifier *)

FOUNDATION_EXPORT OrgApacheHarmonySecurityAsn1ASN1Type *OrgApacheHarmonySecurityX501AttributeTypeAndValue_attributeValue_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheHarmonySecurityX501AttributeTypeAndValue, attributeValue_, OrgApacheHarmonySecurityAsn1ASN1Type *)

FOUNDATION_EXPORT OrgApacheHarmonySecurityAsn1ASN1Sequence *OrgApacheHarmonySecurityX501AttributeTypeAndValue_ASN1_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheHarmonySecurityX501AttributeTypeAndValue, ASN1_, OrgApacheHarmonySecurityAsn1ASN1Sequence *)

FOUNDATION_EXPORT OrgApacheHarmonySecurityUtilsObjectIdentifier *OrgApacheHarmonySecurityX501AttributeTypeAndValue_getObjectIdentifierWithNSString_(NSString *sOid);

FOUNDATION_EXPORT void OrgApacheHarmonySecurityX501AttributeTypeAndValue_initWithOrgApacheHarmonySecurityUtilsObjectIdentifier_withOrgApacheHarmonySecurityX501AttributeValue_(OrgApacheHarmonySecurityX501AttributeTypeAndValue *self, OrgApacheHarmonySecurityUtilsObjectIdentifier *oid, OrgApacheHarmonySecurityX501AttributeValue *value);

FOUNDATION_EXPORT OrgApacheHarmonySecurityX501AttributeTypeAndValue *new_OrgApacheHarmonySecurityX501AttributeTypeAndValue_initWithOrgApacheHarmonySecurityUtilsObjectIdentifier_withOrgApacheHarmonySecurityX501AttributeValue_(OrgApacheHarmonySecurityUtilsObjectIdentifier *oid, OrgApacheHarmonySecurityX501AttributeValue *value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonySecurityX501AttributeTypeAndValue)

#endif // _OrgApacheHarmonySecurityX501AttributeTypeAndValue_H_
