//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/security/asn1/ASN1Type.java
//

#ifndef _OrgApacheHarmonySecurityAsn1ASN1Type_H_
#define _OrgApacheHarmonySecurityAsn1ASN1Type_H_

#include "J2ObjC_header.h"
#include "org/apache/harmony/security/asn1/ASN1Constants.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class OrgApacheHarmonySecurityAsn1BerInputStream;
@class OrgApacheHarmonySecurityAsn1BerOutputStream;

/*!
 @author Vladimir N. Molotkov, Stepan M. Mishura
 @version $Revision$
 */

/*!
 @brief This abstract class is the super class for all ASN.1 types
 */
@interface OrgApacheHarmonySecurityAsn1ASN1Type : NSObject < OrgApacheHarmonySecurityAsn1ASN1Constants > {
 @public
  /*!
   @brief Integer representation of primitive identifier.
   */
  jint id__;
  /*!
   @brief Integer representation of constructed identifier.
   */
  jint constrId_;
}

#pragma mark Public

/*!
 @brief Constructs a primitive, universal ASN.1 type.
 @param tagNumber - ASN.1 tag number
 @throws IllegalArgumentException - if tagNumber is invalid
 */
- (instancetype)initWithInt:(jint)tagNumber;

/*!
 @brief Constructs an ASN.1 type.
 @param tagClass - tag class. MUST be
 CLASS_UNIVERSAL, CLASS_APPLICATION, CLASS_CONTEXTSPECIFIC, CLASS_PRIVATE
 @param tagNumber - ASN.1 tag number.
 @throws IllegalArgumentException - if tagClass or tagNumber is invalid
 */
- (instancetype)initWithInt:(jint)tagClass
                    withInt:(jint)tagNumber;

/*!
 @brief Tests provided identifier.
 @param identifier identifier to be verified
 @return true if identifier is associated with this ASN.1 type
 */
- (jboolean)checkTagWithInt:(jint)identifier;

/*!
 @brief Decodes ASN.1 type.
 @throws IOException if an I/O error occurs or the end of the stream is reached
 */
- (id)decodeWithOrgApacheHarmonySecurityAsn1BerInputStream:(OrgApacheHarmonySecurityAsn1BerInputStream *)inArg;

- (id)decodeWithByteArray:(IOSByteArray *)encoded;

- (id)decodeWithByteArray:(IOSByteArray *)encoded
                  withInt:(jint)offset
                  withInt:(jint)encodingLen;

- (id)decodeWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (IOSByteArray *)encodeWithId:(id)object;

/*!
 @brief Encodes ASN.1 type.
 */
- (void)encodeASNWithOrgApacheHarmonySecurityAsn1BerOutputStream:(OrgApacheHarmonySecurityAsn1BerOutputStream *)outArg;

- (void)encodeContentWithOrgApacheHarmonySecurityAsn1BerOutputStream:(OrgApacheHarmonySecurityAsn1BerOutputStream *)outArg;

- (jint)getEncodedLengthWithOrgApacheHarmonySecurityAsn1BerOutputStream:(OrgApacheHarmonySecurityAsn1BerOutputStream *)outArg;

- (void)setEncodingContentWithOrgApacheHarmonySecurityAsn1BerOutputStream:(OrgApacheHarmonySecurityAsn1BerOutputStream *)outArg;

- (NSString *)description;

- (void)verifyWithByteArray:(IOSByteArray *)encoded;

- (void)verifyWithJavaIoInputStream:(JavaIoInputStream *)inArg;

#pragma mark Protected

/*!
 @brief Creates decoded object.
 Derived classes should override this method to provide creation for a
 selected class of objects during decoding.
 The default implementation returns an object created by decoding stream.
 */
- (id)getDecodedObjectWithOrgApacheHarmonySecurityAsn1BerInputStream:(OrgApacheHarmonySecurityAsn1BerInputStream *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheHarmonySecurityAsn1ASN1Type)

FOUNDATION_EXPORT void OrgApacheHarmonySecurityAsn1ASN1Type_initWithInt_(OrgApacheHarmonySecurityAsn1ASN1Type *self, jint tagNumber);

FOUNDATION_EXPORT void OrgApacheHarmonySecurityAsn1ASN1Type_initWithInt_withInt_(OrgApacheHarmonySecurityAsn1ASN1Type *self, jint tagClass, jint tagNumber);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonySecurityAsn1ASN1Type)

#endif // _OrgApacheHarmonySecurityAsn1ASN1Type_H_
