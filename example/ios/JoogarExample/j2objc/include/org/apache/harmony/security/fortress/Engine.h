//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/security/fortress/Engine.java
//

#ifndef _OrgApacheHarmonySecurityFortressEngine_H_
#define _OrgApacheHarmonySecurityFortressEngine_H_

#include "J2ObjC_header.h"

@class JavaSecurityProvider;
@class JavaSecurityProvider_Service;
@class JavaUtilArrayList;
@class OrgApacheHarmonySecurityFortressEngine_SpiAndProvider;
@protocol OrgApacheHarmonySecurityFortressSecurityAccess;

/*!
 @author Boris V. Kuznetsov
 @version $Revision$
 */

/*!
 @brief This class implements common functionality for Provider supplied
 classes.
 The usage pattern is to allocate static Engine instance
 per service type and synchronize on that instance during calls to
 <code>getInstance</code> and retrieval of the selected <code>Provider</code>
 and Service Provider Interface (SPI) results. Retrieving the
 results with <code>getProvider</code> and <code>getSpi</code> sets the
 internal <code>Engine</code> values to null to prevent memory leaks.
 <p>
 For example: 
@code
   
   public class Foo 
       private static final Engine ENGINE = new Engine("Foo");
       private final FooSpi spi;
       private final Provider provider;
       private final String algorithm;
       protected Foo(FooSpi spi,
                     Provider provider,
                     String algorithm) {
           this.spi = spi;
           this.provider = provider;
           this.algorithm = algorithm;
       }
       public static Foo getInstance(String algorithm) {
           Engine.SpiAndProvider sap = ENGINE.getInstance(algorithm, null);
           return new Foo((FooSpi) sap.spi, sap.provider, algorithm);
       }
       public static Foo getInstance(String algorithm, Provider provider) {
           Object spi = ENGINE.getInstance(algorithm, provider, null);
           return new Foo((FooSpi) spi, provider, algorithm);
       }
       ...
  
@endcode
 */
@interface OrgApacheHarmonySecurityFortressEngine : NSObject

#pragma mark Public

/*!
 @brief Creates a Engine object
 @param serviceName
 */
- (instancetype)initWithNSString:(NSString *)serviceName;

/*!
 @brief Finds the appropriate service implementation and returns an
 <code>SpiAndProvider</code> instance containing a reference to SPI
 and its <code>Provider</code>
 */
- (OrgApacheHarmonySecurityFortressEngine_SpiAndProvider *)getInstanceWithJavaSecurityProvider_Service:(JavaSecurityProvider_Service *)service
                                                                                          withNSString:(NSString *)param;

/*!
 @brief Finds the appropriate service implementation and returns an
 <code>SpiAndProvider</code> instance containing a reference to the first
 matching SPI and its <code>Provider</code>
 */
- (OrgApacheHarmonySecurityFortressEngine_SpiAndProvider *)getInstanceWithNSString:(NSString *)algorithm
                                                                            withId:(id)param;

/*!
 @brief Finds the appropriate service implementation and returns and instance of
 the class that implements corresponding Service Provider Interface.
 */
- (id)getInstanceWithNSString:(NSString *)algorithm
     withJavaSecurityProvider:(JavaSecurityProvider *)provider
                       withId:(id)param;

/*!
 @brief Returns a list of all possible matches for a given algorithm.
 */
- (JavaUtilArrayList *)getServicesWithNSString:(NSString *)algorithm;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheHarmonySecurityFortressEngine)

FOUNDATION_EXPORT id<OrgApacheHarmonySecurityFortressSecurityAccess> OrgApacheHarmonySecurityFortressEngine_door_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheHarmonySecurityFortressEngine, door_, id<OrgApacheHarmonySecurityFortressSecurityAccess>)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheHarmonySecurityFortressEngine, door_, id<OrgApacheHarmonySecurityFortressSecurityAccess>)

FOUNDATION_EXPORT void OrgApacheHarmonySecurityFortressEngine_initWithNSString_(OrgApacheHarmonySecurityFortressEngine *self, NSString *serviceName);

FOUNDATION_EXPORT OrgApacheHarmonySecurityFortressEngine *new_OrgApacheHarmonySecurityFortressEngine_initWithNSString_(NSString *serviceName) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonySecurityFortressEngine)

@interface OrgApacheHarmonySecurityFortressEngine_SpiAndProvider : NSObject {
 @public
  id spi_;
  JavaSecurityProvider *provider_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheHarmonySecurityFortressEngine_SpiAndProvider)

J2OBJC_FIELD_SETTER(OrgApacheHarmonySecurityFortressEngine_SpiAndProvider, spi_, id)
J2OBJC_FIELD_SETTER(OrgApacheHarmonySecurityFortressEngine_SpiAndProvider, provider_, JavaSecurityProvider *)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonySecurityFortressEngine_SpiAndProvider)

#endif // _OrgApacheHarmonySecurityFortressEngine_H_
