//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/security/x509/NameConstraints.java
//

#ifndef _OrgApacheHarmonySecurityX509NameConstraints_H_
#define _OrgApacheHarmonySecurityX509NameConstraints_H_

#include "J2ObjC_header.h"
#include "org/apache/harmony/security/x509/ExtensionValue.h"

@class IOSByteArray;
@class JavaLangStringBuilder;
@class JavaSecurityCertX509Certificate;
@class OrgApacheHarmonySecurityAsn1ASN1Sequence;
@class OrgApacheHarmonySecurityX509GeneralSubtrees;
@protocol JavaUtilList;

/*!
 @author Vladimir N. Molotkov, Alexander Y. Kleymenov
 @version $Revision$
 */

/*!
 @brief The class encapsulates the ASN.1 DER encoding/decoding work
 with the following structure which is a part of X.509 certificate
 (as specified in RFC 3280 -
 Internet X.509 Public Key Infrastructure.
 Certificate and Certificate Revocation List (CRL) Profile.
 http://www.ietf.org/rfc/rfc3280.txt):
 @code

   NameConstraints ::= SEQUENCE {
        permittedSubtrees       [0]     GeneralSubtrees OPTIONAL,
        excludedSubtrees        [1]     GeneralSubtrees OPTIONAL }
   GeneralSubtrees ::= SEQUENCE SIZE (1..MAX) OF GeneralSubtree
  
@endcode
 */
@interface OrgApacheHarmonySecurityX509NameConstraints : OrgApacheHarmonySecurityX509ExtensionValue

#pragma mark Public

/*!
 @brief Constructs <code>NameConstrains</code> object
 */
- (instancetype)initWithOrgApacheHarmonySecurityX509GeneralSubtrees:(OrgApacheHarmonySecurityX509GeneralSubtrees *)permittedSubtrees
                    withOrgApacheHarmonySecurityX509GeneralSubtrees:(OrgApacheHarmonySecurityX509GeneralSubtrees *)excludedSubtrees;

+ (OrgApacheHarmonySecurityX509NameConstraints *)decodeWithByteArray:(IOSByteArray *)encoding;

- (void)dumpValueWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                              withNSString:(NSString *)prefix;

- (IOSByteArray *)getEncoded;

/*!
 @brief Check if this list of names is acceptable according to this
 NameConstraints object.
 */
- (jboolean)isAcceptableWithJavaUtilList:(id<JavaUtilList>)names;

/*!
 @brief Apply the name restrictions specified by this NameConstraints
 instance to the subject distinguished name and subject alternative
 names of specified X509Certificate.
 Restrictions apply only
 if specified name form is present in the certificate.
 The restrictions are applied according the RFC 3280
 (see 4.2.1.11 Name Constraints), excepting that restrictions are applied
 and to CA certificates, and to certificates which issuer and subject
 names the same (i.e. method does not check if it CA's certificate or not,
 or if the names differ or not. This check if it is needed should be done
 by caller before calling this method).
 @param cert X.509 Certificate to be checked.
 @return true if the certificate is acceptable according
 these NameConstraints restrictions
 */
- (jboolean)isAcceptableWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert;

@end

J2OBJC_STATIC_INIT(OrgApacheHarmonySecurityX509NameConstraints)

FOUNDATION_EXPORT OrgApacheHarmonySecurityAsn1ASN1Sequence *OrgApacheHarmonySecurityX509NameConstraints_ASN1_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheHarmonySecurityX509NameConstraints, ASN1_, OrgApacheHarmonySecurityAsn1ASN1Sequence *)

FOUNDATION_EXPORT void OrgApacheHarmonySecurityX509NameConstraints_initWithOrgApacheHarmonySecurityX509GeneralSubtrees_withOrgApacheHarmonySecurityX509GeneralSubtrees_(OrgApacheHarmonySecurityX509NameConstraints *self, OrgApacheHarmonySecurityX509GeneralSubtrees *permittedSubtrees, OrgApacheHarmonySecurityX509GeneralSubtrees *excludedSubtrees);

FOUNDATION_EXPORT OrgApacheHarmonySecurityX509NameConstraints *new_OrgApacheHarmonySecurityX509NameConstraints_initWithOrgApacheHarmonySecurityX509GeneralSubtrees_withOrgApacheHarmonySecurityX509GeneralSubtrees_(OrgApacheHarmonySecurityX509GeneralSubtrees *permittedSubtrees, OrgApacheHarmonySecurityX509GeneralSubtrees *excludedSubtrees) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheHarmonySecurityX509NameConstraints *OrgApacheHarmonySecurityX509NameConstraints_decodeWithByteArray_(IOSByteArray *encoding);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonySecurityX509NameConstraints)

#endif // _OrgApacheHarmonySecurityX509NameConstraints_H_
