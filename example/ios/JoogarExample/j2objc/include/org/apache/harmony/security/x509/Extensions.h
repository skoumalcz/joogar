//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/security/x509/Extensions.java
//

#ifndef _OrgApacheHarmonySecurityX509Extensions_H_
#define _OrgApacheHarmonySecurityX509Extensions_H_

#include "J2ObjC_header.h"

@class IOSBooleanArray;
@class IOSByteArray;
@class JavaLangStringBuilder;
@class JavaxSecurityAuthX500X500Principal;
@class OrgApacheHarmonySecurityAsn1ASN1Type;
@class OrgApacheHarmonySecurityX509Extension;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol JavaUtilSet;

/*!
 @author Alexander Y. Kleymenov
 @version $Revision$
 */

/*!
 @brief The class encapsulates the ASN.1 DER encoding/decoding work
 with the Extensions part of X.509 certificate
 (as specified in RFC 3280 -
 Internet X.509 Public Key Infrastructure.
 Certificate and Certificate Revocation List (CRL) Profile.
 http://www.ietf.org/rfc/rfc3280.txt):
 @code

  Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension
  
@endcode
 */
@interface OrgApacheHarmonySecurityX509Extensions : NSObject

#pragma mark Public

/*!
 @brief Constructs an object representing the value of Extensions.
 */
- (instancetype)init;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)extensions;

- (void)dumpValueWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                              withNSString:(NSString *)prefix;

- (jboolean)isEqual:(id)other;

/*!
 @brief Returns the list of critical extensions.
 */
- (id<JavaUtilSet>)getCriticalExtensions;

/*!
 @brief Returns ASN.1 encoded form of this X.509 Extensions value.
 */
- (IOSByteArray *)getEncoded;

/*!
 @brief Returns the values of extensions.
 */
- (OrgApacheHarmonySecurityX509Extension *)getExtensionByOIDWithNSString:(NSString *)oid;

/*!
 @brief Returns the list of critical extensions.
 */
- (id<JavaUtilSet>)getNonCriticalExtensions;

- (NSUInteger)hash;

- (jboolean)hasUnsupportedCritical;

- (jint)size;

/*!
 @brief Returns the value of Basic Constraints Extension (OID = 2.5.29.19).
 The ASN.1 definition of Basic Constraints Extension is:
 @code

   id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }
   BasicConstraints ::= SEQUENCE {
        cA                      BOOLEAN DEFAULT FALSE,
        pathLenConstraint       INTEGER (0..MAX) OPTIONAL
   }
  
@endcode
 (as specified in RFC 3280)
  the Basic Constraints Extension is not present or
 it is present but it indicates the certificate is not a
 certificate authority. If the certificate is a certificate
 authority, returns the path length constraint if present, or
 Integer.MAX_VALUE if it is not.
 */
- (jint)valueOfBasicConstraints;

/*!
 @brief Returns the value of Certificate Issuer Extension (OID = 2.5.29.29).
 It is a CRL entry extension and contains the GeneralNames describing
 the issuer of revoked certificate. Its ASN.1 notation is as follows:
 @code

   id-ce-certificateIssuer   OBJECT IDENTIFIER ::= { id-ce 29 }
   certificateIssuer ::=     GeneralNames
  
@endcode
 (as specified in RFC 3280)
 @return the value of Certificate Issuer Extension
 */
- (JavaxSecurityAuthX500X500Principal *)valueOfCertificateIssuerExtension;

/*!
 @brief Returns the value of Extended Key Usage extension (OID == 2.5.29.37).
 The ASN.1 definition of Extended Key Usage Extension is:
 @code

  id-ce-extKeyUsage OBJECT IDENTIFIER ::= { id-ce 37 }
  ExtKeyUsageSyntax ::= SEQUENCE SIZE (1..MAX) OF KeyPurposeId
  KeyPurposeId ::= OBJECT IDENTIFIER
  
@endcode
 (as specified in RFC 3280)
 @return the list with string representations of KeyPurposeId's OIDs
 and null
 @throws IOException if extension was incorrectly encoded.
 */
- (id<JavaUtilList>)valueOfExtendedKeyUsage;

/*!
 @brief Returns the value of Issuer Alternative Name Extension (OID = 2.5.29.18).
 The ASN.1 definition for Issuer Alternative Name is:
 @code

   id-ce-issuerAltName OBJECT IDENTIFIER ::=  { id-ce 18 }
   IssuerAltName ::= GeneralNames
  
@endcode
 (as specified in RFC 3280)
 @return Returns the collection of pairs:
 (Integer (tag), Object (name value)) if extension presents, and
 null if does not.
 */
- (id<JavaUtilCollection>)valueOfIssuerAlternativeName;

/*!
 @brief Returns the value of Key Usage extension (OID == 2.5.29.15).
 The ASN.1 definition of Key Usage Extension is:
 @code

  id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }
  KeyUsage ::= BIT STRING {
     digitalSignature        (0),
     nonRepudiation          (1),
     keyEncipherment         (2),
     dataEncipherment        (3),
     keyAgreement            (4),
     keyCertSign             (5),
     cRLSign                 (6),
     encipherOnly            (7),
     decipherOnly            (8)
  }
  
@endcode
 (as specified in RFC 3280)
 @return the value of Key Usage Extension if it is in the list,
 and null if there is no such extension or its value can not be decoded
 otherwise. Note, that the length of returned array can be greater
 than 9.
 */
- (IOSBooleanArray *)valueOfKeyUsage;

/*!
 @brief Returns the value of Subject Alternative Name (OID = 2.5.29.17).
 The ASN.1 definition for Subject Alternative Name is:
 @code

  id-ce-subjectAltName OBJECT IDENTIFIER ::=  { id-ce 17 }
  SubjectAltName ::= GeneralNames
  
@endcode
 (as specified in RFC 3280)
 @return Returns the collection of pairs:
 (Integer (tag), Object (name value)) if extension presents, and
 null if does not.
 */
- (id<JavaUtilCollection>)valueOfSubjectAlternativeName;

@end

J2OBJC_STATIC_INIT(OrgApacheHarmonySecurityX509Extensions)

FOUNDATION_EXPORT OrgApacheHarmonySecurityAsn1ASN1Type *OrgApacheHarmonySecurityX509Extensions_ASN1_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheHarmonySecurityX509Extensions, ASN1_, OrgApacheHarmonySecurityAsn1ASN1Type *)

FOUNDATION_EXPORT void OrgApacheHarmonySecurityX509Extensions_init(OrgApacheHarmonySecurityX509Extensions *self);

FOUNDATION_EXPORT OrgApacheHarmonySecurityX509Extensions *new_OrgApacheHarmonySecurityX509Extensions_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheHarmonySecurityX509Extensions_initWithJavaUtilList_(OrgApacheHarmonySecurityX509Extensions *self, id<JavaUtilList> extensions);

FOUNDATION_EXPORT OrgApacheHarmonySecurityX509Extensions *new_OrgApacheHarmonySecurityX509Extensions_initWithJavaUtilList_(id<JavaUtilList> extensions) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonySecurityX509Extensions)

#endif // _OrgApacheHarmonySecurityX509Extensions_H_
