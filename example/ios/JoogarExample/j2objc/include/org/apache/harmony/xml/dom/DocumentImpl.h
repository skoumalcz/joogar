//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/xml/dom/DocumentImpl.java
//

#ifndef _OrgApacheHarmonyXmlDomDocumentImpl_H_
#define _OrgApacheHarmonyXmlDomDocumentImpl_H_

#include "J2ObjC_header.h"
#include "org/apache/harmony/xml/dom/InnerNodeImpl.h"
#include "org/w3c/dom/Document.h"

@class OrgApacheHarmonyXmlDomAttrImpl;
@class OrgApacheHarmonyXmlDomCDATASectionImpl;
@class OrgApacheHarmonyXmlDomCommentImpl;
@class OrgApacheHarmonyXmlDomDOMImplementationImpl;
@class OrgApacheHarmonyXmlDomDocumentFragmentImpl;
@class OrgApacheHarmonyXmlDomElementImpl;
@class OrgApacheHarmonyXmlDomEntityReferenceImpl;
@class OrgApacheHarmonyXmlDomNodeImpl;
@class OrgApacheHarmonyXmlDomProcessingInstructionImpl;
@class OrgApacheHarmonyXmlDomTextImpl;
@protocol JavaUtilMap;
@protocol OrgW3cDomDOMConfiguration;
@protocol OrgW3cDomDOMImplementation;
@protocol OrgW3cDomDocumentType;
@protocol OrgW3cDomElement;
@protocol OrgW3cDomNode;
@protocol OrgW3cDomNodeList;

/*!
 @brief Provides a straightforward implementation of the corresponding W3C DOM
 interface.
 The class is used internally only, thus only notable members that
 are not in the original interface are documented (the W3C docs are quite
 extensive). Hope that's ok.
 <p>
 Some of the fields may have package visibility, so other classes belonging to
 the DOM implementation can easily access them while maintaining the DOM tree
 structure.
 */
@interface OrgApacheHarmonyXmlDomDocumentImpl : OrgApacheHarmonyXmlDomInnerNodeImpl < OrgW3cDomDocument >

#pragma mark Public

- (instancetype)initWithOrgApacheHarmonyXmlDomDOMImplementationImpl:(OrgApacheHarmonyXmlDomDOMImplementationImpl *)impl
                                                       withNSString:(NSString *)namespaceURI
                                                       withNSString:(NSString *)qualifiedName
                                          withOrgW3cDomDocumentType:(id<OrgW3cDomDocumentType>)doctype
                                                       withNSString:(NSString *)inputEncoding;

/*!
 @brief Detaches the node from its parent (if any) and changes its document to
 this document.
 The node's subtree and attributes will remain attached,
 but their document will be changed to this document.
 */
- (id<OrgW3cDomNode>)adoptNodeWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

- (OrgApacheHarmonyXmlDomAttrImpl *)createAttributeWithNSString:(NSString *)name;

- (OrgApacheHarmonyXmlDomAttrImpl *)createAttributeNSWithNSString:(NSString *)namespaceURI
                                                     withNSString:(NSString *)qualifiedName;

- (OrgApacheHarmonyXmlDomCDATASectionImpl *)createCDATASectionWithNSString:(NSString *)data;

- (OrgApacheHarmonyXmlDomCommentImpl *)createCommentWithNSString:(NSString *)data;

- (OrgApacheHarmonyXmlDomDocumentFragmentImpl *)createDocumentFragment;

- (OrgApacheHarmonyXmlDomElementImpl *)createElementWithNSString:(NSString *)tagName;

- (OrgApacheHarmonyXmlDomElementImpl *)createElementNSWithNSString:(NSString *)namespaceURI
                                                      withNSString:(NSString *)qualifiedName;

- (OrgApacheHarmonyXmlDomEntityReferenceImpl *)createEntityReferenceWithNSString:(NSString *)name;

- (OrgApacheHarmonyXmlDomProcessingInstructionImpl *)createProcessingInstructionWithNSString:(NSString *)target
                                                                                withNSString:(NSString *)data;

- (OrgApacheHarmonyXmlDomTextImpl *)createTextNodeWithNSString:(NSString *)data;

- (id<OrgW3cDomDocumentType>)getDoctype;

- (id<OrgW3cDomElement>)getDocumentElement;

- (NSString *)getDocumentURI;

- (id<OrgW3cDomDOMConfiguration>)getDomConfig;

- (id<OrgW3cDomElement>)getElementByIdWithNSString:(NSString *)elementId;

- (id<OrgW3cDomNodeList>)getElementsByTagNameWithNSString:(NSString *)name;

- (id<OrgW3cDomNodeList>)getElementsByTagNameNSWithNSString:(NSString *)namespaceURI
                                               withNSString:(NSString *)localName;

- (id<OrgW3cDomDOMImplementation>)getImplementation;

- (NSString *)getInputEncoding;

- (NSString *)getNodeName;

- (jshort)getNodeType;

- (jboolean)getStrictErrorChecking;

- (NSString *)getTextContent;

- (NSString *)getXmlEncoding;

- (jboolean)getXmlStandalone;

- (NSString *)getXmlVersion;

- (id<OrgW3cDomNode>)importNodeWithOrgW3cDomNode:(id<OrgW3cDomNode>)importedNode
                                     withBoolean:(jboolean)deep;

/*!
 @brief Document elements may have at most one root element and at most one DTD
 element.
 */
- (id<OrgW3cDomNode>)insertChildAtWithOrgW3cDomNode:(id<OrgW3cDomNode>)toInsert
                                            withInt:(jint)index;

- (void)normalizeDocument;

- (id<OrgW3cDomNode>)renameNodeWithOrgW3cDomNode:(id<OrgW3cDomNode>)node
                                    withNSString:(NSString *)namespaceURI
                                    withNSString:(NSString *)qualifiedName;

- (void)setDocumentURIWithNSString:(NSString *)documentUri;

- (void)setStrictErrorCheckingWithBoolean:(jboolean)strictErrorChecking;

- (void)setXmlStandaloneWithBoolean:(jboolean)xmlStandalone;

- (void)setXmlVersionWithNSString:(NSString *)xmlVersion;

#pragma mark Package-Private

/*!
 @brief Returns a copy of the given node or subtree with this document as its
 owner.
 @param operation either <code>UserDataHandler.NODE_CLONED</code> or
 <code>UserDataHandler.NODE_IMPORTED</code>.
 @param node a node belonging to any document or DOM implementation.
 @param deep true to recursively copy any child nodes; false to do no such
 copying and return a node with no children.
 */
- (id<OrgW3cDomNode>)cloneOrImportNodeWithShort:(jshort)operation
                              withOrgW3cDomNode:(id<OrgW3cDomNode>)node
                                    withBoolean:(jboolean)deep;

/*!
 @brief Returns a map with the user data objects attached to the specified node.
 This map is readable and writable.
 */
- (id<JavaUtilMap>)getUserDataMapWithOrgApacheHarmonyXmlDomNodeImpl:(OrgApacheHarmonyXmlDomNodeImpl *)node;

/*!
 @brief Returns a map with the user data objects attached to the specified node.
 The returned map may be read-only.
 */
- (id<JavaUtilMap>)getUserDataMapForReadWithOrgApacheHarmonyXmlDomNodeImpl:(OrgApacheHarmonyXmlDomNodeImpl *)node;

+ (jboolean)isXMLIdentifierWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheHarmonyXmlDomDocumentImpl)

FOUNDATION_EXPORT void OrgApacheHarmonyXmlDomDocumentImpl_initWithOrgApacheHarmonyXmlDomDOMImplementationImpl_withNSString_withNSString_withOrgW3cDomDocumentType_withNSString_(OrgApacheHarmonyXmlDomDocumentImpl *self, OrgApacheHarmonyXmlDomDOMImplementationImpl *impl, NSString *namespaceURI, NSString *qualifiedName, id<OrgW3cDomDocumentType> doctype, NSString *inputEncoding);

FOUNDATION_EXPORT OrgApacheHarmonyXmlDomDocumentImpl *new_OrgApacheHarmonyXmlDomDocumentImpl_initWithOrgApacheHarmonyXmlDomDOMImplementationImpl_withNSString_withNSString_withOrgW3cDomDocumentType_withNSString_(OrgApacheHarmonyXmlDomDOMImplementationImpl *impl, NSString *namespaceURI, NSString *qualifiedName, id<OrgW3cDomDocumentType> doctype, NSString *inputEncoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jboolean OrgApacheHarmonyXmlDomDocumentImpl_isXMLIdentifierWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonyXmlDomDocumentImpl)

#endif // _OrgApacheHarmonyXmlDomDocumentImpl_H_
