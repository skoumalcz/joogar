//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/security/utils/JarUtils.java
//

#ifndef _OrgApacheHarmonySecurityUtilsJarUtils_H_
#define _OrgApacheHarmonySecurityUtilsJarUtils_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaIoInputStream;

/*!
 @author Boris Kuznetsov
 @version $Revision$
 */

@interface OrgApacheHarmonySecurityUtilsJarUtils : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief This method handle all the work with  PKCS7, ASN1 encoding, signature verifying,
 and certification path building.
 See also PKCS #7: Cryptographic Message Syntax Standard:
 http://www.ietf.org/rfc/rfc2315.txt
 @param signature - the input stream of signature file to be verified
 @param signatureBlock - the input stream of corresponding signature block file
 @return array of certificates used to verify the signature file
 @throws IOException - if some errors occurs during reading from the stream
 @throws GeneralSecurityException - if signature verification process fails
 */
+ (IOSObjectArray *)verifySignatureWithJavaIoInputStream:(JavaIoInputStream *)signature
                                   withJavaIoInputStream:(JavaIoInputStream *)signatureBlock;

@end

J2OBJC_STATIC_INIT(OrgApacheHarmonySecurityUtilsJarUtils)

FOUNDATION_EXPORT IOSObjectArray *OrgApacheHarmonySecurityUtilsJarUtils_verifySignatureWithJavaIoInputStream_withJavaIoInputStream_(JavaIoInputStream *signature, JavaIoInputStream *signatureBlock);

FOUNDATION_EXPORT void OrgApacheHarmonySecurityUtilsJarUtils_init(OrgApacheHarmonySecurityUtilsJarUtils *self);

FOUNDATION_EXPORT OrgApacheHarmonySecurityUtilsJarUtils *new_OrgApacheHarmonySecurityUtilsJarUtils_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonySecurityUtilsJarUtils)

#endif // _OrgApacheHarmonySecurityUtilsJarUtils_H_
