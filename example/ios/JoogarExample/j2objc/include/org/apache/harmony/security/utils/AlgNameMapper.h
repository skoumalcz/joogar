//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/security/utils/AlgNameMapper.java
//

#ifndef _OrgApacheHarmonySecurityUtilsAlgNameMapper_H_
#define _OrgApacheHarmonySecurityUtilsAlgNameMapper_H_

#include "J2ObjC_header.h"

@protocol OrgApacheHarmonySecurityUtilsAlgNameMapperSource;

/*!
 @author Vladimir N. Molotkov
 @version $Revision$
 */

/*!
 @brief Provides Algorithm Name to OID and OID to Algorithm Name mappings.
 Some known
 mappings are hardcoded. Tries to obtain additional mappings from installed
 providers during initialization.
 */
@interface OrgApacheHarmonySecurityUtilsAlgNameMapper : NSObject

#pragma mark Public

/*!
 @brief Returns Algorithm name for given algorithm alias
 @param algName - alias
 @return algorithm name
 */
+ (NSString *)getStandardNameWithNSString:(NSString *)algName;

/*!
 @brief Checks if parameter represents OID
 @param alias alias to be checked
 @return 'true' if parameter represents OID
 */
+ (jboolean)isOIDWithNSString:(NSString *)alias;

/*!
 @brief Returns algName for OID
 @param oid OID to be mapped
 @return algorithm name
 */
+ (NSString *)map2AlgNameWithNSString:(NSString *)oid;

/*!
 @brief Returns OID for algName
 @param algName algorithm name to be mapped
 @return OID as String
 */
+ (NSString *)map2OIDWithNSString:(NSString *)algName;

/*!
 @brief Removes leading "OID." from oid String passed
 @param oid string that may contain leading "OID."
 @return string passed without leading "OID."
 */
+ (NSString *)normalizeWithNSString:(NSString *)oid;

+ (void)setSourceWithOrgApacheHarmonySecurityUtilsAlgNameMapperSource:(id<OrgApacheHarmonySecurityUtilsAlgNameMapperSource>)source;

@end

J2OBJC_STATIC_INIT(OrgApacheHarmonySecurityUtilsAlgNameMapper)

FOUNDATION_EXPORT NSString *OrgApacheHarmonySecurityUtilsAlgNameMapper_map2OIDWithNSString_(NSString *algName);

FOUNDATION_EXPORT NSString *OrgApacheHarmonySecurityUtilsAlgNameMapper_map2AlgNameWithNSString_(NSString *oid);

FOUNDATION_EXPORT NSString *OrgApacheHarmonySecurityUtilsAlgNameMapper_getStandardNameWithNSString_(NSString *algName);

FOUNDATION_EXPORT jboolean OrgApacheHarmonySecurityUtilsAlgNameMapper_isOIDWithNSString_(NSString *alias);

FOUNDATION_EXPORT NSString *OrgApacheHarmonySecurityUtilsAlgNameMapper_normalizeWithNSString_(NSString *oid);

FOUNDATION_EXPORT void OrgApacheHarmonySecurityUtilsAlgNameMapper_setSourceWithOrgApacheHarmonySecurityUtilsAlgNameMapperSource_(id<OrgApacheHarmonySecurityUtilsAlgNameMapperSource> source);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonySecurityUtilsAlgNameMapper)

#endif // _OrgApacheHarmonySecurityUtilsAlgNameMapper_H_
