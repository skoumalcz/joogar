//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/w3c/dom/UserDataHandler.java
//

#ifndef _OrgW3cDomUserDataHandler_H_
#define _OrgW3cDomUserDataHandler_H_

#include "J2ObjC_header.h"

@protocol OrgW3cDomNode;

#define OrgW3cDomUserDataHandler_NODE_CLONED 1
#define OrgW3cDomUserDataHandler_NODE_IMPORTED 2
#define OrgW3cDomUserDataHandler_NODE_DELETED 3
#define OrgW3cDomUserDataHandler_NODE_RENAMED 4
#define OrgW3cDomUserDataHandler_NODE_ADOPTED 5

/*!
 @brief When associating an object to a key on a node using
 <code>Node.setUserData()</code> the application can provide a handler
 that gets called when the node the object is associated to is being
 cloned, imported, or renamed.
 This can be used by the application to
 implement various behaviors regarding the data it associates to the DOM
 nodes. This interface defines that handler.
 <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.
 @since DOM Level 3
 */
@protocol OrgW3cDomUserDataHandler < NSObject, JavaObject >

/*!
 @brief This method is called whenever the node for which this handler is
 registered is imported or cloned.
 <br> DOM applications must not raise exceptions in a
 <code>UserDataHandler</code>. The effect of throwing exceptions from
 the handler is DOM implementation dependent.
 @param operation Specifies the type of operation that is being
 performed on the node.
 @param key Specifies the key for which this handler is being called.
 @param data Specifies the data for which this handler is being called.
 @param src Specifies the node being cloned, adopted, imported, or
 renamed. This is <code>null</code> when the node is being deleted.
 @param dst Specifies the node newly created if any, or
 <code>null</code>.
 */
- (void)handleWithShort:(jshort)operation
           withNSString:(NSString *)key
                 withId:(id)data
      withOrgW3cDomNode:(id<OrgW3cDomNode>)src
      withOrgW3cDomNode:(id<OrgW3cDomNode>)dst;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgW3cDomUserDataHandler)

J2OBJC_STATIC_FIELD_GETTER(OrgW3cDomUserDataHandler, NODE_CLONED, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgW3cDomUserDataHandler, NODE_IMPORTED, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgW3cDomUserDataHandler, NODE_DELETED, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgW3cDomUserDataHandler, NODE_RENAMED, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgW3cDomUserDataHandler, NODE_ADOPTED, jshort)

J2OBJC_TYPE_LITERAL_HEADER(OrgW3cDomUserDataHandler)

#endif // _OrgW3cDomUserDataHandler_H_
