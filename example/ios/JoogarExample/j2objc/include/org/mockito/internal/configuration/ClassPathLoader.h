//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/org/mockito/internal/configuration/ClassPathLoader.java
//

#ifndef _OrgMockitoInternalConfigurationClassPathLoader_H_
#define _OrgMockitoInternalConfigurationClassPathLoader_H_

#include "J2ObjC_header.h"

@class IOSClass;
@class JavaIoReader;
@protocol JavaUtilList;
@protocol OrgMockitoConfigurationIMockitoConfiguration;
@protocol OrgMockitoPluginsMockMaker;
@protocol OrgMockitoPluginsStackTraceCleanerProvider;

@interface OrgMockitoInternalConfigurationClassPathLoader : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<OrgMockitoPluginsMockMaker>)getMockMaker;

+ (id<OrgMockitoPluginsStackTraceCleanerProvider>)getStackTraceCleanerProvider;

- (id<OrgMockitoConfigurationIMockitoConfiguration>)loadConfiguration;

#pragma mark Package-Private

+ (id<OrgMockitoPluginsMockMaker>)findPlatformMockMaker;

+ (id)findPluginImplementationWithIOSClass:(IOSClass *)pluginType
                                    withId:(id)defaultPlugin;

+ (id<JavaUtilList>)loadImplementationsWithIOSClass:(IOSClass *)service;

+ (id<JavaUtilList>)readerToLinesWithJavaIoReader:(JavaIoReader *)reader;

+ (NSString *)stripCommentAndWhitespaceWithNSString:(NSString *)line;

@end

J2OBJC_STATIC_INIT(OrgMockitoInternalConfigurationClassPathLoader)

FOUNDATION_EXPORT NSString *OrgMockitoInternalConfigurationClassPathLoader_MOCKITO_CONFIGURATION_CLASS_NAME_;
J2OBJC_STATIC_FIELD_GETTER(OrgMockitoInternalConfigurationClassPathLoader, MOCKITO_CONFIGURATION_CLASS_NAME_, NSString *)

FOUNDATION_EXPORT id<OrgMockitoPluginsMockMaker> OrgMockitoInternalConfigurationClassPathLoader_getMockMaker();

FOUNDATION_EXPORT id<OrgMockitoPluginsStackTraceCleanerProvider> OrgMockitoInternalConfigurationClassPathLoader_getStackTraceCleanerProvider();

FOUNDATION_EXPORT id<OrgMockitoPluginsMockMaker> OrgMockitoInternalConfigurationClassPathLoader_findPlatformMockMaker();

FOUNDATION_EXPORT id OrgMockitoInternalConfigurationClassPathLoader_findPluginImplementationWithIOSClass_withId_(IOSClass *pluginType, id defaultPlugin);

FOUNDATION_EXPORT id<JavaUtilList> OrgMockitoInternalConfigurationClassPathLoader_loadImplementationsWithIOSClass_(IOSClass *service);

FOUNDATION_EXPORT id<JavaUtilList> OrgMockitoInternalConfigurationClassPathLoader_readerToLinesWithJavaIoReader_(JavaIoReader *reader);

FOUNDATION_EXPORT NSString *OrgMockitoInternalConfigurationClassPathLoader_stripCommentAndWhitespaceWithNSString_(NSString *line);

FOUNDATION_EXPORT void OrgMockitoInternalConfigurationClassPathLoader_init(OrgMockitoInternalConfigurationClassPathLoader *self);

FOUNDATION_EXPORT OrgMockitoInternalConfigurationClassPathLoader *new_OrgMockitoInternalConfigurationClassPathLoader_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalConfigurationClassPathLoader)

#endif // _OrgMockitoInternalConfigurationClassPathLoader_H_
