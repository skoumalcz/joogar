//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/hash/AbstractStreamingHashFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL")
#if ComGoogleCommonHashAbstractStreamingHashFunction_RESTRICT
#define ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL 0
#else
#define ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonHashAbstractStreamingHashFunction_RESTRICT

#if !defined (_ComGoogleCommonHashAbstractStreamingHashFunction_) && (ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL || ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE)
#define _ComGoogleCommonHashAbstractStreamingHashFunction_

#define ComGoogleCommonHashHashFunction_RESTRICT 1
#define ComGoogleCommonHashHashFunction_INCLUDE 1
#include "com/google/common/hash/HashFunction.h"

@class ComGoogleCommonHashHashCode;
@class IOSByteArray;
@class JavaNioCharsetCharset;
@protocol ComGoogleCommonHashFunnel;
@protocol ComGoogleCommonHashHasher;
@protocol JavaLangCharSequence;

@interface ComGoogleCommonHashAbstractStreamingHashFunction : NSObject < ComGoogleCommonHashHashFunction >

#pragma mark Public

- (ComGoogleCommonHashHashCode *)hashBytesWithByteArray:(IOSByteArray *)input;

- (ComGoogleCommonHashHashCode *)hashBytesWithByteArray:(IOSByteArray *)input
                                                withInt:(jint)off
                                                withInt:(jint)len;

- (ComGoogleCommonHashHashCode *)hashIntWithInt:(jint)input;

- (ComGoogleCommonHashHashCode *)hashLongWithLong:(jlong)input;

- (ComGoogleCommonHashHashCode *)hashObjectWithId:(id)instance
                    withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel;

- (ComGoogleCommonHashHashCode *)hashStringWithJavaLangCharSequence:(id<JavaLangCharSequence>)input
                                          withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (ComGoogleCommonHashHashCode *)hashUnencodedCharsWithJavaLangCharSequence:(id<JavaLangCharSequence>)input;

- (id<ComGoogleCommonHashHasher>)newHasherWithInt:(jint)expectedInputSize OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashAbstractStreamingHashFunction)

FOUNDATION_EXPORT void ComGoogleCommonHashAbstractStreamingHashFunction_init(ComGoogleCommonHashAbstractStreamingHashFunction *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashAbstractStreamingHashFunction)

#endif

#if !defined (_ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_) && (ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL || ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_INCLUDE)
#define _ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_

#define ComGoogleCommonHashAbstractHasher_RESTRICT 1
#define ComGoogleCommonHashAbstractHasher_INCLUDE 1
#include "com/google/common/hash/AbstractHasher.h"

@class ComGoogleCommonHashHashCode;
@class IOSByteArray;
@class JavaNioByteBuffer;
@protocol ComGoogleCommonHashFunnel;
@protocol ComGoogleCommonHashHasher;
@protocol JavaLangCharSequence;

@interface ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher : ComGoogleCommonHashAbstractHasher

#pragma mark Public

- (ComGoogleCommonHashHashCode *)hash__;

- (id<ComGoogleCommonHashHasher>)putByteWithByte:(jbyte)b;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes
                                               withInt:(jint)off
                                               withInt:(jint)len;

- (id<ComGoogleCommonHashHasher>)putCharWithChar:(jchar)c;

- (id<ComGoogleCommonHashHasher>)putIntWithInt:(jint)i;

- (id<ComGoogleCommonHashHasher>)putLongWithLong:(jlong)l;

- (id<ComGoogleCommonHashHasher>)putObjectWithId:(id)instance
                   withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel;

- (id<ComGoogleCommonHashHasher>)putShortWithShort:(jshort)s;

- (id<ComGoogleCommonHashHasher>)putUnencodedCharsWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence;

#pragma mark Protected

- (instancetype)initWithInt:(jint)chunkSize;

- (instancetype)initWithInt:(jint)chunkSize
                    withInt:(jint)bufferSize;

- (void)processWithJavaNioByteBuffer:(JavaNioByteBuffer *)bb;

- (void)processRemainingWithJavaNioByteBuffer:(JavaNioByteBuffer *)bb;

#pragma mark Package-Private

- (ComGoogleCommonHashHashCode *)makeHash;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher)

FOUNDATION_EXPORT void ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_initWithInt_(ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher *self, jint chunkSize);

FOUNDATION_EXPORT void ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_initWithInt_withInt_(ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher *self, jint chunkSize, jint bufferSize);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher)

#endif

#pragma pop_macro("ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL")
