//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/ExecutionList.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentExecutionList_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentExecutionList_RESTRICT
#define ComGoogleCommonUtilConcurrentExecutionList_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentExecutionList_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentExecutionList_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentExecutionList_) && (ComGoogleCommonUtilConcurrentExecutionList_INCLUDE_ALL || ComGoogleCommonUtilConcurrentExecutionList_INCLUDE)
#define _ComGoogleCommonUtilConcurrentExecutionList_

@class JavaUtilLoggingLogger;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentExecutor;

@interface ComGoogleCommonUtilConcurrentExecutionList : NSObject

#pragma mark Public

- (instancetype)init;

- (void)addWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
 withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (void)execute;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentExecutionList)

FOUNDATION_EXPORT JavaUtilLoggingLogger *ComGoogleCommonUtilConcurrentExecutionList_log_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonUtilConcurrentExecutionList, log_, JavaUtilLoggingLogger *)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentExecutionList_init(ComGoogleCommonUtilConcurrentExecutionList *self);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentExecutionList *new_ComGoogleCommonUtilConcurrentExecutionList_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentExecutionList)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentExecutionList_INCLUDE_ALL")
