//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/reflect/Invokable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonReflectInvokable_INCLUDE_ALL")
#if ComGoogleCommonReflectInvokable_RESTRICT
#define ComGoogleCommonReflectInvokable_INCLUDE_ALL 0
#else
#define ComGoogleCommonReflectInvokable_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonReflectInvokable_RESTRICT
#if ComGoogleCommonReflectInvokable_ConstructorInvokable_INCLUDE
#define ComGoogleCommonReflectInvokable_INCLUDE 1
#endif
#if ComGoogleCommonReflectInvokable_MethodInvokable_INCLUDE
#define ComGoogleCommonReflectInvokable_INCLUDE 1
#endif

#if !defined (_ComGoogleCommonReflectInvokable_) && (ComGoogleCommonReflectInvokable_INCLUDE_ALL || ComGoogleCommonReflectInvokable_INCLUDE)
#define _ComGoogleCommonReflectInvokable_

#define ComGoogleCommonReflectElement_RESTRICT 1
#define ComGoogleCommonReflectElement_INCLUDE 1
#include "com/google/common/reflect/Element.h"

#define JavaLangReflectGenericDeclaration_RESTRICT 1
#define JavaLangReflectGenericDeclaration_INCLUDE 1
#include "java/lang/reflect/GenericDeclaration.h"

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonReflectTypeToken;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangReflectAccessibleObject;
@class JavaLangReflectConstructor;
@class JavaLangReflectMethod;
@protocol JavaLangReflectMember;
@protocol JavaLangReflectType;

@interface ComGoogleCommonReflectInvokable : ComGoogleCommonReflectElement < JavaLangReflectGenericDeclaration >

#pragma mark Public

+ (ComGoogleCommonReflectInvokable *)fromWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)constructor;

+ (ComGoogleCommonReflectInvokable *)fromWithJavaLangReflectMethod:(JavaLangReflectMethod *)method;

- (IOSClass *)getDeclaringClass;

- (ComGoogleCommonCollectImmutableList *)getExceptionTypes;

- (ComGoogleCommonReflectTypeToken *)getOwnerType;

- (ComGoogleCommonCollectImmutableList *)getParameters;

- (ComGoogleCommonReflectTypeToken *)getReturnType;

- (id)invokeWithId:(id)receiver
 withNSObjectArray:(IOSObjectArray *)args;

- (jboolean)isOverridable;

- (jboolean)isVarArgs;

- (ComGoogleCommonReflectInvokable *)returningWithIOSClass:(IOSClass *)returnType;

- (ComGoogleCommonReflectInvokable *)returningWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)returnType;

#pragma mark Package-Private

- (instancetype)initWithJavaLangReflectAccessibleObject:(JavaLangReflectAccessibleObject<JavaLangReflectMember> *)member;

- (IOSObjectArray *)getGenericExceptionTypes;

- (IOSObjectArray *)getGenericParameterTypes;

- (id<JavaLangReflectType>)getGenericReturnType;

- (IOSObjectArray *)getParameterAnnotations;

- (id)invokeInternalWithId:(id)receiver
         withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectInvokable)

FOUNDATION_EXPORT void ComGoogleCommonReflectInvokable_initWithJavaLangReflectAccessibleObject_(ComGoogleCommonReflectInvokable *self, JavaLangReflectAccessibleObject<JavaLangReflectMember> *member);

FOUNDATION_EXPORT ComGoogleCommonReflectInvokable *ComGoogleCommonReflectInvokable_fromWithJavaLangReflectMethod_(JavaLangReflectMethod *method);

FOUNDATION_EXPORT ComGoogleCommonReflectInvokable *ComGoogleCommonReflectInvokable_fromWithJavaLangReflectConstructor_(JavaLangReflectConstructor *constructor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectInvokable)

#endif

#if !defined (_ComGoogleCommonReflectInvokable_MethodInvokable_) && (ComGoogleCommonReflectInvokable_INCLUDE_ALL || ComGoogleCommonReflectInvokable_MethodInvokable_INCLUDE)
#define _ComGoogleCommonReflectInvokable_MethodInvokable_

@class IOSObjectArray;
@class JavaLangReflectMethod;
@protocol JavaLangReflectType;

@interface ComGoogleCommonReflectInvokable_MethodInvokable : ComGoogleCommonReflectInvokable {
 @public
  JavaLangReflectMethod *method_;
}

#pragma mark Public

- (IOSObjectArray *)getTypeParameters;

- (jboolean)isOverridable;

- (jboolean)isVarArgs;

#pragma mark Package-Private

- (instancetype)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)method;

- (IOSObjectArray *)getGenericExceptionTypes;

- (IOSObjectArray *)getGenericParameterTypes;

- (id<JavaLangReflectType>)getGenericReturnType;

- (IOSObjectArray *)getParameterAnnotations;

- (id)invokeInternalWithId:(id)receiver
         withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectInvokable_MethodInvokable)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectInvokable_MethodInvokable, method_, JavaLangReflectMethod *)

FOUNDATION_EXPORT void ComGoogleCommonReflectInvokable_MethodInvokable_initWithJavaLangReflectMethod_(ComGoogleCommonReflectInvokable_MethodInvokable *self, JavaLangReflectMethod *method);

FOUNDATION_EXPORT ComGoogleCommonReflectInvokable_MethodInvokable *new_ComGoogleCommonReflectInvokable_MethodInvokable_initWithJavaLangReflectMethod_(JavaLangReflectMethod *method) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectInvokable_MethodInvokable)

#endif

#if !defined (_ComGoogleCommonReflectInvokable_ConstructorInvokable_) && (ComGoogleCommonReflectInvokable_INCLUDE_ALL || ComGoogleCommonReflectInvokable_ConstructorInvokable_INCLUDE)
#define _ComGoogleCommonReflectInvokable_ConstructorInvokable_

@class IOSObjectArray;
@class JavaLangReflectConstructor;
@protocol JavaLangReflectType;

@interface ComGoogleCommonReflectInvokable_ConstructorInvokable : ComGoogleCommonReflectInvokable {
 @public
  JavaLangReflectConstructor *constructor_;
}

#pragma mark Public

- (IOSObjectArray *)getTypeParameters;

- (jboolean)isOverridable;

- (jboolean)isVarArgs;

#pragma mark Package-Private

- (instancetype)initWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)constructor;

- (IOSObjectArray *)getGenericExceptionTypes;

- (IOSObjectArray *)getGenericParameterTypes;

- (id<JavaLangReflectType>)getGenericReturnType;

- (IOSObjectArray *)getParameterAnnotations;

- (id)invokeInternalWithId:(id)receiver
         withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectInvokable_ConstructorInvokable)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectInvokable_ConstructorInvokable, constructor_, JavaLangReflectConstructor *)

FOUNDATION_EXPORT void ComGoogleCommonReflectInvokable_ConstructorInvokable_initWithJavaLangReflectConstructor_(ComGoogleCommonReflectInvokable_ConstructorInvokable *self, JavaLangReflectConstructor *constructor);

FOUNDATION_EXPORT ComGoogleCommonReflectInvokable_ConstructorInvokable *new_ComGoogleCommonReflectInvokable_ConstructorInvokable_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *constructor) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectInvokable_ConstructorInvokable)

#endif

#pragma pop_macro("ComGoogleCommonReflectInvokable_INCLUDE_ALL")
