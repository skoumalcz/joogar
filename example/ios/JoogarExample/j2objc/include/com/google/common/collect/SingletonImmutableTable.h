//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/collect/SingletonImmutableTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonCollectSingletonImmutableTable_INCLUDE_ALL")
#if ComGoogleCommonCollectSingletonImmutableTable_RESTRICT
#define ComGoogleCommonCollectSingletonImmutableTable_INCLUDE_ALL 0
#else
#define ComGoogleCommonCollectSingletonImmutableTable_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonCollectSingletonImmutableTable_RESTRICT

#if !defined (_ComGoogleCommonCollectSingletonImmutableTable_) && (ComGoogleCommonCollectSingletonImmutableTable_INCLUDE_ALL || ComGoogleCommonCollectSingletonImmutableTable_INCLUDE)
#define _ComGoogleCommonCollectSingletonImmutableTable_

#define ComGoogleCommonCollectImmutableTable_RESTRICT 1
#define ComGoogleCommonCollectImmutableTable_INCLUDE 1
#include "com/google/common/collect/ImmutableTable.h"

@class ComGoogleCommonCollectImmutableCollection;
@class ComGoogleCommonCollectImmutableMap;
@class ComGoogleCommonCollectImmutableSet;
@protocol ComGoogleCommonCollectTable_Cell;

@interface ComGoogleCommonCollectSingletonImmutableTable : ComGoogleCommonCollectImmutableTable {
 @public
  id singleRowKey_;
  id singleColumnKey_;
  id singleValue_;
}

#pragma mark Public

- (ComGoogleCommonCollectImmutableMap *)columnWithId:(id)columnKey;

- (ComGoogleCommonCollectImmutableMap *)columnMap;

- (ComGoogleCommonCollectImmutableMap *)rowMap;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectTable_Cell:(id<ComGoogleCommonCollectTable_Cell>)cell;

- (instancetype)initWithId:(id)rowKey
                    withId:(id)columnKey
                    withId:(id)value;

- (ComGoogleCommonCollectImmutableSet *)createCellSet;

- (ComGoogleCommonCollectImmutableCollection *)createValues;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectSingletonImmutableTable)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectSingletonImmutableTable, singleRowKey_, id)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectSingletonImmutableTable, singleColumnKey_, id)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectSingletonImmutableTable, singleValue_, id)

FOUNDATION_EXPORT void ComGoogleCommonCollectSingletonImmutableTable_initWithId_withId_withId_(ComGoogleCommonCollectSingletonImmutableTable *self, id rowKey, id columnKey, id value);

FOUNDATION_EXPORT ComGoogleCommonCollectSingletonImmutableTable *new_ComGoogleCommonCollectSingletonImmutableTable_initWithId_withId_withId_(id rowKey, id columnKey, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComGoogleCommonCollectSingletonImmutableTable_initWithComGoogleCommonCollectTable_Cell_(ComGoogleCommonCollectSingletonImmutableTable *self, id<ComGoogleCommonCollectTable_Cell> cell);

FOUNDATION_EXPORT ComGoogleCommonCollectSingletonImmutableTable *new_ComGoogleCommonCollectSingletonImmutableTable_initWithComGoogleCommonCollectTable_Cell_(id<ComGoogleCommonCollectTable_Cell> cell) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectSingletonImmutableTable)

#endif

#pragma pop_macro("ComGoogleCommonCollectSingletonImmutableTable_INCLUDE_ALL")
