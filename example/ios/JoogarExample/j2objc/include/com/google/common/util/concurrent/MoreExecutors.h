//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/MoreExecutors.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentMoreExecutors_RESTRICT
#define ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentMoreExecutors_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_

@class JavaLangThread;
@class JavaUtilConcurrentScheduledThreadPoolExecutor;
@class JavaUtilConcurrentThreadPoolExecutor;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol ComGoogleCommonBaseSupplier;
@protocol ComGoogleCommonUtilConcurrentListeningExecutorService;
@protocol ComGoogleCommonUtilConcurrentListeningScheduledExecutorService;
@protocol JavaLangRunnable;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilConcurrentScheduledExecutorService;
@protocol JavaUtilConcurrentThreadFactory;

@interface ComGoogleCommonUtilConcurrentMoreExecutors : NSObject

#pragma mark Public

+ (void)addDelayedShutdownHookWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)service
                                                           withLong:(jlong)terminationTimeout
                                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

+ (id<JavaUtilConcurrentExecutor>)directExecutor;

+ (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor;

+ (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor
                                                                                                  withLong:(jlong)terminationTimeout
                                                                        withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

+ (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor;

+ (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor
                                                                                                                             withLong:(jlong)terminationTimeout
                                                                                                   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

+ (id<ComGoogleCommonUtilConcurrentListeningExecutorService>)listeningDecoratorWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)delegate;

+ (id<ComGoogleCommonUtilConcurrentListeningScheduledExecutorService>)listeningDecoratorWithJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)delegate;

+ (id<ComGoogleCommonUtilConcurrentListeningExecutorService>)newDirectExecutorService OBJC_METHOD_FAMILY_NONE;

+ (id<JavaUtilConcurrentThreadFactory>)platformThreadFactory;

+ (id<ComGoogleCommonUtilConcurrentListeningExecutorService>)sameThreadExecutor;

+ (jboolean)shutdownAndAwaitTerminationWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)service
                                                                    withLong:(jlong)timeout
                                          withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

#pragma mark Package-Private

+ (id)invokeAnyImplWithComGoogleCommonUtilConcurrentListeningExecutorService:(id<ComGoogleCommonUtilConcurrentListeningExecutorService>)executorService
                                                      withJavaUtilCollection:(id<JavaUtilCollection>)tasks
                                                                 withBoolean:(jboolean)timed
                                                                    withLong:(jlong)nanos;

+ (JavaLangThread *)newThreadWithNSString:(NSString *)name
                     withJavaLangRunnable:(id<JavaLangRunnable>)runnable OBJC_METHOD_FAMILY_NONE;

+ (id<JavaUtilConcurrentExecutor>)renamingDecoratorWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor
                                                  withComGoogleCommonBaseSupplier:(id<ComGoogleCommonBaseSupplier>)nameSupplier;

+ (id<JavaUtilConcurrentExecutorService>)renamingDecoratorWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)service
                                                                withComGoogleCommonBaseSupplier:(id<ComGoogleCommonBaseSupplier>)nameSupplier;

+ (id<JavaUtilConcurrentScheduledExecutorService>)renamingDecoratorWithJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)service
                                                                                  withComGoogleCommonBaseSupplier:(id<ComGoogleCommonBaseSupplier>)nameSupplier;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentMoreExecutors)

FOUNDATION_EXPORT id<JavaUtilConcurrentExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor_withLong_withJavaUtilConcurrentTimeUnitEnum_(JavaUtilConcurrentThreadPoolExecutor *executor, jlong terminationTimeout, JavaUtilConcurrentTimeUnitEnum *timeUnit);

FOUNDATION_EXPORT id<JavaUtilConcurrentScheduledExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor_withLong_withJavaUtilConcurrentTimeUnitEnum_(JavaUtilConcurrentScheduledThreadPoolExecutor *executor, jlong terminationTimeout, JavaUtilConcurrentTimeUnitEnum *timeUnit);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentMoreExecutors_addDelayedShutdownHookWithJavaUtilConcurrentExecutorService_withLong_withJavaUtilConcurrentTimeUnitEnum_(id<JavaUtilConcurrentExecutorService> service, jlong terminationTimeout, JavaUtilConcurrentTimeUnitEnum *timeUnit);

FOUNDATION_EXPORT id<JavaUtilConcurrentExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor_(JavaUtilConcurrentThreadPoolExecutor *executor);

FOUNDATION_EXPORT id<JavaUtilConcurrentScheduledExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor_(JavaUtilConcurrentScheduledThreadPoolExecutor *executor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListeningExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_sameThreadExecutor();

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListeningExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_newDirectExecutorService();

FOUNDATION_EXPORT id<JavaUtilConcurrentExecutor> ComGoogleCommonUtilConcurrentMoreExecutors_directExecutor();

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListeningExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_listeningDecoratorWithJavaUtilConcurrentExecutorService_(id<JavaUtilConcurrentExecutorService> delegate);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListeningScheduledExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_listeningDecoratorWithJavaUtilConcurrentScheduledExecutorService_(id<JavaUtilConcurrentScheduledExecutorService> delegate);

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentMoreExecutors_invokeAnyImplWithComGoogleCommonUtilConcurrentListeningExecutorService_withJavaUtilCollection_withBoolean_withLong_(id<ComGoogleCommonUtilConcurrentListeningExecutorService> executorService, id<JavaUtilCollection> tasks, jboolean timed, jlong nanos);

FOUNDATION_EXPORT id<JavaUtilConcurrentThreadFactory> ComGoogleCommonUtilConcurrentMoreExecutors_platformThreadFactory();

FOUNDATION_EXPORT JavaLangThread *ComGoogleCommonUtilConcurrentMoreExecutors_newThreadWithNSString_withJavaLangRunnable_(NSString *name, id<JavaLangRunnable> runnable);

FOUNDATION_EXPORT id<JavaUtilConcurrentExecutor> ComGoogleCommonUtilConcurrentMoreExecutors_renamingDecoratorWithJavaUtilConcurrentExecutor_withComGoogleCommonBaseSupplier_(id<JavaUtilConcurrentExecutor> executor, id<ComGoogleCommonBaseSupplier> nameSupplier);

FOUNDATION_EXPORT id<JavaUtilConcurrentExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_renamingDecoratorWithJavaUtilConcurrentExecutorService_withComGoogleCommonBaseSupplier_(id<JavaUtilConcurrentExecutorService> service, id<ComGoogleCommonBaseSupplier> nameSupplier);

FOUNDATION_EXPORT id<JavaUtilConcurrentScheduledExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_renamingDecoratorWithJavaUtilConcurrentScheduledExecutorService_withComGoogleCommonBaseSupplier_(id<JavaUtilConcurrentScheduledExecutorService> service, id<ComGoogleCommonBaseSupplier> nameSupplier);

FOUNDATION_EXPORT jboolean ComGoogleCommonUtilConcurrentMoreExecutors_shutdownAndAwaitTerminationWithJavaUtilConcurrentExecutorService_withLong_withJavaUtilConcurrentTimeUnitEnum_(id<JavaUtilConcurrentExecutorService> service, jlong timeout, JavaUtilConcurrentTimeUnitEnum *unit);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentMoreExecutors)

#endif

#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_Application_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_Application_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_Application_

@class JavaLangThread;
@class JavaUtilConcurrentScheduledThreadPoolExecutor;
@class JavaUtilConcurrentThreadPoolExecutor;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentMoreExecutors_Application : NSObject

#pragma mark Package-Private

- (instancetype)init;

- (void)addDelayedShutdownHookWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)service
                                                           withLong:(jlong)terminationTimeout
                                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

- (void)addShutdownHookWithJavaLangThread:(JavaLangThread *)hook;

- (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor;

- (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor
                                                                                                  withLong:(jlong)terminationTimeout
                                                                        withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

- (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor;

- (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor
                                                                                                                             withLong:(jlong)terminationTimeout
                                                                                                   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentMoreExecutors_Application)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentMoreExecutors_Application_init(ComGoogleCommonUtilConcurrentMoreExecutors_Application *self);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentMoreExecutors_Application *new_ComGoogleCommonUtilConcurrentMoreExecutors_Application_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentMoreExecutors_Application)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL")
