//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/base/PairwiseEquivalence.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonBasePairwiseEquivalence_INCLUDE_ALL")
#if ComGoogleCommonBasePairwiseEquivalence_RESTRICT
#define ComGoogleCommonBasePairwiseEquivalence_INCLUDE_ALL 0
#else
#define ComGoogleCommonBasePairwiseEquivalence_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonBasePairwiseEquivalence_RESTRICT

#if !defined (_ComGoogleCommonBasePairwiseEquivalence_) && (ComGoogleCommonBasePairwiseEquivalence_INCLUDE_ALL || ComGoogleCommonBasePairwiseEquivalence_INCLUDE)
#define _ComGoogleCommonBasePairwiseEquivalence_

#define ComGoogleCommonBaseEquivalence_RESTRICT 1
#define ComGoogleCommonBaseEquivalence_INCLUDE 1
#include "com/google/common/base/Equivalence.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@protocol JavaLangIterable;

@interface ComGoogleCommonBasePairwiseEquivalence : ComGoogleCommonBaseEquivalence < JavaIoSerializable > {
 @public
  ComGoogleCommonBaseEquivalence *elementEquivalence_;
}

#pragma mark Public

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Protected

- (jboolean)doEquivalentWithId:(id<JavaLangIterable>)iterableA
                        withId:(id<JavaLangIterable>)iterableB;

- (jint)doHashWithId:(id<JavaLangIterable>)iterable;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonBaseEquivalence:(ComGoogleCommonBaseEquivalence *)elementEquivalence;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBasePairwiseEquivalence)

J2OBJC_FIELD_SETTER(ComGoogleCommonBasePairwiseEquivalence, elementEquivalence_, ComGoogleCommonBaseEquivalence *)

FOUNDATION_EXPORT void ComGoogleCommonBasePairwiseEquivalence_initWithComGoogleCommonBaseEquivalence_(ComGoogleCommonBasePairwiseEquivalence *self, ComGoogleCommonBaseEquivalence *elementEquivalence);

FOUNDATION_EXPORT ComGoogleCommonBasePairwiseEquivalence *new_ComGoogleCommonBasePairwiseEquivalence_initWithComGoogleCommonBaseEquivalence_(ComGoogleCommonBaseEquivalence *elementEquivalence) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonBasePairwiseEquivalence)

#endif

#pragma pop_macro("ComGoogleCommonBasePairwiseEquivalence_INCLUDE_ALL")
