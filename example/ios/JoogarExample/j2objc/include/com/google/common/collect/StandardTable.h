//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/collect/StandardTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonCollectStandardTable_INCLUDE_ALL")
#if ComGoogleCommonCollectStandardTable_RESTRICT
#define ComGoogleCommonCollectStandardTable_INCLUDE_ALL 0
#else
#define ComGoogleCommonCollectStandardTable_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonCollectStandardTable_RESTRICT
#if ComGoogleCommonCollectStandardTable_RowMap_EntrySet_INCLUDE
#define ComGoogleCommonCollectStandardTable_TableSet_INCLUDE 1
#endif

#if !defined (_ComGoogleCommonCollectStandardTable_) && (ComGoogleCommonCollectStandardTable_INCLUDE_ALL || ComGoogleCommonCollectStandardTable_INCLUDE)
#define _ComGoogleCommonCollectStandardTable_

#define ComGoogleCommonCollectAbstractTable_RESTRICT 1
#define ComGoogleCommonCollectAbstractTable_INCLUDE 1
#include "com/google/common/collect/AbstractTable.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@protocol ComGoogleCommonBaseSupplier;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectStandardTable : ComGoogleCommonCollectAbstractTable < JavaIoSerializable > {
 @public
  id<JavaUtilMap> backingMap_;
  id<ComGoogleCommonBaseSupplier> factory_;
}

#pragma mark Public

- (id<JavaUtilSet>)cellSet;

- (void)clear;

- (id<JavaUtilMap>)columnWithId:(id)columnKey;

- (id<JavaUtilSet>)columnKeySet;

- (id<JavaUtilMap>)columnMap;

- (jboolean)containsWithId:(id)rowKey
                    withId:(id)columnKey;

- (jboolean)containsColumnWithId:(id)columnKey;

- (jboolean)containsRowWithId:(id)rowKey;

- (jboolean)containsValueWithId:(id)value;

- (id)getWithId:(id)rowKey
         withId:(id)columnKey;

- (jboolean)isEmpty;

- (id)putWithId:(id)rowKey
         withId:(id)columnKey
         withId:(id)value;

- (id)removeWithId:(id)rowKey
            withId:(id)columnKey;

- (id<JavaUtilMap>)rowWithId:(id)rowKey;

- (id<JavaUtilSet>)rowKeySet;

- (id<JavaUtilMap>)rowMap;

- (jint)size;

- (id<JavaUtilCollection>)values;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backingMap
    withComGoogleCommonBaseSupplier:(id<ComGoogleCommonBaseSupplier>)factory;

- (id<JavaUtilIterator>)cellIterator;

- (id<JavaUtilIterator>)createColumnKeyIterator;

- (id<JavaUtilMap>)createRowMap;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectStandardTable, backingMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectStandardTable, factory_, id<ComGoogleCommonBaseSupplier>)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_initWithJavaUtilMap_withComGoogleCommonBaseSupplier_(ComGoogleCommonCollectStandardTable *self, id<JavaUtilMap> backingMap, id<ComGoogleCommonBaseSupplier> factory);

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable *new_ComGoogleCommonCollectStandardTable_initWithJavaUtilMap_withComGoogleCommonBaseSupplier_(id<JavaUtilMap> backingMap, id<ComGoogleCommonBaseSupplier> factory) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable)

#endif

#if !defined (_ComGoogleCommonCollectStandardTable_TableSet_) && (ComGoogleCommonCollectStandardTable_INCLUDE_ALL || ComGoogleCommonCollectStandardTable_TableSet_INCLUDE)
#define _ComGoogleCommonCollectStandardTable_TableSet_

#define ComGoogleCommonCollectSets_RESTRICT 1
#define ComGoogleCommonCollectSets_ImprovedAbstractSet_INCLUDE 1
#include "com/google/common/collect/Sets.h"

@class ComGoogleCommonCollectStandardTable;

@interface ComGoogleCommonCollectStandardTable_TableSet : ComGoogleCommonCollectSets_ImprovedAbstractSet

#pragma mark Public

- (void)clear;

- (jboolean)isEmpty;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectStandardTable:(ComGoogleCommonCollectStandardTable *)outer$;


@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable_TableSet)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_TableSet_initWithComGoogleCommonCollectStandardTable_(ComGoogleCommonCollectStandardTable_TableSet *self, ComGoogleCommonCollectStandardTable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable_TableSet)

#endif

#if !defined (_ComGoogleCommonCollectStandardTable_Row_) && (ComGoogleCommonCollectStandardTable_INCLUDE_ALL || ComGoogleCommonCollectStandardTable_Row_INCLUDE)
#define _ComGoogleCommonCollectStandardTable_Row_

#define ComGoogleCommonCollectMaps_RESTRICT 1
#define ComGoogleCommonCollectMaps_ImprovedAbstractMap_INCLUDE 1
#include "com/google/common/collect/Maps.h"

@class ComGoogleCommonCollectStandardTable;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectStandardTable_Row : ComGoogleCommonCollectMaps_ImprovedAbstractMap {
 @public
  id rowKey_;
  id<JavaUtilMap> backingRowMap_;
}

#pragma mark Public

- (void)clear;

- (jboolean)containsKeyWithId:(id)key;

- (id)getWithId:(id)key;

- (id)putWithId:(id)key
         withId:(id)value;

- (id)removeWithId:(id)key;

#pragma mark Protected

- (id<JavaUtilSet>)createEntrySet;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectStandardTable:(ComGoogleCommonCollectStandardTable *)outer$
                                                     withId:(id)rowKey;

- (id<JavaUtilMap>)backingRowMap;

- (id<JavaUtilMap>)computeBackingRowMap;

- (void)maintainEmptyInvariant;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable_Row)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectStandardTable_Row, rowKey_, id)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectStandardTable_Row, backingRowMap_, id<JavaUtilMap>)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_Row_initWithComGoogleCommonCollectStandardTable_withId_(ComGoogleCommonCollectStandardTable_Row *self, ComGoogleCommonCollectStandardTable *outer$, id rowKey);

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_Row *new_ComGoogleCommonCollectStandardTable_Row_initWithComGoogleCommonCollectStandardTable_withId_(ComGoogleCommonCollectStandardTable *outer$, id rowKey) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable_Row)

#endif

#if !defined (_ComGoogleCommonCollectStandardTable_RowMap_) && (ComGoogleCommonCollectStandardTable_INCLUDE_ALL || ComGoogleCommonCollectStandardTable_RowMap_INCLUDE)
#define _ComGoogleCommonCollectStandardTable_RowMap_

#define ComGoogleCommonCollectMaps_RESTRICT 1
#define ComGoogleCommonCollectMaps_ImprovedAbstractMap_INCLUDE 1
#include "com/google/common/collect/Maps.h"

@class ComGoogleCommonCollectStandardTable;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectStandardTable_RowMap : ComGoogleCommonCollectMaps_ImprovedAbstractMap

#pragma mark Public

- (jboolean)containsKeyWithId:(id)key;

- (id<JavaUtilMap>)getWithId:(id)key;

- (id<JavaUtilMap>)removeWithId:(id)key;

#pragma mark Protected

- (id<JavaUtilSet>)createEntrySet;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectStandardTable:(ComGoogleCommonCollectStandardTable *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable_RowMap)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_RowMap_initWithComGoogleCommonCollectStandardTable_(ComGoogleCommonCollectStandardTable_RowMap *self, ComGoogleCommonCollectStandardTable *outer$);

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_RowMap *new_ComGoogleCommonCollectStandardTable_RowMap_initWithComGoogleCommonCollectStandardTable_(ComGoogleCommonCollectStandardTable *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable_RowMap)

#endif

#if !defined (_ComGoogleCommonCollectStandardTable_RowMap_EntrySet_) && (ComGoogleCommonCollectStandardTable_INCLUDE_ALL || ComGoogleCommonCollectStandardTable_RowMap_EntrySet_INCLUDE)
#define _ComGoogleCommonCollectStandardTable_RowMap_EntrySet_

@class ComGoogleCommonCollectStandardTable_RowMap;
@protocol JavaUtilIterator;

@interface ComGoogleCommonCollectStandardTable_RowMap_EntrySet : ComGoogleCommonCollectStandardTable_TableSet

#pragma mark Public

- (jboolean)containsWithId:(id)obj;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)obj;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectStandardTable_RowMap:(ComGoogleCommonCollectStandardTable_RowMap *)outer$;


@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable_RowMap_EntrySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_RowMap_EntrySet_initWithComGoogleCommonCollectStandardTable_RowMap_(ComGoogleCommonCollectStandardTable_RowMap_EntrySet *self, ComGoogleCommonCollectStandardTable_RowMap *outer$);

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_RowMap_EntrySet *new_ComGoogleCommonCollectStandardTable_RowMap_EntrySet_initWithComGoogleCommonCollectStandardTable_RowMap_(ComGoogleCommonCollectStandardTable_RowMap *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable_RowMap_EntrySet)

#endif

#pragma pop_macro("ComGoogleCommonCollectStandardTable_INCLUDE_ALL")
