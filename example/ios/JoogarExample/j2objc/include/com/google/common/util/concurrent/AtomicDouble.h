//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/AtomicDouble.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentAtomicDouble_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentAtomicDouble_RESTRICT
#define ComGoogleCommonUtilConcurrentAtomicDouble_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentAtomicDouble_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentAtomicDouble_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentAtomicDouble_) && (ComGoogleCommonUtilConcurrentAtomicDouble_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAtomicDouble_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAtomicDouble_

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@interface ComGoogleCommonUtilConcurrentAtomicDouble : NSNumber < JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)initialValue;

- (jdouble)addAndGetWithDouble:(jdouble)delta;

- (jboolean)compareAndSetWithDouble:(jdouble)expect
                         withDouble:(jdouble)update;

- (jdouble)doubleValue;

- (jfloat)floatValue;

- (jdouble)get;

- (jdouble)getAndAddWithDouble:(jdouble)delta;

- (jdouble)getAndSetWithDouble:(jdouble)newValue;

- (jint)intValue;

- (void)lazySetWithDouble:(jdouble)newValue;

- (jlong)longLongValue;

- (void)setWithDouble:(jdouble)newValue;

- (NSString *)description;

- (jboolean)weakCompareAndSetWithDouble:(jdouble)expect
                             withDouble:(jdouble)update;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicDouble)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAtomicDouble_initWithDouble_(ComGoogleCommonUtilConcurrentAtomicDouble *self, jdouble initialValue);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDouble *new_ComGoogleCommonUtilConcurrentAtomicDouble_initWithDouble_(jdouble initialValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAtomicDouble_init(ComGoogleCommonUtilConcurrentAtomicDouble *self);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDouble *new_ComGoogleCommonUtilConcurrentAtomicDouble_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAtomicDouble)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentAtomicDouble_INCLUDE_ALL")
