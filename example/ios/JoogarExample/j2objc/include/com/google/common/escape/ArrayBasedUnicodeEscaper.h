//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/escape/ArrayBasedUnicodeEscaper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonEscapeArrayBasedUnicodeEscaper_INCLUDE_ALL")
#if ComGoogleCommonEscapeArrayBasedUnicodeEscaper_RESTRICT
#define ComGoogleCommonEscapeArrayBasedUnicodeEscaper_INCLUDE_ALL 0
#else
#define ComGoogleCommonEscapeArrayBasedUnicodeEscaper_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonEscapeArrayBasedUnicodeEscaper_RESTRICT

#if !defined (_ComGoogleCommonEscapeArrayBasedUnicodeEscaper_) && (ComGoogleCommonEscapeArrayBasedUnicodeEscaper_INCLUDE_ALL || ComGoogleCommonEscapeArrayBasedUnicodeEscaper_INCLUDE)
#define _ComGoogleCommonEscapeArrayBasedUnicodeEscaper_

#define ComGoogleCommonEscapeUnicodeEscaper_RESTRICT 1
#define ComGoogleCommonEscapeUnicodeEscaper_INCLUDE 1
#include "com/google/common/escape/UnicodeEscaper.h"

@class ComGoogleCommonEscapeArrayBasedEscaperMap;
@class IOSCharArray;
@protocol JavaLangCharSequence;
@protocol JavaUtilMap;

@interface ComGoogleCommonEscapeArrayBasedUnicodeEscaper : ComGoogleCommonEscapeUnicodeEscaper

#pragma mark Public

- (NSString *)escapeWithNSString:(NSString *)s;

#pragma mark Protected

- (instancetype)initWithComGoogleCommonEscapeArrayBasedEscaperMap:(ComGoogleCommonEscapeArrayBasedEscaperMap *)escaperMap
                                                          withInt:(jint)safeMin
                                                          withInt:(jint)safeMax
                                                     withNSString:(NSString *)unsafeReplacement;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)replacementMap
                            withInt:(jint)safeMin
                            withInt:(jint)safeMax
                       withNSString:(NSString *)unsafeReplacement;

- (IOSCharArray *)escapeWithInt:(jint)cp;

- (IOSCharArray *)escapeUnsafeWithInt:(jint)cp;

- (jint)nextEscapeIndexWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq
                                        withInt:(jint)index
                                        withInt:(jint)end;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEscapeArrayBasedUnicodeEscaper)

FOUNDATION_EXPORT void ComGoogleCommonEscapeArrayBasedUnicodeEscaper_initWithJavaUtilMap_withInt_withInt_withNSString_(ComGoogleCommonEscapeArrayBasedUnicodeEscaper *self, id<JavaUtilMap> replacementMap, jint safeMin, jint safeMax, NSString *unsafeReplacement);

FOUNDATION_EXPORT void ComGoogleCommonEscapeArrayBasedUnicodeEscaper_initWithComGoogleCommonEscapeArrayBasedEscaperMap_withInt_withInt_withNSString_(ComGoogleCommonEscapeArrayBasedUnicodeEscaper *self, ComGoogleCommonEscapeArrayBasedEscaperMap *escaperMap, jint safeMin, jint safeMax, NSString *unsafeReplacement);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonEscapeArrayBasedUnicodeEscaper)

#endif

#pragma pop_macro("ComGoogleCommonEscapeArrayBasedUnicodeEscaper_INCLUDE_ALL")
