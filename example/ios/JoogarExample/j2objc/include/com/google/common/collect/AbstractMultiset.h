//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/collect/AbstractMultiset.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonCollectAbstractMultiset_INCLUDE_ALL")
#if ComGoogleCommonCollectAbstractMultiset_RESTRICT
#define ComGoogleCommonCollectAbstractMultiset_INCLUDE_ALL 0
#else
#define ComGoogleCommonCollectAbstractMultiset_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonCollectAbstractMultiset_RESTRICT

#if !defined (_ComGoogleCommonCollectAbstractMultiset_) && (ComGoogleCommonCollectAbstractMultiset_INCLUDE_ALL || ComGoogleCommonCollectAbstractMultiset_INCLUDE)
#define _ComGoogleCommonCollectAbstractMultiset_

#define JavaUtilAbstractCollection_RESTRICT 1
#define JavaUtilAbstractCollection_INCLUDE 1
#include "java/util/AbstractCollection.h"

#define ComGoogleCommonCollectMultiset_RESTRICT 1
#define ComGoogleCommonCollectMultiset_INCLUDE 1
#include "com/google/common/collect/Multiset.h"

@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectAbstractMultiset : JavaUtilAbstractCollection < ComGoogleCommonCollectMultiset >

#pragma mark Public

- (jboolean)addWithId:(id)element;

- (jint)addWithId:(id)element
          withInt:(jint)occurrences;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)elementsToAdd;

- (void)clear;

- (jboolean)containsWithId:(id)element;

- (jint)countWithId:(id)element;

- (id<JavaUtilSet>)elementSet;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)element;

- (jint)removeWithId:(id)element
             withInt:(jint)occurrences;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)elementsToRemove;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)elementsToRetain;

- (jint)setCountWithId:(id)element
               withInt:(jint)count;

- (jboolean)setCountWithId:(id)element
                   withInt:(jint)oldCount
                   withInt:(jint)newCount;

- (jint)size;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)init;

- (id<JavaUtilSet>)createElementSet;

- (id<JavaUtilSet>)createEntrySet;

- (jint)distinctElements;

- (id<JavaUtilIterator>)entryIterator;


@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMultiset)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMultiset_init(ComGoogleCommonCollectAbstractMultiset *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMultiset)

#endif

#if !defined (_ComGoogleCommonCollectAbstractMultiset_ElementSet_) && (ComGoogleCommonCollectAbstractMultiset_INCLUDE_ALL || ComGoogleCommonCollectAbstractMultiset_ElementSet_INCLUDE)
#define _ComGoogleCommonCollectAbstractMultiset_ElementSet_

#define ComGoogleCommonCollectMultisets_RESTRICT 1
#define ComGoogleCommonCollectMultisets_ElementSet_INCLUDE 1
#include "com/google/common/collect/Multisets.h"

@class ComGoogleCommonCollectAbstractMultiset;
@protocol ComGoogleCommonCollectMultiset;

@interface ComGoogleCommonCollectAbstractMultiset_ElementSet : ComGoogleCommonCollectMultisets_ElementSet

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectAbstractMultiset:(ComGoogleCommonCollectAbstractMultiset *)outer$;

- (id<ComGoogleCommonCollectMultiset>)multiset;


@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMultiset_ElementSet)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMultiset_ElementSet_initWithComGoogleCommonCollectAbstractMultiset_(ComGoogleCommonCollectAbstractMultiset_ElementSet *self, ComGoogleCommonCollectAbstractMultiset *outer$);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMultiset_ElementSet *new_ComGoogleCommonCollectAbstractMultiset_ElementSet_initWithComGoogleCommonCollectAbstractMultiset_(ComGoogleCommonCollectAbstractMultiset *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMultiset_ElementSet)

#endif

#if !defined (_ComGoogleCommonCollectAbstractMultiset_EntrySet_) && (ComGoogleCommonCollectAbstractMultiset_INCLUDE_ALL || ComGoogleCommonCollectAbstractMultiset_EntrySet_INCLUDE)
#define _ComGoogleCommonCollectAbstractMultiset_EntrySet_

#define ComGoogleCommonCollectMultisets_RESTRICT 1
#define ComGoogleCommonCollectMultisets_EntrySet_INCLUDE 1
#include "com/google/common/collect/Multisets.h"

@class ComGoogleCommonCollectAbstractMultiset;
@protocol ComGoogleCommonCollectMultiset;
@protocol JavaUtilIterator;

@interface ComGoogleCommonCollectAbstractMultiset_EntrySet : ComGoogleCommonCollectMultisets_EntrySet

#pragma mark Public

- (id<JavaUtilIterator>)iterator;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectAbstractMultiset:(ComGoogleCommonCollectAbstractMultiset *)outer$;

- (id<ComGoogleCommonCollectMultiset>)multiset;


@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMultiset_EntrySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMultiset_EntrySet_initWithComGoogleCommonCollectAbstractMultiset_(ComGoogleCommonCollectAbstractMultiset_EntrySet *self, ComGoogleCommonCollectAbstractMultiset *outer$);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMultiset_EntrySet *new_ComGoogleCommonCollectAbstractMultiset_EntrySet_initWithComGoogleCommonCollectAbstractMultiset_(ComGoogleCommonCollectAbstractMultiset *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMultiset_EntrySet)

#endif

#pragma pop_macro("ComGoogleCommonCollectAbstractMultiset_INCLUDE_ALL")
