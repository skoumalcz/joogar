//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/WrappingExecutorService.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentWrappingExecutorService_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentWrappingExecutorService_RESTRICT
#define ComGoogleCommonUtilConcurrentWrappingExecutorService_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentWrappingExecutorService_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentWrappingExecutorService_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentWrappingExecutorService_) && (ComGoogleCommonUtilConcurrentWrappingExecutorService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentWrappingExecutorService_INCLUDE)
#define _ComGoogleCommonUtilConcurrentWrappingExecutorService_

#define JavaUtilConcurrentExecutorService_RESTRICT 1
#define JavaUtilConcurrentExecutorService_INCLUDE 1
#include "java/util/concurrent/ExecutorService.h"

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilList;

@interface ComGoogleCommonUtilConcurrentWrappingExecutorService : NSObject < JavaUtilConcurrentExecutorService >

#pragma mark Public

- (jboolean)awaitTerminationWithLong:(jlong)timeout
  withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)command;

- (id<JavaUtilList>)invokeAllWithJavaUtilCollection:(id<JavaUtilCollection>)tasks;

- (id<JavaUtilList>)invokeAllWithJavaUtilCollection:(id<JavaUtilCollection>)tasks
                                           withLong:(jlong)timeout
                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)invokeAnyWithJavaUtilCollection:(id<JavaUtilCollection>)tasks;

- (id)invokeAnyWithJavaUtilCollection:(id<JavaUtilCollection>)tasks
                             withLong:(jlong)timeout
   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (jboolean)isShutdown;

- (jboolean)isTerminated;

- (void)shutdown;

- (id<JavaUtilList>)shutdownNow;

- (id<JavaUtilConcurrentFuture>)submitWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)task;

- (id<JavaUtilConcurrentFuture>)submitWithJavaLangRunnable:(id<JavaLangRunnable>)task;

- (id<JavaUtilConcurrentFuture>)submitWithJavaLangRunnable:(id<JavaLangRunnable>)task
                                                    withId:(id)result;

#pragma mark Protected

- (instancetype)initWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)delegate;

- (id<JavaUtilConcurrentCallable>)wrapTaskWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

- (id<JavaLangRunnable>)wrapTaskWithJavaLangRunnable:(id<JavaLangRunnable>)command;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentWrappingExecutorService)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentWrappingExecutorService_initWithJavaUtilConcurrentExecutorService_(ComGoogleCommonUtilConcurrentWrappingExecutorService *self, id<JavaUtilConcurrentExecutorService> delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentWrappingExecutorService)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentWrappingExecutorService_INCLUDE_ALL")
