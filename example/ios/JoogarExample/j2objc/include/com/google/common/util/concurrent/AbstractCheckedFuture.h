//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/AbstractCheckedFuture.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentAbstractCheckedFuture_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentAbstractCheckedFuture_RESTRICT
#define ComGoogleCommonUtilConcurrentAbstractCheckedFuture_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentAbstractCheckedFuture_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentAbstractCheckedFuture_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentAbstractCheckedFuture_) && (ComGoogleCommonUtilConcurrentAbstractCheckedFuture_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractCheckedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractCheckedFuture_

#define ComGoogleCommonUtilConcurrentForwardingListenableFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentForwardingListenableFuture_SimpleForwardingListenableFuture_INCLUDE 1
#include "com/google/common/util/concurrent/ForwardingListenableFuture.h"

#define ComGoogleCommonUtilConcurrentCheckedFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentCheckedFuture_INCLUDE 1
#include "com/google/common/util/concurrent/CheckedFuture.h"

@class JavaLangException;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

@interface ComGoogleCommonUtilConcurrentAbstractCheckedFuture : ComGoogleCommonUtilConcurrentForwardingListenableFuture_SimpleForwardingListenableFuture < ComGoogleCommonUtilConcurrentCheckedFuture >

#pragma mark Public

- (id)checkedGet;

- (id)checkedGetWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

#pragma mark Protected

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate;

- (id)mapExceptionWithJavaLangException:(JavaLangException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractCheckedFuture)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAbstractCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentAbstractCheckedFuture *self, id<ComGoogleCommonUtilConcurrentListenableFuture> delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractCheckedFuture)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentAbstractCheckedFuture_INCLUDE_ALL")
