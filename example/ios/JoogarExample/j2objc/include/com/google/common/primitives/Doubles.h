//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/primitives/Doubles.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonPrimitivesDoubles_INCLUDE_ALL")
#if ComGoogleCommonPrimitivesDoubles_RESTRICT
#define ComGoogleCommonPrimitivesDoubles_INCLUDE_ALL 0
#else
#define ComGoogleCommonPrimitivesDoubles_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonPrimitivesDoubles_RESTRICT

#if !defined (_ComGoogleCommonPrimitivesDoubles_) && (ComGoogleCommonPrimitivesDoubles_INCLUDE_ALL || ComGoogleCommonPrimitivesDoubles_INCLUDE)
#define _ComGoogleCommonPrimitivesDoubles_

@class ComGoogleCommonBaseConverter;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaLangDouble;
@class JavaUtilRegexPattern;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilList;

#define ComGoogleCommonPrimitivesDoubles_BYTES 8

@interface ComGoogleCommonPrimitivesDoubles : NSObject

#pragma mark Public

+ (id<JavaUtilList>)asListWithDoubleArray:(IOSDoubleArray *)backingArray;

+ (jint)compareWithDouble:(jdouble)a
               withDouble:(jdouble)b;

+ (IOSDoubleArray *)concatWithDoubleArray2:(IOSObjectArray *)arrays;

+ (jboolean)containsWithDoubleArray:(IOSDoubleArray *)array
                         withDouble:(jdouble)target;

+ (IOSDoubleArray *)ensureCapacityWithDoubleArray:(IOSDoubleArray *)array
                                          withInt:(jint)minLength
                                          withInt:(jint)padding;

+ (jint)hashCodeWithDouble:(jdouble)value;

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)target;

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
               withDoubleArray:(IOSDoubleArray *)target;

+ (jboolean)isFiniteWithDouble:(jdouble)value;

+ (NSString *)joinWithNSString:(NSString *)separator
               withDoubleArray:(IOSDoubleArray *)array;

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)target;

+ (id<JavaUtilComparator>)lexicographicalComparator;

+ (jdouble)maxWithDoubleArray:(IOSDoubleArray *)array;

+ (jdouble)minWithDoubleArray:(IOSDoubleArray *)array;

+ (ComGoogleCommonBaseConverter *)stringConverter;

+ (IOSDoubleArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

+ (JavaLangDouble *)tryParseWithNSString:(NSString *)string;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesDoubles)

J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonPrimitivesDoubles, BYTES, jint)

FOUNDATION_EXPORT JavaUtilRegexPattern *ComGoogleCommonPrimitivesDoubles_FLOATING_POINT_PATTERN_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonPrimitivesDoubles, FLOATING_POINT_PATTERN_, JavaUtilRegexPattern *)

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesDoubles_hashCodeWithDouble_(jdouble value);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesDoubles_compareWithDouble_withDouble_(jdouble a, jdouble b);

FOUNDATION_EXPORT jboolean ComGoogleCommonPrimitivesDoubles_isFiniteWithDouble_(jdouble value);

FOUNDATION_EXPORT jboolean ComGoogleCommonPrimitivesDoubles_containsWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble target);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble target);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDoubleArray_(IOSDoubleArray *array, IOSDoubleArray *target);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesDoubles_lastIndexOfWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble target);

FOUNDATION_EXPORT jdouble ComGoogleCommonPrimitivesDoubles_minWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT jdouble ComGoogleCommonPrimitivesDoubles_maxWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT IOSDoubleArray *ComGoogleCommonPrimitivesDoubles_concatWithDoubleArray2_(IOSObjectArray *arrays);

FOUNDATION_EXPORT ComGoogleCommonBaseConverter *ComGoogleCommonPrimitivesDoubles_stringConverter();

FOUNDATION_EXPORT IOSDoubleArray *ComGoogleCommonPrimitivesDoubles_ensureCapacityWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint minLength, jint padding);

FOUNDATION_EXPORT NSString *ComGoogleCommonPrimitivesDoubles_joinWithNSString_withDoubleArray_(NSString *separator, IOSDoubleArray *array);

FOUNDATION_EXPORT id<JavaUtilComparator> ComGoogleCommonPrimitivesDoubles_lexicographicalComparator();

FOUNDATION_EXPORT IOSDoubleArray *ComGoogleCommonPrimitivesDoubles_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection);

FOUNDATION_EXPORT id<JavaUtilList> ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(IOSDoubleArray *backingArray);

FOUNDATION_EXPORT JavaLangDouble *ComGoogleCommonPrimitivesDoubles_tryParseWithNSString_(NSString *string);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesDoubles)

#endif

#pragma pop_macro("ComGoogleCommonPrimitivesDoubles_INCLUDE_ALL")
