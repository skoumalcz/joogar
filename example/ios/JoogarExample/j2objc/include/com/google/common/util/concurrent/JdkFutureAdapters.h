//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/JdkFutureAdapters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentJdkFutureAdapters_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentJdkFutureAdapters_RESTRICT
#define ComGoogleCommonUtilConcurrentJdkFutureAdapters_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentJdkFutureAdapters_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentJdkFutureAdapters_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentJdkFutureAdapters_) && (ComGoogleCommonUtilConcurrentJdkFutureAdapters_INCLUDE_ALL || ComGoogleCommonUtilConcurrentJdkFutureAdapters_INCLUDE)
#define _ComGoogleCommonUtilConcurrentJdkFutureAdapters_

@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentFuture;

@interface ComGoogleCommonUtilConcurrentJdkFutureAdapters : NSObject

#pragma mark Public

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)listenInPoolThreadWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)listenInPoolThreadWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                                                     withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentJdkFutureAdapters)

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentJdkFutureAdapters_listenInPoolThreadWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentJdkFutureAdapters_listenInPoolThreadWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentFuture> future, id<JavaUtilConcurrentExecutor> executor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentJdkFutureAdapters)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentJdkFutureAdapters_INCLUDE_ALL")
