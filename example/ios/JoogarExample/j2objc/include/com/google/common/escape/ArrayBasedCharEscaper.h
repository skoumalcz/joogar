//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/escape/ArrayBasedCharEscaper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonEscapeArrayBasedCharEscaper_INCLUDE_ALL")
#if ComGoogleCommonEscapeArrayBasedCharEscaper_RESTRICT
#define ComGoogleCommonEscapeArrayBasedCharEscaper_INCLUDE_ALL 0
#else
#define ComGoogleCommonEscapeArrayBasedCharEscaper_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonEscapeArrayBasedCharEscaper_RESTRICT

#if !defined (_ComGoogleCommonEscapeArrayBasedCharEscaper_) && (ComGoogleCommonEscapeArrayBasedCharEscaper_INCLUDE_ALL || ComGoogleCommonEscapeArrayBasedCharEscaper_INCLUDE)
#define _ComGoogleCommonEscapeArrayBasedCharEscaper_

#define ComGoogleCommonEscapeCharEscaper_RESTRICT 1
#define ComGoogleCommonEscapeCharEscaper_INCLUDE 1
#include "com/google/common/escape/CharEscaper.h"

@class ComGoogleCommonEscapeArrayBasedEscaperMap;
@class IOSCharArray;
@protocol JavaUtilMap;

@interface ComGoogleCommonEscapeArrayBasedCharEscaper : ComGoogleCommonEscapeCharEscaper

#pragma mark Public

- (NSString *)escapeWithNSString:(NSString *)s;

#pragma mark Protected

- (instancetype)initWithComGoogleCommonEscapeArrayBasedEscaperMap:(ComGoogleCommonEscapeArrayBasedEscaperMap *)escaperMap
                                                         withChar:(jchar)safeMin
                                                         withChar:(jchar)safeMax;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)replacementMap
                           withChar:(jchar)safeMin
                           withChar:(jchar)safeMax;

- (IOSCharArray *)escapeWithChar:(jchar)c;

- (IOSCharArray *)escapeUnsafeWithChar:(jchar)c;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEscapeArrayBasedCharEscaper)

FOUNDATION_EXPORT void ComGoogleCommonEscapeArrayBasedCharEscaper_initWithJavaUtilMap_withChar_withChar_(ComGoogleCommonEscapeArrayBasedCharEscaper *self, id<JavaUtilMap> replacementMap, jchar safeMin, jchar safeMax);

FOUNDATION_EXPORT void ComGoogleCommonEscapeArrayBasedCharEscaper_initWithComGoogleCommonEscapeArrayBasedEscaperMap_withChar_withChar_(ComGoogleCommonEscapeArrayBasedCharEscaper *self, ComGoogleCommonEscapeArrayBasedEscaperMap *escaperMap, jchar safeMin, jchar safeMax);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonEscapeArrayBasedCharEscaper)

#endif

#pragma pop_macro("ComGoogleCommonEscapeArrayBasedCharEscaper_INCLUDE_ALL")
