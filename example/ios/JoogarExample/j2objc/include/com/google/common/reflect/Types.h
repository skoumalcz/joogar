//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/reflect/Types.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonReflectTypes_INCLUDE_ALL")
#if ComGoogleCommonReflectTypes_RESTRICT
#define ComGoogleCommonReflectTypes_INCLUDE_ALL 0
#else
#define ComGoogleCommonReflectTypes_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonReflectTypes_RESTRICT

#if !defined (_ComGoogleCommonReflectTypes_) && (ComGoogleCommonReflectTypes_INCLUDE_ALL || ComGoogleCommonReflectTypes_INCLUDE)
#define _ComGoogleCommonReflectTypes_

@class IOSClass;
@class IOSObjectArray;
@protocol JavaLangReflectGenericDeclaration;
@protocol JavaLangReflectParameterizedType;
@protocol JavaLangReflectType;
@protocol JavaLangReflectTypeVariable;
@protocol JavaLangReflectWildcardType;

@interface ComGoogleCommonReflectTypes : NSObject

#pragma mark Package-Private

+ (IOSClass *)getArrayClassWithIOSClass:(IOSClass *)componentType;

+ (id<JavaLangReflectType>)getComponentTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

+ (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType OBJC_METHOD_FAMILY_NONE;

+ (id<JavaLangReflectTypeVariable>)newArtificialTypeVariableWithJavaLangReflectGenericDeclaration:(id<JavaLangReflectGenericDeclaration>)declaration
                                                                                     withNSString:(NSString *)name
                                                                     withJavaLangReflectTypeArray:(IOSObjectArray *)bounds OBJC_METHOD_FAMILY_NONE;

+ (id<JavaLangReflectParameterizedType>)newParameterizedTypeWithIOSClass:(IOSClass *)rawType
                                            withJavaLangReflectTypeArray:(IOSObjectArray *)arguments OBJC_METHOD_FAMILY_NONE;

+ (id<JavaLangReflectParameterizedType>)newParameterizedTypeWithOwnerWithJavaLangReflectType:(id<JavaLangReflectType>)ownerType
                                                                                withIOSClass:(IOSClass *)rawType
                                                                withJavaLangReflectTypeArray:(IOSObjectArray *)arguments OBJC_METHOD_FAMILY_NONE;

+ (id<JavaLangReflectWildcardType>)subtypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)upperBound;

+ (id<JavaLangReflectWildcardType>)supertypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)lowerBound;

+ (NSString *)toStringWithJavaLangReflectType:(id<JavaLangReflectType>)type;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypes)

FOUNDATION_EXPORT id<JavaLangReflectType> ComGoogleCommonReflectTypes_newArrayTypeWithJavaLangReflectType_(id<JavaLangReflectType> componentType);

FOUNDATION_EXPORT id<JavaLangReflectParameterizedType> ComGoogleCommonReflectTypes_newParameterizedTypeWithOwnerWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *arguments);

FOUNDATION_EXPORT id<JavaLangReflectParameterizedType> ComGoogleCommonReflectTypes_newParameterizedTypeWithIOSClass_withJavaLangReflectTypeArray_(IOSClass *rawType, IOSObjectArray *arguments);

FOUNDATION_EXPORT id<JavaLangReflectTypeVariable> ComGoogleCommonReflectTypes_newArtificialTypeVariableWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> declaration, NSString *name, IOSObjectArray *bounds);

FOUNDATION_EXPORT id<JavaLangReflectWildcardType> ComGoogleCommonReflectTypes_subtypeOfWithJavaLangReflectType_(id<JavaLangReflectType> upperBound);

FOUNDATION_EXPORT id<JavaLangReflectWildcardType> ComGoogleCommonReflectTypes_supertypeOfWithJavaLangReflectType_(id<JavaLangReflectType> lowerBound);

FOUNDATION_EXPORT NSString *ComGoogleCommonReflectTypes_toStringWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT id<JavaLangReflectType> ComGoogleCommonReflectTypes_getComponentTypeWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT IOSClass *ComGoogleCommonReflectTypes_getArrayClassWithIOSClass_(IOSClass *componentType);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes)

#endif

#if !defined (_ComGoogleCommonReflectTypes_WildcardTypeImpl_) && (ComGoogleCommonReflectTypes_INCLUDE_ALL || ComGoogleCommonReflectTypes_WildcardTypeImpl_INCLUDE)
#define _ComGoogleCommonReflectTypes_WildcardTypeImpl_

#define JavaLangReflectWildcardType_RESTRICT 1
#define JavaLangReflectWildcardType_INCLUDE 1
#include "java/lang/reflect/WildcardType.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class IOSObjectArray;

@interface ComGoogleCommonReflectTypes_WildcardTypeImpl : NSObject < JavaLangReflectWildcardType, JavaIoSerializable >

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (IOSObjectArray *)getLowerBounds;

- (IOSObjectArray *)getUpperBounds;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithJavaLangReflectTypeArray:(IOSObjectArray *)lowerBounds
                    withJavaLangReflectTypeArray:(IOSObjectArray *)upperBounds;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_WildcardTypeImpl)

FOUNDATION_EXPORT void ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_WildcardTypeImpl *self, IOSObjectArray *lowerBounds, IOSObjectArray *upperBounds);

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_WildcardTypeImpl *new_ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(IOSObjectArray *lowerBounds, IOSObjectArray *upperBounds) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_WildcardTypeImpl)

#endif

#if !defined (_ComGoogleCommonReflectTypes_JavaVersionEnum_) && (ComGoogleCommonReflectTypes_INCLUDE_ALL || ComGoogleCommonReflectTypes_JavaVersionEnum_INCLUDE)
#define _ComGoogleCommonReflectTypes_JavaVersionEnum_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

@class ComGoogleCommonCollectImmutableList;
@class IOSObjectArray;
@protocol JavaLangReflectType;

typedef NS_ENUM(NSUInteger, ComGoogleCommonReflectTypes_JavaVersion) {
  ComGoogleCommonReflectTypes_JavaVersion_JAVA6 = 0,
  ComGoogleCommonReflectTypes_JavaVersion_JAVA7 = 1,
  ComGoogleCommonReflectTypes_JavaVersion_JAVA8 = 2,
};

@interface ComGoogleCommonReflectTypes_JavaVersionEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

- (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType OBJC_METHOD_FAMILY_NONE;

- (NSString *)typeNameWithJavaLangReflectType:(id<JavaLangReflectType>)type;

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

- (ComGoogleCommonCollectImmutableList *)usedInGenericTypeWithJavaLangReflectTypeArray:(IOSObjectArray *)types;

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonReflectTypes_JavaVersionEnum_values();

+ (ComGoogleCommonReflectTypes_JavaVersionEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT ComGoogleCommonReflectTypes_JavaVersionEnum *ComGoogleCommonReflectTypes_JavaVersionEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypes_JavaVersionEnum)

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_JavaVersionEnum *ComGoogleCommonReflectTypes_JavaVersionEnum_values_[];

#define ComGoogleCommonReflectTypes_JavaVersionEnum_JAVA6 ComGoogleCommonReflectTypes_JavaVersionEnum_values_[ComGoogleCommonReflectTypes_JavaVersion_JAVA6]
J2OBJC_ENUM_CONSTANT_GETTER(ComGoogleCommonReflectTypes_JavaVersionEnum, JAVA6)

#define ComGoogleCommonReflectTypes_JavaVersionEnum_JAVA7 ComGoogleCommonReflectTypes_JavaVersionEnum_values_[ComGoogleCommonReflectTypes_JavaVersion_JAVA7]
J2OBJC_ENUM_CONSTANT_GETTER(ComGoogleCommonReflectTypes_JavaVersionEnum, JAVA7)

#define ComGoogleCommonReflectTypes_JavaVersionEnum_JAVA8 ComGoogleCommonReflectTypes_JavaVersionEnum_values_[ComGoogleCommonReflectTypes_JavaVersion_JAVA8]
J2OBJC_ENUM_CONSTANT_GETTER(ComGoogleCommonReflectTypes_JavaVersionEnum, JAVA8)

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_JavaVersionEnum *ComGoogleCommonReflectTypes_JavaVersionEnum_CURRENT_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonReflectTypes_JavaVersionEnum, CURRENT_, ComGoogleCommonReflectTypes_JavaVersionEnum *)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_JavaVersionEnum)

#endif

#if !defined (_ComGoogleCommonReflectTypes_NativeTypeVariableEquals_) && (ComGoogleCommonReflectTypes_INCLUDE_ALL || ComGoogleCommonReflectTypes_NativeTypeVariableEquals_INCLUDE)
#define _ComGoogleCommonReflectTypes_NativeTypeVariableEquals_

@interface ComGoogleCommonReflectTypes_NativeTypeVariableEquals : NSObject

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypes_NativeTypeVariableEquals)

FOUNDATION_EXPORT jboolean ComGoogleCommonReflectTypes_NativeTypeVariableEquals_NATIVE_TYPE_VARIABLE_ONLY_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonReflectTypes_NativeTypeVariableEquals, NATIVE_TYPE_VARIABLE_ONLY_, jboolean)

FOUNDATION_EXPORT void ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init(ComGoogleCommonReflectTypes_NativeTypeVariableEquals *self);

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_NativeTypeVariableEquals *new_ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_NativeTypeVariableEquals)

#endif

#pragma pop_macro("ComGoogleCommonReflectTypes_INCLUDE_ALL")
