//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/ThreadFactoryBuilder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentThreadFactoryBuilder_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentThreadFactoryBuilder_RESTRICT
#define ComGoogleCommonUtilConcurrentThreadFactoryBuilder_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentThreadFactoryBuilder_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentThreadFactoryBuilder_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentThreadFactoryBuilder_) && (ComGoogleCommonUtilConcurrentThreadFactoryBuilder_INCLUDE_ALL || ComGoogleCommonUtilConcurrentThreadFactoryBuilder_INCLUDE)
#define _ComGoogleCommonUtilConcurrentThreadFactoryBuilder_

@protocol JavaLangThread_UncaughtExceptionHandler;
@protocol JavaUtilConcurrentThreadFactory;

@interface ComGoogleCommonUtilConcurrentThreadFactoryBuilder : NSObject

#pragma mark Public

- (instancetype)init;

- (id<JavaUtilConcurrentThreadFactory>)build;

- (ComGoogleCommonUtilConcurrentThreadFactoryBuilder *)setDaemonWithBoolean:(jboolean)daemon;

- (ComGoogleCommonUtilConcurrentThreadFactoryBuilder *)setNameFormatWithNSString:(NSString *)nameFormat;

- (ComGoogleCommonUtilConcurrentThreadFactoryBuilder *)setPriorityWithInt:(jint)priority;

- (ComGoogleCommonUtilConcurrentThreadFactoryBuilder *)setThreadFactoryWithJavaUtilConcurrentThreadFactory:(id<JavaUtilConcurrentThreadFactory>)backingThreadFactory;

- (ComGoogleCommonUtilConcurrentThreadFactoryBuilder *)setUncaughtExceptionHandlerWithJavaLangThread_UncaughtExceptionHandler:(id<JavaLangThread_UncaughtExceptionHandler>)uncaughtExceptionHandler;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentThreadFactoryBuilder)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentThreadFactoryBuilder_init(ComGoogleCommonUtilConcurrentThreadFactoryBuilder *self);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentThreadFactoryBuilder *new_ComGoogleCommonUtilConcurrentThreadFactoryBuilder_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentThreadFactoryBuilder)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentThreadFactoryBuilder_INCLUDE_ALL")
