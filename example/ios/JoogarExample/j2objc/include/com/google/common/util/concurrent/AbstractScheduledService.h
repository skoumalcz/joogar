//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/AbstractScheduledService.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentAbstractScheduledService_RESTRICT
#define ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentAbstractScheduledService_RESTRICT
#if ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_INCLUDE
#define ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_INCLUDE 1
#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractScheduledService_) && (ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractScheduledService_

#define ComGoogleCommonUtilConcurrentService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentService_INCLUDE 1
#include "com/google/common/util/concurrent/Service.h"

@class ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler;
@class ComGoogleCommonUtilConcurrentService_Listener;
@class ComGoogleCommonUtilConcurrentService_StateEnum;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentAbstractScheduledService : NSObject < ComGoogleCommonUtilConcurrentService >

#pragma mark Public

- (void)addListenerWithComGoogleCommonUtilConcurrentService_Listener:(ComGoogleCommonUtilConcurrentService_Listener *)listener
                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (void)awaitRunning;

- (void)awaitRunningWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (void)awaitTerminated;

- (void)awaitTerminatedWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (JavaLangThrowable *)failureCause;

- (jboolean)isRunning;

- (id<ComGoogleCommonUtilConcurrentService>)startAsync;

- (ComGoogleCommonUtilConcurrentService_StateEnum *)state;

- (id<ComGoogleCommonUtilConcurrentService>)stopAsync;

- (NSString *)description;

#pragma mark Protected

- (instancetype)init;

- (id<JavaUtilConcurrentScheduledExecutorService>)executor;

- (void)runOneIteration;

- (ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *)scheduler;

- (NSString *)serviceName;

- (void)shutDown;

- (void)startUp;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractScheduledService)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAbstractScheduledService_init(ComGoogleCommonUtilConcurrentAbstractScheduledService *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractScheduledService)

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_) && (ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_

@class ComGoogleCommonUtilConcurrentAbstractService;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler : NSObject

#pragma mark Public

+ (ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *)newFixedDelayScheduleWithLong:(jlong)initialDelay
                                                                                          withLong:(jlong)delay
                                                                withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit OBJC_METHOD_FAMILY_NONE;

+ (ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *)newFixedRateScheduleWithLong:(jlong)initialDelay
                                                                                         withLong:(jlong)period
                                                               withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (id<JavaUtilConcurrentFuture>)scheduleWithComGoogleCommonUtilConcurrentAbstractService:(ComGoogleCommonUtilConcurrentAbstractService *)service
                                          withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)executor
                                                                    withJavaLangRunnable:(id<JavaLangRunnable>)runnable;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler)

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_newFixedDelayScheduleWithLong_withLong_withJavaUtilConcurrentTimeUnitEnum_(jlong initialDelay, jlong delay, JavaUtilConcurrentTimeUnitEnum *unit);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_newFixedRateScheduleWithLong_withLong_withJavaUtilConcurrentTimeUnitEnum_(jlong initialDelay, jlong period, JavaUtilConcurrentTimeUnitEnum *unit);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler)

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_) && (ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_

@class ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule;
@class ComGoogleCommonUtilConcurrentAbstractService;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler : ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler

#pragma mark Public

- (instancetype)init;

#pragma mark Protected

- (ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule *)getNextSchedule;

#pragma mark Package-Private

- (id<JavaUtilConcurrentFuture>)scheduleWithComGoogleCommonUtilConcurrentAbstractService:(ComGoogleCommonUtilConcurrentAbstractService *)service
                                          withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)executor
                                                                    withJavaLangRunnable:(id<JavaLangRunnable>)runnable;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_init(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler)

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_) && (ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_

@class JavaUtilConcurrentTimeUnitEnum;

@interface ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)delay
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_initWithLong_withJavaUtilConcurrentTimeUnitEnum_(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule *self, jlong delay, JavaUtilConcurrentTimeUnitEnum *unit);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule *new_ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_initWithLong_withJavaUtilConcurrentTimeUnitEnum_(jlong delay, JavaUtilConcurrentTimeUnitEnum *unit) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentAbstractScheduledService_INCLUDE_ALL")
