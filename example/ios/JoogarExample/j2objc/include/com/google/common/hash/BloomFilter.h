//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/hash/BloomFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonHashBloomFilter_INCLUDE_ALL")
#if ComGoogleCommonHashBloomFilter_RESTRICT
#define ComGoogleCommonHashBloomFilter_INCLUDE_ALL 0
#else
#define ComGoogleCommonHashBloomFilter_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonHashBloomFilter_RESTRICT

#if !defined (_ComGoogleCommonHashBloomFilter_) && (ComGoogleCommonHashBloomFilter_INCLUDE_ALL || ComGoogleCommonHashBloomFilter_INCLUDE)
#define _ComGoogleCommonHashBloomFilter_

#define ComGoogleCommonBasePredicate_RESTRICT 1
#define ComGoogleCommonBasePredicate_INCLUDE 1
#include "com/google/common/base/Predicate.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class JavaIoInputStream;
@class JavaIoOutputStream;
@protocol ComGoogleCommonHashBloomFilter_Strategy;
@protocol ComGoogleCommonHashFunnel;

@interface ComGoogleCommonHashBloomFilter : NSObject < ComGoogleCommonBasePredicate, JavaIoSerializable >

#pragma mark Public

- (jboolean)applyWithId:(id)input;

- (ComGoogleCommonHashBloomFilter *)copy__ OBJC_METHOD_FAMILY_NONE;

+ (ComGoogleCommonHashBloomFilter *)createWithComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
                                                                withInt:(jint)expectedInsertions;

+ (ComGoogleCommonHashBloomFilter *)createWithComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
                                                                withInt:(jint)expectedInsertions
                                                             withDouble:(jdouble)fpp;

- (jboolean)isEqual:(id)object;

- (jdouble)expectedFpp;

- (NSUInteger)hash;

- (jboolean)isCompatibleWithComGoogleCommonHashBloomFilter:(ComGoogleCommonHashBloomFilter *)that;

- (jboolean)mightContainWithId:(id)object;

- (jboolean)putWithId:(id)object;

- (void)putAllWithComGoogleCommonHashBloomFilter:(ComGoogleCommonHashBloomFilter *)that;

+ (ComGoogleCommonHashBloomFilter *)readFromWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                    withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel;

- (void)writeToWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

#pragma mark Package-Private

- (jlong)bitSize;

+ (ComGoogleCommonHashBloomFilter *)createWithComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
                                                                withInt:(jint)expectedInsertions
                                                             withDouble:(jdouble)fpp
                            withComGoogleCommonHashBloomFilter_Strategy:(id<ComGoogleCommonHashBloomFilter_Strategy>)strategy;

+ (jlong)optimalNumOfBitsWithLong:(jlong)n
                       withDouble:(jdouble)p;

+ (jint)optimalNumOfHashFunctionsWithLong:(jlong)n
                                 withLong:(jlong)m;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashBloomFilter)

FOUNDATION_EXPORT ComGoogleCommonHashBloomFilter *ComGoogleCommonHashBloomFilter_createWithComGoogleCommonHashFunnel_withInt_withDouble_(id<ComGoogleCommonHashFunnel> funnel, jint expectedInsertions, jdouble fpp);

FOUNDATION_EXPORT ComGoogleCommonHashBloomFilter *ComGoogleCommonHashBloomFilter_createWithComGoogleCommonHashFunnel_withInt_withDouble_withComGoogleCommonHashBloomFilter_Strategy_(id<ComGoogleCommonHashFunnel> funnel, jint expectedInsertions, jdouble fpp, id<ComGoogleCommonHashBloomFilter_Strategy> strategy);

FOUNDATION_EXPORT ComGoogleCommonHashBloomFilter *ComGoogleCommonHashBloomFilter_createWithComGoogleCommonHashFunnel_withInt_(id<ComGoogleCommonHashFunnel> funnel, jint expectedInsertions);

FOUNDATION_EXPORT jint ComGoogleCommonHashBloomFilter_optimalNumOfHashFunctionsWithLong_withLong_(jlong n, jlong m);

FOUNDATION_EXPORT jlong ComGoogleCommonHashBloomFilter_optimalNumOfBitsWithLong_withDouble_(jlong n, jdouble p);

FOUNDATION_EXPORT ComGoogleCommonHashBloomFilter *ComGoogleCommonHashBloomFilter_readFromWithJavaIoInputStream_withComGoogleCommonHashFunnel_(JavaIoInputStream *inArg, id<ComGoogleCommonHashFunnel> funnel);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashBloomFilter)

#endif

#if !defined (_ComGoogleCommonHashBloomFilter_Strategy_) && (ComGoogleCommonHashBloomFilter_INCLUDE_ALL || ComGoogleCommonHashBloomFilter_Strategy_INCLUDE)
#define _ComGoogleCommonHashBloomFilter_Strategy_

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class ComGoogleCommonHashBloomFilterStrategies_BitArray;
@protocol ComGoogleCommonHashFunnel;

@protocol ComGoogleCommonHashBloomFilter_Strategy < JavaIoSerializable, NSObject, JavaObject >

- (jboolean)putWithId:(id)object
withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
              withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits;

- (jboolean)mightContainWithId:(id)object
 withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
                       withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits;

- (jint)ordinal;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashBloomFilter_Strategy)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashBloomFilter_Strategy)

#endif

#pragma pop_macro("ComGoogleCommonHashBloomFilter_INCLUDE_ALL")
