//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/math/IntMath.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonMathIntMath_INCLUDE_ALL")
#if ComGoogleCommonMathIntMath_RESTRICT
#define ComGoogleCommonMathIntMath_INCLUDE_ALL 0
#else
#define ComGoogleCommonMathIntMath_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonMathIntMath_RESTRICT

#if !defined (_ComGoogleCommonMathIntMath_) && (ComGoogleCommonMathIntMath_INCLUDE_ALL || ComGoogleCommonMathIntMath_INCLUDE)
#define _ComGoogleCommonMathIntMath_

@class IOSByteArray;
@class IOSIntArray;
@class JavaMathRoundingModeEnum;

#define ComGoogleCommonMathIntMath_MAX_POWER_OF_SQRT2_UNSIGNED -1257966797
#define ComGoogleCommonMathIntMath_FLOOR_SQRT_MAX_INT 46340

@interface ComGoogleCommonMathIntMath : NSObject

#pragma mark Public

+ (jint)binomialWithInt:(jint)n
                withInt:(jint)k;

+ (jint)checkedAddWithInt:(jint)a
                  withInt:(jint)b;

+ (jint)checkedMultiplyWithInt:(jint)a
                       withInt:(jint)b;

+ (jint)checkedPowWithInt:(jint)b
                  withInt:(jint)k;

+ (jint)checkedSubtractWithInt:(jint)a
                       withInt:(jint)b;

+ (jint)divideWithInt:(jint)p
              withInt:(jint)q
withJavaMathRoundingModeEnum:(JavaMathRoundingModeEnum *)mode;

+ (jint)factorialWithInt:(jint)n;

+ (jint)gcdWithInt:(jint)a
           withInt:(jint)b;

+ (jboolean)isPowerOfTwoWithInt:(jint)x;

+ (jint)log10WithInt:(jint)x
withJavaMathRoundingModeEnum:(JavaMathRoundingModeEnum *)mode;

+ (jint)log2WithInt:(jint)x
withJavaMathRoundingModeEnum:(JavaMathRoundingModeEnum *)mode;

+ (jint)meanWithInt:(jint)x
            withInt:(jint)y;

+ (jint)modWithInt:(jint)x
           withInt:(jint)m;

+ (jint)powWithInt:(jint)b
           withInt:(jint)k;

+ (jint)sqrtWithInt:(jint)x
withJavaMathRoundingModeEnum:(JavaMathRoundingModeEnum *)mode;

#pragma mark Package-Private

+ (jint)lessThanBranchFreeWithInt:(jint)x
                          withInt:(jint)y;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonMathIntMath)

J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonMathIntMath, MAX_POWER_OF_SQRT2_UNSIGNED, jint)

FOUNDATION_EXPORT IOSByteArray *ComGoogleCommonMathIntMath_maxLog10ForLeadingZeros_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonMathIntMath, maxLog10ForLeadingZeros_, IOSByteArray *)

FOUNDATION_EXPORT IOSIntArray *ComGoogleCommonMathIntMath_powersOf10_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonMathIntMath, powersOf10_, IOSIntArray *)

FOUNDATION_EXPORT IOSIntArray *ComGoogleCommonMathIntMath_halfPowersOf10_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonMathIntMath, halfPowersOf10_, IOSIntArray *)

J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonMathIntMath, FLOOR_SQRT_MAX_INT, jint)

FOUNDATION_EXPORT IOSIntArray *ComGoogleCommonMathIntMath_biggestBinomials_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonMathIntMath, biggestBinomials_, IOSIntArray *)
J2OBJC_STATIC_FIELD_SETTER(ComGoogleCommonMathIntMath, biggestBinomials_, IOSIntArray *)

FOUNDATION_EXPORT jboolean ComGoogleCommonMathIntMath_isPowerOfTwoWithInt_(jint x);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_lessThanBranchFreeWithInt_withInt_(jint x, jint y);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_log2WithInt_withJavaMathRoundingModeEnum_(jint x, JavaMathRoundingModeEnum *mode);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_log10WithInt_withJavaMathRoundingModeEnum_(jint x, JavaMathRoundingModeEnum *mode);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_powWithInt_withInt_(jint b, jint k);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_sqrtWithInt_withJavaMathRoundingModeEnum_(jint x, JavaMathRoundingModeEnum *mode);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_divideWithInt_withInt_withJavaMathRoundingModeEnum_(jint p, jint q, JavaMathRoundingModeEnum *mode);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_modWithInt_withInt_(jint x, jint m);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_gcdWithInt_withInt_(jint a, jint b);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_checkedAddWithInt_withInt_(jint a, jint b);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_checkedSubtractWithInt_withInt_(jint a, jint b);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_checkedMultiplyWithInt_withInt_(jint a, jint b);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_checkedPowWithInt_withInt_(jint b, jint k);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_factorialWithInt_(jint n);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_binomialWithInt_withInt_(jint n, jint k);

FOUNDATION_EXPORT jint ComGoogleCommonMathIntMath_meanWithInt_withInt_(jint x, jint y);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonMathIntMath)

#endif

#pragma pop_macro("ComGoogleCommonMathIntMath_INCLUDE_ALL")
