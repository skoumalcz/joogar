//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/guava/sources/com/google/common/util/concurrent/Atomics.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentAtomics_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentAtomics_RESTRICT
#define ComGoogleCommonUtilConcurrentAtomics_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentAtomics_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentAtomics_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentAtomics_) && (ComGoogleCommonUtilConcurrentAtomics_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAtomics_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAtomics_

@class IOSObjectArray;
@class JavaUtilConcurrentAtomicAtomicReference;
@class JavaUtilConcurrentAtomicAtomicReferenceArray;

@interface ComGoogleCommonUtilConcurrentAtomics : NSObject

#pragma mark Public

+ (JavaUtilConcurrentAtomicAtomicReference *)newReference OBJC_METHOD_FAMILY_NONE;

+ (JavaUtilConcurrentAtomicAtomicReference *)newReferenceWithId:(id)initialValue OBJC_METHOD_FAMILY_NONE;

+ (JavaUtilConcurrentAtomicAtomicReferenceArray *)newReferenceArrayWithNSObjectArray:(IOSObjectArray *)array OBJC_METHOD_FAMILY_NONE;

+ (JavaUtilConcurrentAtomicAtomicReferenceArray *)newReferenceArrayWithInt:(jint)length OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomics)

FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicReference *ComGoogleCommonUtilConcurrentAtomics_newReference();

FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicReference *ComGoogleCommonUtilConcurrentAtomics_newReferenceWithId_(id initialValue);

FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicReferenceArray *ComGoogleCommonUtilConcurrentAtomics_newReferenceArrayWithInt_(jint length);

FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicReferenceArray *ComGoogleCommonUtilConcurrentAtomics_newReferenceArrayWithNSObjectArray_(IOSObjectArray *array);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAtomics)

#endif

#pragma pop_macro("ComGoogleCommonUtilConcurrentAtomics_INCLUDE_ALL")
