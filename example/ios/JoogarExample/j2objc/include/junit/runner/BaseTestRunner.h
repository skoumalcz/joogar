//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/tmp/j2objc/junit/build_result/java/junit/runner/BaseTestRunner.java
//

#ifndef _JunitRunnerBaseTestRunner_H_
#define _JunitRunnerBaseTestRunner_H_

#include "J2ObjC_header.h"
#include "junit/framework/TestListener.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangThrowable;
@class JavaUtilProperties;
@class JunitFrameworkAssertionFailedError;
@protocol JunitFrameworkTest;

@interface JunitRunnerBaseTestRunner : NSObject < JunitFrameworkTestListener > {
 @public
  jboolean fLoading_;
}

#pragma mark Public

- (instancetype)init;

- (void)addErrorWithJunitFrameworkTest:(id<JunitFrameworkTest>)test
                 withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)addFailureWithJunitFrameworkTest:(id<JunitFrameworkTest>)test
  withJunitFrameworkAssertionFailedError:(JunitFrameworkAssertionFailedError *)t;

- (NSString *)elapsedTimeAsStringWithLong:(jlong)runTime;

- (void)endTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (NSString *)extractClassNameWithNSString:(NSString *)className_;

+ (NSString *)getFilteredTraceWithNSString:(NSString *)stack;

+ (NSString *)getFilteredTraceWithJavaLangThrowable:(JavaLangThrowable *)t;

+ (NSString *)getPreferenceWithNSString:(NSString *)key;

+ (jint)getPreferenceWithNSString:(NSString *)key
                          withInt:(jint)dflt;

- (id<JunitFrameworkTest>)getTestWithNSString:(NSString *)suiteClassName;

+ (void)savePreferences;

- (void)setLoadingWithBoolean:(jboolean)enable;

+ (void)setPreferenceWithNSString:(NSString *)key
                     withNSString:(NSString *)value;

- (void)startTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (void)testEndedWithNSString:(NSString *)testName;

- (void)testFailedWithInt:(jint)status
   withJunitFrameworkTest:(id<JunitFrameworkTest>)test
    withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)testStartedWithNSString:(NSString *)testName;

+ (NSString *)truncateWithNSString:(NSString *)s;

#pragma mark Protected

- (void)clearStatus;

+ (JavaUtilProperties *)getPreferences;

- (IOSClass *)loadSuiteClassWithNSString:(NSString *)suiteClassName;

- (NSString *)processArgumentsWithNSStringArray:(IOSObjectArray *)args;

- (void)runFailedWithNSString:(NSString *)message;

+ (void)setPreferencesWithJavaUtilProperties:(JavaUtilProperties *)preferences;

+ (jboolean)showStackRaw;

- (jboolean)useReloadingTestSuiteLoader;

#pragma mark Package-Private

+ (jboolean)filterLineWithNSString:(NSString *)line;

@end

J2OBJC_STATIC_INIT(JunitRunnerBaseTestRunner)

FOUNDATION_EXPORT NSString *JunitRunnerBaseTestRunner_SUITE_METHODNAME_;
J2OBJC_STATIC_FIELD_GETTER(JunitRunnerBaseTestRunner, SUITE_METHODNAME_, NSString *)

FOUNDATION_EXPORT jint JunitRunnerBaseTestRunner_fgMaxMessageLength_;
J2OBJC_STATIC_FIELD_GETTER(JunitRunnerBaseTestRunner, fgMaxMessageLength_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(JunitRunnerBaseTestRunner, fgMaxMessageLength_, jint)
FOUNDATION_EXPORT jboolean JunitRunnerBaseTestRunner_fgFilterStack_;
J2OBJC_STATIC_FIELD_GETTER(JunitRunnerBaseTestRunner, fgFilterStack_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(JunitRunnerBaseTestRunner, fgFilterStack_, jboolean)
FOUNDATION_EXPORT void JunitRunnerBaseTestRunner_setPreferencesWithJavaUtilProperties_(JavaUtilProperties *preferences);

FOUNDATION_EXPORT JavaUtilProperties *JunitRunnerBaseTestRunner_getPreferences();

FOUNDATION_EXPORT void JunitRunnerBaseTestRunner_savePreferences();

FOUNDATION_EXPORT void JunitRunnerBaseTestRunner_setPreferenceWithNSString_withNSString_(NSString *key, NSString *value);

FOUNDATION_EXPORT NSString *JunitRunnerBaseTestRunner_truncateWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *JunitRunnerBaseTestRunner_getPreferenceWithNSString_(NSString *key);

FOUNDATION_EXPORT jint JunitRunnerBaseTestRunner_getPreferenceWithNSString_withInt_(NSString *key, jint dflt);

FOUNDATION_EXPORT NSString *JunitRunnerBaseTestRunner_getFilteredTraceWithJavaLangThrowable_(JavaLangThrowable *t);

FOUNDATION_EXPORT NSString *JunitRunnerBaseTestRunner_getFilteredTraceWithNSString_(NSString *stack);

FOUNDATION_EXPORT jboolean JunitRunnerBaseTestRunner_showStackRaw();

FOUNDATION_EXPORT jboolean JunitRunnerBaseTestRunner_filterLineWithNSString_(NSString *line);

FOUNDATION_EXPORT void JunitRunnerBaseTestRunner_init(JunitRunnerBaseTestRunner *self);

J2OBJC_TYPE_LITERAL_HEADER(JunitRunnerBaseTestRunner)

#endif // _JunitRunnerBaseTestRunner_H_
