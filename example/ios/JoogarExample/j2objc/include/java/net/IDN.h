//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/net/IDN.java
//

#ifndef _JavaNetIDN_H_
#define _JavaNetIDN_H_

#include "J2ObjC_header.h"

#define JavaNetIDN_ALLOW_UNASSIGNED 1
#define JavaNetIDN_USE_STD3_ASCII_RULES 2

/*!
 @brief Converts internationalized domain names between Unicode and the ASCII Compatible Encoding
 (ACE) representation.
 <p>See <a href="http://www.ietf.org/rfc/rfc3490.txt">RFC 3490</a> for full details.
 @since 1.6
 */
@interface JavaNetIDN : NSObject

#pragma mark Public

/*!
 @brief Equivalent to <code>toASCII(input, 0)</code>.
 @param input the Unicode name
 @return the ACE name
 @throws IllegalArgumentException if <code>input</code> does not conform to <a href="http://www.ietf.org/rfc/rfc3490.txt">RFC 3490</a>
 */
+ (NSString *)toASCIIWithNSString:(NSString *)input;

/*!
 @brief Transform a Unicode String to ASCII Compatible Encoding String according
 to the algorithm defined in <a href="http://www.ietf.org/rfc/rfc3490.txt">RFC 3490</a>.
 <p>If the transformation fails (because the input is not a valid IDN), an
 exception will be thrown.
 <p>This method can handle either an individual label or an entire domain name.
 In the latter case, the separators are: U+002E (full stop), U+3002 (ideographic full stop),
 U+FF0E (fullwidth full stop), and U+FF61 (halfwidth ideographic full stop).
 All of these will become U+002E (full stop) in the result.
 @param input the Unicode name
 @param flags 0, <code>ALLOW_UNASSIGNED</code>, <code>USE_STD3_ASCII_RULES</code>,
 or <code>ALLOW_UNASSIGNED | USE_STD3_ASCII_RULES</code>
 @return the ACE name
 @throws IllegalArgumentException if <code>input</code> does not conform to <a href="http://www.ietf.org/rfc/rfc3490.txt">RFC 3490</a>
 */
+ (NSString *)toASCIIWithNSString:(NSString *)input
                          withInt:(jint)flags;

/*!
 @brief Equivalent to <code>toUnicode(input, 0)</code>.
 @param input the ACE name
 @return the Unicode name
 */
+ (NSString *)toUnicodeWithNSString:(NSString *)input;

/*!
 @brief Translates a string from ASCII Compatible Encoding (ACE) to Unicode
 according to the algorithm defined in <a href="http://www.ietf.org/rfc/rfc3490.txt">RFC 3490</a>.
 <p>Unlike <code>toASCII</code>, this transformation cannot fail.
 <p>This method can handle either an individual label or an entire domain name.
 In the latter case, the separators are: U+002E (full stop), U+3002 (ideographic full stop),
 U+FF0E (fullwidth full stop), and U+FF61 (halfwidth ideographic full stop).
 @param input the ACE name
 @return the Unicode name
 @param flags 0, <code>ALLOW_UNASSIGNED</code>, <code>USE_STD3_ASCII_RULES</code>,
 or <code>ALLOW_UNASSIGNED | USE_STD3_ASCII_RULES</code>
 */
+ (NSString *)toUnicodeWithNSString:(NSString *)input
                            withInt:(jint)flags;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNetIDN)

J2OBJC_STATIC_FIELD_GETTER(JavaNetIDN, ALLOW_UNASSIGNED, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaNetIDN, USE_STD3_ASCII_RULES, jint)

FOUNDATION_EXPORT NSString *JavaNetIDN_toASCIIWithNSString_withInt_(NSString *input, jint flags);

FOUNDATION_EXPORT NSString *JavaNetIDN_toASCIIWithNSString_(NSString *input);

FOUNDATION_EXPORT NSString *JavaNetIDN_toUnicodeWithNSString_withInt_(NSString *input, jint flags);

FOUNDATION_EXPORT NSString *JavaNetIDN_toUnicodeWithNSString_(NSString *input);

J2OBJC_TYPE_LITERAL_HEADER(JavaNetIDN)

#endif // _JavaNetIDN_H_
