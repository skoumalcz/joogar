//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/security/interfaces/RSAPrivateCrtKey.java
//

#ifndef _JavaSecurityInterfacesRSAPrivateCrtKey_H_
#define _JavaSecurityInterfacesRSAPrivateCrtKey_H_

#include "J2ObjC_header.h"
#include "java/security/interfaces/RSAPrivateKey.h"

@class JavaMathBigInteger;

#define JavaSecurityInterfacesRSAPrivateCrtKey_serialVersionUID -5682214253527700368LL

/*!
 @brief The interface for a PKCS#1 RSA private key using CRT information values.
 */
@protocol JavaSecurityInterfacesRSAPrivateCrtKey < JavaSecurityInterfacesRSAPrivateKey, NSObject, JavaObject >

/*!
 @brief Returns the CRT coefficient, <code>q^-1 mod p</code>.
 @return the CRT coefficient.
 */
- (JavaMathBigInteger *)getCrtCoefficient;

/*!
 @brief Returns the prime factor <code>p</code> of <code>n</code>.
 @return the prime factor <code>p</code> of <code>n</code>.
 */
- (JavaMathBigInteger *)getPrimeP;

/*!
 @brief Returns the prime factor <code>q</code> of <code>n</code>.
 @return the prime factor <code>q</code> of <code>n</code>.
 */
- (JavaMathBigInteger *)getPrimeQ;

/*!
 @brief Returns the CRT exponent of the primet <code>p</code>.
 @return the CRT exponent of the prime <code>p</code>.
 */
- (JavaMathBigInteger *)getPrimeExponentP;

/*!
 @brief Returns the CRT exponent of the prime <code>q</code>.
 @return the CRT exponent of the prime <code>q</code>.
 */
- (JavaMathBigInteger *)getPrimeExponentQ;

/*!
 @brief Returns the public exponent <code>e</code>.
 @return the public exponent <code>e</code>.
 */
- (JavaMathBigInteger *)getPublicExponent;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityInterfacesRSAPrivateCrtKey)

J2OBJC_STATIC_FIELD_GETTER(JavaSecurityInterfacesRSAPrivateCrtKey, serialVersionUID, jlong)

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityInterfacesRSAPrivateCrtKey)

#endif // _JavaSecurityInterfacesRSAPrivateCrtKey_H_
