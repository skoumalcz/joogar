//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/beans/PropertyChangeEvent.java
//

#ifndef _JavaBeansPropertyChangeEvent_H_
#define _JavaBeansPropertyChangeEvent_H_

#include "J2ObjC_header.h"
#include "java/util/EventObject.h"

/*!
 @brief An event that indicates that a constraint or a boundary of a property has
 changed.
 */
@interface JavaBeansPropertyChangeEvent : JavaUtilEventObject {
 @public
  NSString *propertyName_;
  id oldValue_;
  id newValue_;
  id propagationId_;
}

#pragma mark Public

/*!
 @brief The constructor used to create a new <code>PropertyChangeEvent</code>.
 @param source
 the changed bean.
 @param propertyName
 the changed property, or <code>null</code> to indicate an
 unspecified set of the properties has changed.
 @param oldValue
 the previous value of the property, or <code>null</code> if
 the <code>propertyName</code> is <code>null</code> or the
 previous value is unknown.
 @param newValue
 the new value of the property, or <code>null</code> if the
 <code>propertyName</code> is <code>null</code> or the new
 value is unknown.
 */
- (instancetype)initWithId:(id)source
              withNSString:(NSString *)propertyName
                    withId:(id)oldValue
                    withId:(id)newValue;

/*!
 @brief Returns the new value that the property now has.
 If the new value is
 unknown this method returns null.
 @return the old property value or null.
 */
- (id)getNewValue;

/*!
 @brief Returns the old value that the property had.
 If the old value is unknown
 this method returns null.
 @return the old property value or null.
 */
- (id)getOldValue;

/*!
 @brief Returns the propagationId object.
 This is reserved for future use. Beans
 1.0 demands that a listener receiving this property and then sending its
 own PropertyChangeEvent sets the received propagationId on the new
 PropertyChangeEvent's propagationId field.
 @return the propagationId object.
 */
- (id)getPropagationId;

/*!
 @brief Returns the name of the property that has changed.
 If an unspecified set
 of properties has changed it returns null.
 @return the name of the property that has changed, or null.
 */
- (NSString *)getPropertyName;

/*!
 @brief Sets the propagationId object.
 */
- (void)setPropagationIdWithId:(id)propagationId;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaBeansPropertyChangeEvent)

J2OBJC_FIELD_SETTER(JavaBeansPropertyChangeEvent, propertyName_, NSString *)
J2OBJC_FIELD_SETTER(JavaBeansPropertyChangeEvent, oldValue_, id)
J2OBJC_FIELD_SETTER(JavaBeansPropertyChangeEvent, newValue_, id)
J2OBJC_FIELD_SETTER(JavaBeansPropertyChangeEvent, propagationId_, id)

FOUNDATION_EXPORT void JavaBeansPropertyChangeEvent_initWithId_withNSString_withId_withId_(JavaBeansPropertyChangeEvent *self, id source, NSString *propertyName, id oldValue, id newValue);

FOUNDATION_EXPORT JavaBeansPropertyChangeEvent *new_JavaBeansPropertyChangeEvent_initWithId_withNSString_withId_withId_(id source, NSString *propertyName, id oldValue, id newValue) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaBeansPropertyChangeEvent)

#endif // _JavaBeansPropertyChangeEvent_H_
