//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/sql/SQLXML.java
//

#ifndef _JavaSqlSQLXML_H_
#define _JavaSqlSQLXML_H_

#include "J2ObjC_header.h"

@class IOSClass;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaIoReader;
@class JavaIoWriter;
@protocol JavaxXmlTransformResult;
@protocol JavaxXmlTransformSource;

/*!
 @brief Maps SQL's XML type into Java.
 */
@protocol JavaSqlSQLXML < NSObject, JavaObject >

/*!
 @brief Frees any resources held by this object.
 After <code>free</code> is called, calling
 method other than <code>free</code> will throw <code>SQLException</code> (calling <code>free</code>
 repeatedly will do nothing).
 @throws SQLException
 */
- (void)free;

/*!
 @brief Returns a stream that can be used to read binary data from this SQL <code>XML</code> object.
 @throws SQLException if an error occurs accessing the data
 */
- (JavaIoInputStream *)getBinaryStream;

/*!
 @brief Returns a stream that can be used to write binary data to this SQL <code>XML</code> object.
 @throws SQLException if an error occurs accessing the data
 */
- (JavaIoOutputStream *)setBinaryStream;

/*!
 @brief Returns a reader that can be used to read character data from this SQL <code>XML</code> object.
 @throws SQLException if an error occurs accessing the data
 */
- (JavaIoReader *)getCharacterStream;

/*!
 @brief Returns a writer that can be used to write character data to this SQL <code>XML</code> object.
 @throws SQLException if an error occurs accessing the data
 */
- (JavaIoWriter *)setCharacterStream;

/*!
 @brief Returns this object's data as an XML string.
 @throws SQLException if an error occurs accessing the data
 */
- (NSString *)getString;

/*!
 @brief Sets this object's data to the given XML string.
 @throws SQLException if an error occurs accessing the data
 */
- (void)setStringWithNSString:(NSString *)value;

/*!
 @brief Returns a <code>Source</code> for reading this object's data.
 @throws SQLException if an error occurs accessing the data
 */
- (id)getSourceWithIOSClass:(IOSClass *)sourceClass;

/*!
 @brief Returns a <code>Result</code> for writing this object's data.
 @throws SQLException if an error occurs accessing the data
 */
- (id)setResultWithIOSClass:(IOSClass *)resultClass;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSqlSQLXML)

J2OBJC_TYPE_LITERAL_HEADER(JavaSqlSQLXML)

#endif // _JavaSqlSQLXML_H_
