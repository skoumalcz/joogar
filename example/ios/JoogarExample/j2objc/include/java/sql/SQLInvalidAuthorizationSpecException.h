//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/sql/SQLInvalidAuthorizationSpecException.java
//

#ifndef _JavaSqlSQLInvalidAuthorizationSpecException_H_
#define _JavaSqlSQLInvalidAuthorizationSpecException_H_

#include "J2ObjC_header.h"
#include "java/sql/SQLNonTransientException.h"

@class JavaLangThrowable;

/*!
 @brief An exception, which is subclass of SQLNonTransientException, is thrown when
 the authorization credentials presented during connection establishment are
 not valid.
 */
@interface JavaSqlSQLInvalidAuthorizationSpecException : JavaSqlSQLNonTransientException

#pragma mark Public

/*!
 @brief Creates an SQLInvalidAuthorizationSpecException object.
 The Reason string
 is set to null, the SQLState string is set to null and the Error Code is
 set to 0.
 */
- (instancetype)init;

/*!
 @brief Creates an SQLInvalidAuthorizationSpecException object.
 The Reason string
 is set to the given reason string, the SQLState string is set to null and
 the Error Code is set to 0.
 @param reason
 the string to use as the Reason string
 */
- (instancetype)initWithNSString:(NSString *)reason;

/*!
 @brief Creates an SQLInvalidAuthorizationSpecException object.
 The Reason string
 is set to the given reason string, the SQLState string is set to the
 given SQLState string and the Error Code is set to 0.
 @param reason
 the string to use as the Reason string
 @param sqlState
 the string to use as the SQLState string
 */
- (instancetype)initWithNSString:(NSString *)reason
                    withNSString:(NSString *)sqlState;

/*!
 @brief Creates an SQLInvalidAuthorizationSpecException object.
 The Reason string
 is set to the given reason string, the SQLState string is set to the
 given SQLState string and the Error Code is set to the given error code
 value.
 @param reason
 the string to use as the Reason string
 @param sqlState
 the string to use as the SQLState string
 @param vendorCode
 the integer value for the error code
 */
- (instancetype)initWithNSString:(NSString *)reason
                    withNSString:(NSString *)sqlState
                         withInt:(jint)vendorCode;

/*!
 @brief Creates an SQLInvalidAuthorizationSpecException object.
 The Reason string
 is set to the given reason string, the SQLState string is set to the
 given SQLState string , the Error Code is set to the given error code
 value, and the cause Throwable object is set to the given cause Throwable
 object.
 @param reason
 the string to use as the Reason string
 @param sqlState
 the string to use as the SQLState string
 @param vendorCode
 the integer value for the error code
 @param cause
 the Throwable object for the underlying reason this
 SQLException
 */
- (instancetype)initWithNSString:(NSString *)reason
                    withNSString:(NSString *)sqlState
                         withInt:(jint)vendorCode
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Creates an SQLInvalidAuthorizationSpecException object.
 The Reason string
 is set to the given reason string, the SQLState string is set to the
 given SQLState string and the cause Throwable object is set to the given
 cause Throwable object.
 @param reason
 the string to use as the Reason string
 @param sqlState
 the string to use as the SQLState string
 @param cause
 the Throwable object for the underlying reason this
 SQLException
 */
- (instancetype)initWithNSString:(NSString *)reason
                    withNSString:(NSString *)sqlState
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Creates an SQLInvalidAuthorizationSpecException object.
 The Reason string
 is set to the given and the cause Throwable object is set to the given
 cause Throwable object.
 @param reason
 the string to use as the Reason string
 @param cause
 the Throwable object for the underlying reason this
 SQLException
 */
- (instancetype)initWithNSString:(NSString *)reason
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Creates an SQLInvalidAuthorizationSpecException object.
 The Reason string
 is set to the null if cause == null or cause.toString() if
 cause!=null,and the cause Throwable object is set to the given cause
 Throwable object.
 @param cause
 the Throwable object for the underlying reason this
 SQLException
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

#pragma mark Package-Private


@end

J2OBJC_EMPTY_STATIC_INIT(JavaSqlSQLInvalidAuthorizationSpecException)

FOUNDATION_EXPORT void JavaSqlSQLInvalidAuthorizationSpecException_init(JavaSqlSQLInvalidAuthorizationSpecException *self);

FOUNDATION_EXPORT JavaSqlSQLInvalidAuthorizationSpecException *new_JavaSqlSQLInvalidAuthorizationSpecException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_(JavaSqlSQLInvalidAuthorizationSpecException *self, NSString *reason);

FOUNDATION_EXPORT JavaSqlSQLInvalidAuthorizationSpecException *new_JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_(NSString *reason) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withNSString_(JavaSqlSQLInvalidAuthorizationSpecException *self, NSString *reason, NSString *sqlState);

FOUNDATION_EXPORT JavaSqlSQLInvalidAuthorizationSpecException *new_JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withNSString_(NSString *reason, NSString *sqlState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withNSString_withInt_(JavaSqlSQLInvalidAuthorizationSpecException *self, NSString *reason, NSString *sqlState, jint vendorCode);

FOUNDATION_EXPORT JavaSqlSQLInvalidAuthorizationSpecException *new_JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withNSString_withInt_(NSString *reason, NSString *sqlState, jint vendorCode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSqlSQLInvalidAuthorizationSpecException_initWithJavaLangThrowable_(JavaSqlSQLInvalidAuthorizationSpecException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaSqlSQLInvalidAuthorizationSpecException *new_JavaSqlSQLInvalidAuthorizationSpecException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withJavaLangThrowable_(JavaSqlSQLInvalidAuthorizationSpecException *self, NSString *reason, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaSqlSQLInvalidAuthorizationSpecException *new_JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withJavaLangThrowable_(NSString *reason, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withNSString_withJavaLangThrowable_(JavaSqlSQLInvalidAuthorizationSpecException *self, NSString *reason, NSString *sqlState, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaSqlSQLInvalidAuthorizationSpecException *new_JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withNSString_withJavaLangThrowable_(NSString *reason, NSString *sqlState, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withNSString_withInt_withJavaLangThrowable_(JavaSqlSQLInvalidAuthorizationSpecException *self, NSString *reason, NSString *sqlState, jint vendorCode, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaSqlSQLInvalidAuthorizationSpecException *new_JavaSqlSQLInvalidAuthorizationSpecException_initWithNSString_withNSString_withInt_withJavaLangThrowable_(NSString *reason, NSString *sqlState, jint vendorCode, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSqlSQLInvalidAuthorizationSpecException)

#endif // _JavaSqlSQLInvalidAuthorizationSpecException_H_
