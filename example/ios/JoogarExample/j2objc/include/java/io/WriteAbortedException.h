//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/io/WriteAbortedException.java
//

#ifndef _JavaIoWriteAbortedException_H_
#define _JavaIoWriteAbortedException_H_

#include "J2ObjC_header.h"
#include "java/io/ObjectStreamException.h"

@class JavaLangException;
@class JavaLangThrowable;

/*!
 @brief Signals that the <code>ObjectInputStream.readObject()</code> method has detected
 an exception marker in the input stream.
 This marker indicates that exception
 occurred when the object was serialized, and this marker was inserted instead
 of the original object. It is a way to "propagate" an exception from the code
 that attempted to write the object to the code that is attempting to read the
 object.
 */
@interface JavaIoWriteAbortedException : JavaIoObjectStreamException {
 @public
  /*!
   @brief The exception that occured when writeObject() was attempting to serialize
 the object.
   */
  JavaLangException *detail_;
}

#pragma mark Public

/*!
 @brief Constructs a new <code>WriteAbortedException</code> with its stack trace,
 detail message and the exception which caused the underlying problem when
 serializing the object filled in.
 @param detailMessage
 the detail message for this exception.
 @param rootCause
 the exception that was thrown when serializing the object.
 */
- (instancetype)initWithNSString:(NSString *)detailMessage
           withJavaLangException:(JavaLangException *)rootCause;

/*!
 @brief Gets the cause of this exception or <code>null</code> if there is no cause.
 @return the exception cause.
 */
- (JavaLangThrowable *)getCause;

/*!
 @brief Gets the extra information message which was provided when this exception
 was created.
 Returns <code>null</code> if no message was provided at creation
 time.
 @return the exception message.
 */
- (NSString *)getMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoWriteAbortedException)

J2OBJC_FIELD_SETTER(JavaIoWriteAbortedException, detail_, JavaLangException *)

FOUNDATION_EXPORT void JavaIoWriteAbortedException_initWithNSString_withJavaLangException_(JavaIoWriteAbortedException *self, NSString *detailMessage, JavaLangException *rootCause);

FOUNDATION_EXPORT JavaIoWriteAbortedException *new_JavaIoWriteAbortedException_initWithNSString_withJavaLangException_(NSString *detailMessage, JavaLangException *rootCause) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaIoWriteAbortedException)

#endif // _JavaIoWriteAbortedException_H_
