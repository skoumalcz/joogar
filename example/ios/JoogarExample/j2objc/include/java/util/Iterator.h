//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/Iterator.java
//

#ifndef _JavaUtilIterator_H_
#define _JavaUtilIterator_H_

#include "J2ObjC_header.h"

/*!
 @brief An iterator over a sequence of objects, such as a collection.
 <p>If a collection has been changed since the iterator was created,
 methods <code>next</code> and <code>hasNext()</code> may throw a <code>ConcurrentModificationException</code>.
 It is not possible to guarantee that this mechanism works in all cases of unsynchronized
 concurrent modification. It should only be used for debugging purposes. Iterators with this
 behavior are called fail-fast iterators.
 <p>Implementing <code>Iterable</code> and returning an <code>Iterator</code> allows your
 class to be used as a collection with the enhanced for loop.
 */
@protocol JavaUtilIterator < NSObject, JavaObject >

/*!
 @brief Returns true if there is at least one more element, false otherwise.
 */
- (jboolean)hasNext;

/*!
 @brief Returns the next object and advances the iterator.
 @return the next object.
 @throws NoSuchElementException
 if there are no more elements.
 */
- (id)next;

/*!
 @brief Removes the last object returned by <code>next</code> from the collection.
 This method can only be called once between each call to <code>next</code>.
 @throws UnsupportedOperationException
 if removing is not supported by the collection being
 iterated.
 @throws IllegalStateException
 if <code>next</code> has not been called, or <code>remove</code> has
 already been called after the last call to <code>next</code>.
 */
- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilIterator)

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilIterator)

#endif // _JavaUtilIterator_H_
