//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/Objects.java
//

#ifndef _JavaUtilObjects_H_
#define _JavaUtilObjects_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@protocol JavaUtilComparator;

/*!
 @brief Utility methods for objects.
 @since 1.7
 */
@interface JavaUtilObjects : NSObject

#pragma mark Public

/*!
 @brief Returns 0 if <code>a == b</code>, or <code>c.compare(a, b)</code> otherwise.
 That is, this makes <code>c</code> null-safe.
 */
+ (jint)compareWithId:(id)a
               withId:(id)b
withJavaUtilComparator:(id<JavaUtilComparator>)c;

/*!
 @brief Returns true if both arguments are null,
 the result of <code>Arrays.equals</code> if both arguments are primitive arrays,
 the result of <code>Arrays.deepEquals</code> if both arguments are arrays of reference types,
 and the result of <code>equals</code> otherwise.
 */
+ (jboolean)deepEqualsWithId:(id)a
                      withId:(id)b;

/*!
 @brief Null-safe equivalent of <code>a.equals(b)</code>.
 */
+ (jboolean)equalsWithId:(id)a
                  withId:(id)b;

/*!
 @brief Convenience wrapper for <code>Arrays.hashCode</code>, adding varargs.
 This can be used to compute a hash code for an object's fields as follows:
 <code>Objects.hash(a, b, c)</code>.
 */
+ (jint)hash__WithNSObjectArray:(IOSObjectArray *)values;

/*!
 @brief Returns 0 for null or <code>o.hashCode()</code>.
 */
+ (jint)hashCodeWithId:(id)o;

/*!
 @brief Returns <code>o</code> if non-null, or throws <code>NullPointerException</code>.
 */
+ (id)requireNonNullWithId:(id)o;

/*!
 @brief Returns <code>o</code> if non-null, or throws <code>NullPointerException</code>
 with the given detail message.
 */
+ (id)requireNonNullWithId:(id)o
              withNSString:(NSString *)message;

/*!
 @brief Returns "null" for null or <code>o.toString()</code>.
 */
+ (NSString *)toStringWithId:(id)o;

/*!
 @brief Returns <code>nullString</code> for null or <code>o.toString()</code>.
 */
+ (NSString *)toStringWithId:(id)o
                withNSString:(NSString *)nullString;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilObjects)

FOUNDATION_EXPORT jint JavaUtilObjects_compareWithId_withId_withJavaUtilComparator_(id a, id b, id<JavaUtilComparator> c);

FOUNDATION_EXPORT jboolean JavaUtilObjects_deepEqualsWithId_withId_(id a, id b);

FOUNDATION_EXPORT jboolean JavaUtilObjects_equalsWithId_withId_(id a, id b);

FOUNDATION_EXPORT jint JavaUtilObjects_hash__WithNSObjectArray_(IOSObjectArray *values);

FOUNDATION_EXPORT jint JavaUtilObjects_hashCodeWithId_(id o);

FOUNDATION_EXPORT id JavaUtilObjects_requireNonNullWithId_(id o);

FOUNDATION_EXPORT id JavaUtilObjects_requireNonNullWithId_withNSString_(id o, NSString *message);

FOUNDATION_EXPORT NSString *JavaUtilObjects_toStringWithId_(id o);

FOUNDATION_EXPORT NSString *JavaUtilObjects_toStringWithId_withNSString_(id o, NSString *nullString);

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilObjects)

#endif // _JavaUtilObjects_H_
