//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/zip/Adler32.java
//

#ifndef _JavaUtilZipAdler32_H_
#define _JavaUtilZipAdler32_H_

#include "J2ObjC_header.h"
#include "java/util/zip/Checksum.h"

@class IOSByteArray;

/*!
 @brief The Adler-32 class is used to compute the <code>Adler32</code> checksum from a set
 of data.
 Compared to <code>CRC32</code> it trades reliability for speed.
 Refer to RFC 1950 for the specification.
 */
@interface JavaUtilZipAdler32 : NSObject < JavaUtilZipChecksum >

#pragma mark Public

- (instancetype)init;

/*!
 @brief Returns the <code>Adler32</code> checksum for all input received.
 @return The checksum for this instance.
 */
- (jlong)getValue;

/*!
 @brief Reset this instance to its initial checksum.
 */
- (void)reset;

/*!
 @brief Update this <code>Adler32</code> checksum using the contents of <code>buf</code>.
 @param buf
 bytes to update checksum with.
 */
- (void)updateWithByteArray:(IOSByteArray *)buf;

/*!
 @brief Update this <code>Adler32</code> checksum with the contents of <code>buf</code>,
 starting from <code>offset</code> and reading <code>byteCount</code> bytes of data.
 */
- (void)updateWithByteArray:(IOSByteArray *)buf
                    withInt:(jint)offset
                    withInt:(jint)byteCount;

/*!
 @brief Update this <code>Adler32</code> checksum with the single byte provided as
 argument.
 @param i
 the byte to update checksum with.
 */
- (void)updateWithInt:(jint)i;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilZipAdler32)

FOUNDATION_EXPORT void JavaUtilZipAdler32_init(JavaUtilZipAdler32 *self);

FOUNDATION_EXPORT JavaUtilZipAdler32 *new_JavaUtilZipAdler32_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilZipAdler32)

#endif // _JavaUtilZipAdler32_H_
