//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/logging/ErrorManager.java
//

#ifndef _JavaUtilLoggingErrorManager_H_
#define _JavaUtilLoggingErrorManager_H_

#include "J2ObjC_header.h"

@class JavaLangException;

#define JavaUtilLoggingErrorManager_GENERIC_FAILURE 0
#define JavaUtilLoggingErrorManager_WRITE_FAILURE 1
#define JavaUtilLoggingErrorManager_FLUSH_FAILURE 2
#define JavaUtilLoggingErrorManager_CLOSE_FAILURE 3
#define JavaUtilLoggingErrorManager_OPEN_FAILURE 4
#define JavaUtilLoggingErrorManager_FORMAT_FAILURE 5

/*!
 @brief An error reporting facility for <code>Handler</code> implementations to record any
 error that may happen during logging.
 <code>Handlers</code> should report errors
 to an <code>ErrorManager</code>, instead of throwing exceptions, which would
 interfere with the log issuer's execution.
 */
@interface JavaUtilLoggingErrorManager : NSObject

#pragma mark Public

/*!
 @brief Constructs an instance of <code>ErrorManager</code>.
 */
- (instancetype)init;

/*!
 @brief Reports an error using the given message, exception and error code.
 This
 implementation will write out the message to <code>System.err</code> on the
 first call and all subsequent calls are ignored. A subclass of this class
 should override this method.
 @param message
 the error message, which may be <code>null</code>.
 @param exception
 the exception associated with the error, which may be
 <code>null</code>.
 @param errorCode
 the error code that identifies the type of error; see the
 constant fields of this class for possible values.
 */
- (void)errorWithNSString:(NSString *)message
    withJavaLangException:(JavaLangException *)exception
                  withInt:(jint)errorCode;

@end

J2OBJC_STATIC_INIT(JavaUtilLoggingErrorManager)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilLoggingErrorManager, GENERIC_FAILURE, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilLoggingErrorManager, WRITE_FAILURE, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilLoggingErrorManager, FLUSH_FAILURE, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilLoggingErrorManager, CLOSE_FAILURE, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilLoggingErrorManager, OPEN_FAILURE, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilLoggingErrorManager, FORMAT_FAILURE, jint)

FOUNDATION_EXPORT void JavaUtilLoggingErrorManager_init(JavaUtilLoggingErrorManager *self);

FOUNDATION_EXPORT JavaUtilLoggingErrorManager *new_JavaUtilLoggingErrorManager_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilLoggingErrorManager)

#endif // _JavaUtilLoggingErrorManager_H_
