//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/annotation/AnnotationTypeMismatchException.java
//

#ifndef _JavaLangAnnotationAnnotationTypeMismatchException_H_
#define _JavaLangAnnotationAnnotationTypeMismatchException_H_

#include "J2ObjC_header.h"
#include "java/lang/RuntimeException.h"

@class JavaLangReflectMethod;

/*!
 @brief Indicates that an annotation type has changed since it was compiled or
 serialized.
 @since 1.5
 */
@interface JavaLangAnnotationAnnotationTypeMismatchException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief Constructs an instance for the given type element and the type found.
 @param element
 the annotation type element.
 @param foundType
 the invalid type that was found. This is actually the textual
 type description found in the binary class representation,
 so it may not be human-readable.
 */
- (instancetype)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)element
                                 withNSString:(NSString *)foundType;

/*!
 @brief Returns the method object for the invalid type.
 @return a <code>Method</code> instance.
 */
- (JavaLangReflectMethod *)element;

/*!
 @brief Returns the invalid type.
 @return a string describing the invalid data.
 */
- (NSString *)foundType;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangAnnotationAnnotationTypeMismatchException)

FOUNDATION_EXPORT void JavaLangAnnotationAnnotationTypeMismatchException_initWithJavaLangReflectMethod_withNSString_(JavaLangAnnotationAnnotationTypeMismatchException *self, JavaLangReflectMethod *element, NSString *foundType);

FOUNDATION_EXPORT JavaLangAnnotationAnnotationTypeMismatchException *new_JavaLangAnnotationAnnotationTypeMismatchException_initWithJavaLangReflectMethod_withNSString_(JavaLangReflectMethod *element, NSString *foundType) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaLangAnnotationAnnotationTypeMismatchException)

#endif // _JavaLangAnnotationAnnotationTypeMismatchException_H_
