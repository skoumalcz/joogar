//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/AbstractMethodError.java
//

#ifndef _JavaLangAbstractMethodError_H_
#define _JavaLangAbstractMethodError_H_

#include "J2ObjC_header.h"
#include "java/lang/IncompatibleClassChangeError.h"

/*!
 @brief Thrown by the VM when an abstract method is called.
 <p>
 Note that this can only occur when inconsistent class files have been loaded,
 since invoking an abstract method is a compile time error.
 */
@interface JavaLangAbstractMethodError : JavaLangIncompatibleClassChangeError

#pragma mark Public

/*!
 @brief Constructs a new <code>AbstractMethodError</code> that includes the current
 stack trace.
 */
- (instancetype)init;

/*!
 @brief Constructs a new <code>AbstractMethodError</code> with the current stack trace
 and the specified detail message.
 @param detailMessage
 the detail message for this error.
 */
- (instancetype)initWithNSString:(NSString *)detailMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangAbstractMethodError)

FOUNDATION_EXPORT void JavaLangAbstractMethodError_init(JavaLangAbstractMethodError *self);

FOUNDATION_EXPORT JavaLangAbstractMethodError *new_JavaLangAbstractMethodError_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaLangAbstractMethodError_initWithNSString_(JavaLangAbstractMethodError *self, NSString *detailMessage);

FOUNDATION_EXPORT JavaLangAbstractMethodError *new_JavaLangAbstractMethodError_initWithNSString_(NSString *detailMessage) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaLangAbstractMethodError)

#endif // _JavaLangAbstractMethodError_H_
