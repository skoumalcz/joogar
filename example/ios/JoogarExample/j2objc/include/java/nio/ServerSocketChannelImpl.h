//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/ServerSocketChannelImpl.java
//

#ifndef _JavaNioServerSocketChannelImpl_H_
#define _JavaNioServerSocketChannelImpl_H_

#include "J2ObjC_header.h"
#include "java/nio/FileDescriptorChannel.h"
#include "java/nio/channels/ServerSocketChannel.h"

@class JavaIoFileDescriptor;
@class JavaNetServerSocket;
@class JavaNetSocketAddress;
@class JavaNioChannelsSocketChannel;
@class JavaNioChannelsSpiSelectorProvider;
@protocol JavaNetSocketOption;
@protocol JavaUtilSet;

/*!
 @brief The default ServerSocketChannel.
 */
@interface JavaNioServerSocketChannelImpl : JavaNioChannelsServerSocketChannel < JavaNioFileDescriptorChannel >

#pragma mark Public

- (instancetype)initWithJavaNioChannelsSpiSelectorProvider:(JavaNioChannelsSpiSelectorProvider *)sp;

- (JavaNioChannelsSocketChannel *)accept;

/*!
  Until ready for a public API change 
 */
- (JavaNioChannelsServerSocketChannel *)bindWithJavaNetSocketAddress:(JavaNetSocketAddress *)localAddr
                                                             withInt:(jint)backlog;

- (JavaIoFileDescriptor *)getFD;

/*!
  Until ready for a public API change 
 */
- (JavaNetSocketAddress *)getLocalAddress;

/*!
  Until ready for a public API change 
 */
- (id)getOptionWithJavaNetSocketOption:(id<JavaNetSocketOption>)option;

/*!
  Until ready for a public API change 
 */
- (JavaNioChannelsServerSocketChannel *)setOptionWithJavaNetSocketOption:(id<JavaNetSocketOption>)option
                                                                  withId:(id)value;

- (JavaNetServerSocket *)socket;

/*!
  Until ready for a public API change 
 */
- (id<JavaUtilSet>)supportedOptions;

#pragma mark Protected

- (void)implCloseSelectableChannel;

- (void)implConfigureBlockingWithBoolean:(jboolean)blocking;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioServerSocketChannelImpl)

FOUNDATION_EXPORT void JavaNioServerSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_(JavaNioServerSocketChannelImpl *self, JavaNioChannelsSpiSelectorProvider *sp);

FOUNDATION_EXPORT JavaNioServerSocketChannelImpl *new_JavaNioServerSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_(JavaNioChannelsSpiSelectorProvider *sp) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaNioServerSocketChannelImpl)

#endif // _JavaNioServerSocketChannelImpl_H_
