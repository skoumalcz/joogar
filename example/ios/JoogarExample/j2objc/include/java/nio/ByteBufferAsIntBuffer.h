//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/ByteBufferAsIntBuffer.java
//

#ifndef _JavaNioByteBufferAsIntBuffer_H_
#define _JavaNioByteBufferAsIntBuffer_H_

#include "J2ObjC_header.h"
#include "java/nio/IntBuffer.h"

@class IOSIntArray;
@class JavaNioByteBuffer;
@class JavaNioByteOrder;

/*!
 @brief This class wraps a byte buffer to be a int buffer.
 <p>
 Implementation notice:
 <ul>
 <li>After a byte buffer instance is wrapped, it becomes privately owned by
 the adapter. It must NOT be accessed outside the adapter any more.</li>
 <li>The byte buffer's position and limit are NOT linked with the adapter.
 The adapter extends Buffer, thus has its own position and limit.</li>
 </ul>
 </p>
 */
@interface JavaNioByteBufferAsIntBuffer : JavaNioIntBuffer

#pragma mark Public

- (JavaNioIntBuffer *)asReadOnlyBuffer;

- (JavaNioIntBuffer *)compact;

- (JavaNioIntBuffer *)duplicate;

- (jint)get;

- (jint)getWithInt:(jint)index;

- (JavaNioIntBuffer *)getWithIntArray:(IOSIntArray *)dst
                              withInt:(jint)dstOffset
                              withInt:(jint)intCount;

- (jboolean)isDirect;

- (jboolean)isReadOnly;

- (JavaNioByteOrder *)order;

- (JavaNioIntBuffer *)putWithInt:(jint)c;

- (JavaNioIntBuffer *)putWithInt:(jint)index
                         withInt:(jint)c;

- (JavaNioIntBuffer *)putWithIntArray:(IOSIntArray *)src
                              withInt:(jint)srcOffset
                              withInt:(jint)intCount;

- (JavaNioIntBuffer *)slice;

#pragma mark Package-Private

+ (JavaNioIntBuffer *)asIntBufferWithJavaNioByteBuffer:(JavaNioByteBuffer *)byteBuffer;

- (IOSIntArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioByteBufferAsIntBuffer)

FOUNDATION_EXPORT JavaNioIntBuffer *JavaNioByteBufferAsIntBuffer_asIntBufferWithJavaNioByteBuffer_(JavaNioByteBuffer *byteBuffer);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioByteBufferAsIntBuffer)

#endif // _JavaNioByteBufferAsIntBuffer_H_
