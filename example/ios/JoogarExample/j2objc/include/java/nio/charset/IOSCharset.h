//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/charset/IOSCharset.java
//

#ifndef _JavaNioCharsetIOSCharset_H_
#define _JavaNioCharsetIOSCharset_H_

#include "J2ObjC_header.h"
#include "java/nio/charset/Charset.h"

@class JavaNioCharsetCharsetDecoder;
@class JavaNioCharsetCharsetEncoder;
@protocol JavaUtilSet;

/*!
 @brief iOS native charset support.
 @author Tom Ball
 */
@interface JavaNioCharsetIOSCharset : JavaNioCharsetCharset

#pragma mark Public

- (jboolean)containsWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (JavaNioCharsetCharsetDecoder *)newDecoder OBJC_METHOD_FAMILY_NONE;

- (JavaNioCharsetCharsetEncoder *)newEncoder OBJC_METHOD_FAMILY_NONE;

- (jlong)nsEncoding;

#pragma mark Package-Private

+ (JavaNioCharsetCharset *)charsetForNameWithNSString:(NSString *)charsetName;

+ (id<JavaUtilSet>)getAvailableCharsetNames;


@end

J2OBJC_STATIC_INIT(JavaNioCharsetIOSCharset)

FOUNDATION_EXPORT JavaNioCharsetIOSCharset *JavaNioCharsetIOSCharset_DEFAULT_CHARSET_;
J2OBJC_STATIC_FIELD_GETTER(JavaNioCharsetIOSCharset, DEFAULT_CHARSET_, JavaNioCharsetIOSCharset *)

FOUNDATION_EXPORT id<JavaUtilSet> JavaNioCharsetIOSCharset_getAvailableCharsetNames();

FOUNDATION_EXPORT JavaNioCharsetCharset *JavaNioCharsetIOSCharset_charsetForNameWithNSString_(NSString *charsetName);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioCharsetIOSCharset)

#endif // _JavaNioCharsetIOSCharset_H_
