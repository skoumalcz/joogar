//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: apache_harmony/classlib/modules/math/src/main/java/java/math/RoundingMode.java
//

#ifndef _JavaMathRoundingMode_H_
#define _JavaMathRoundingMode_H_

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

typedef NS_ENUM(NSUInteger, JavaMathRoundingMode) {
  JavaMathRoundingMode_UP = 0,
  JavaMathRoundingMode_DOWN = 1,
  JavaMathRoundingMode_CEILING = 2,
  JavaMathRoundingMode_FLOOR = 3,
  JavaMathRoundingMode_HALF_UP = 4,
  JavaMathRoundingMode_HALF_DOWN = 5,
  JavaMathRoundingMode_HALF_EVEN = 6,
  JavaMathRoundingMode_UNNECESSARY = 7,
};

/*!
 @brief Specifies the rounding behavior for operations whose results cannot be
 represented exactly.
 */
@interface JavaMathRoundingModeEnum : JavaLangEnum < NSCopying >

#pragma mark Public

/*!
 @brief Converts rounding mode constants from class <code>BigDecimal</code> into
 <code>RoundingMode</code> values.
 @param mode
 rounding mode constant as defined in class <code>BigDecimal</code>
 @return corresponding rounding mode object
 */
+ (JavaMathRoundingModeEnum *)valueOfWithInt:(jint)mode;

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *JavaMathRoundingModeEnum_values();

+ (JavaMathRoundingModeEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT JavaMathRoundingModeEnum *JavaMathRoundingModeEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(JavaMathRoundingModeEnum)

FOUNDATION_EXPORT JavaMathRoundingModeEnum *JavaMathRoundingModeEnum_values_[];

#define JavaMathRoundingModeEnum_UP JavaMathRoundingModeEnum_values_[JavaMathRoundingMode_UP]
J2OBJC_ENUM_CONSTANT_GETTER(JavaMathRoundingModeEnum, UP)

#define JavaMathRoundingModeEnum_DOWN JavaMathRoundingModeEnum_values_[JavaMathRoundingMode_DOWN]
J2OBJC_ENUM_CONSTANT_GETTER(JavaMathRoundingModeEnum, DOWN)

#define JavaMathRoundingModeEnum_CEILING JavaMathRoundingModeEnum_values_[JavaMathRoundingMode_CEILING]
J2OBJC_ENUM_CONSTANT_GETTER(JavaMathRoundingModeEnum, CEILING)

#define JavaMathRoundingModeEnum_FLOOR JavaMathRoundingModeEnum_values_[JavaMathRoundingMode_FLOOR]
J2OBJC_ENUM_CONSTANT_GETTER(JavaMathRoundingModeEnum, FLOOR)

#define JavaMathRoundingModeEnum_HALF_UP JavaMathRoundingModeEnum_values_[JavaMathRoundingMode_HALF_UP]
J2OBJC_ENUM_CONSTANT_GETTER(JavaMathRoundingModeEnum, HALF_UP)

#define JavaMathRoundingModeEnum_HALF_DOWN JavaMathRoundingModeEnum_values_[JavaMathRoundingMode_HALF_DOWN]
J2OBJC_ENUM_CONSTANT_GETTER(JavaMathRoundingModeEnum, HALF_DOWN)

#define JavaMathRoundingModeEnum_HALF_EVEN JavaMathRoundingModeEnum_values_[JavaMathRoundingMode_HALF_EVEN]
J2OBJC_ENUM_CONSTANT_GETTER(JavaMathRoundingModeEnum, HALF_EVEN)

#define JavaMathRoundingModeEnum_UNNECESSARY JavaMathRoundingModeEnum_values_[JavaMathRoundingMode_UNNECESSARY]
J2OBJC_ENUM_CONSTANT_GETTER(JavaMathRoundingModeEnum, UNNECESSARY)

FOUNDATION_EXPORT JavaMathRoundingModeEnum *JavaMathRoundingModeEnum_valueOfWithInt_(jint mode);

J2OBJC_TYPE_LITERAL_HEADER(JavaMathRoundingModeEnum)

#endif // _JavaMathRoundingMode_H_
