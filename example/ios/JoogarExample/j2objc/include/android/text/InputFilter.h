//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/frameworks/base/core/java/android/text/InputFilter.java
//

#ifndef _AndroidTextInputFilter_H_
#define _AndroidTextInputFilter_H_

#include "J2ObjC_header.h"

@protocol AndroidTextSpanned;
@protocol JavaLangCharSequence;

/*!
 @brief InputFilters can be attached to <code>Editable</code>s to constrain the
 changes that can be made to them.
 */
@protocol AndroidTextInputFilter < NSObject, JavaObject >

/*!
 @brief This method is called when the buffer is going to replace the
 range <code>dstart &hellip; dend</code> of <code>dest</code>
 with the new text from the range <code>start &hellip; end</code>
 of <code>source</code>.
 Return the CharSequence that you would
 like to have placed there instead, including an empty string
 if appropriate, or <code>null</code> to accept the original
 replacement.  Be careful to not to reject 0-length replacements,
 as this is what happens when you delete text.  Also beware that
 you should not attempt to make any changes to <code>dest</code>
 from this method; you may only examine it for context.
 Note: If <var>source</var> is an instance of <code>Spanned</code> or
 <code>Spannable</code>, the span objects in the <var>source</var> should be 
 copied into the filtered result (i.e. the non-null return value). 
 <code>TextUtils.copySpansFrom</code> can be used for convenience.
 */
- (id<JavaLangCharSequence>)filterWithJavaLangCharSequence:(id<JavaLangCharSequence>)source
                                                   withInt:(jint)start
                                                   withInt:(jint)end
                                    withAndroidTextSpanned:(id<AndroidTextSpanned>)dest
                                                   withInt:(jint)dstart
                                                   withInt:(jint)dend;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidTextInputFilter)

J2OBJC_TYPE_LITERAL_HEADER(AndroidTextInputFilter)

/*!
 @brief This filter will capitalize all the lower case letters that are added
 through edits.
 */
@interface AndroidTextInputFilter_AllCaps : NSObject < AndroidTextInputFilter >

#pragma mark Public

- (instancetype)init;

- (id<JavaLangCharSequence>)filterWithJavaLangCharSequence:(id<JavaLangCharSequence>)source
                                                   withInt:(jint)start
                                                   withInt:(jint)end
                                    withAndroidTextSpanned:(id<AndroidTextSpanned>)dest
                                                   withInt:(jint)dstart
                                                   withInt:(jint)dend;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidTextInputFilter_AllCaps)

FOUNDATION_EXPORT void AndroidTextInputFilter_AllCaps_init(AndroidTextInputFilter_AllCaps *self);

FOUNDATION_EXPORT AndroidTextInputFilter_AllCaps *new_AndroidTextInputFilter_AllCaps_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(AndroidTextInputFilter_AllCaps)

/*!
 @brief This filter will constrain edits not to make the length of the text
 greater than the specified length.
 */
@interface AndroidTextInputFilter_LengthFilter : NSObject < AndroidTextInputFilter >

#pragma mark Public

- (instancetype)initWithInt:(jint)max;

- (id<JavaLangCharSequence>)filterWithJavaLangCharSequence:(id<JavaLangCharSequence>)source
                                                   withInt:(jint)start
                                                   withInt:(jint)end
                                    withAndroidTextSpanned:(id<AndroidTextSpanned>)dest
                                                   withInt:(jint)dstart
                                                   withInt:(jint)dend;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidTextInputFilter_LengthFilter)

FOUNDATION_EXPORT void AndroidTextInputFilter_LengthFilter_initWithInt_(AndroidTextInputFilter_LengthFilter *self, jint max);

FOUNDATION_EXPORT AndroidTextInputFilter_LengthFilter *new_AndroidTextInputFilter_LengthFilter_initWithInt_(jint max) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(AndroidTextInputFilter_LengthFilter)

#endif // _AndroidTextInputFilter_H_
