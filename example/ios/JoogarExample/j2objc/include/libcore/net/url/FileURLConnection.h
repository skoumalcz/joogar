//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/libcore/net/url/FileURLConnection.java
//

#ifndef _LibcoreNetUrlFileURLConnection_H_
#define _LibcoreNetUrlFileURLConnection_H_

#include "J2ObjC_header.h"
#include "java/net/URLConnection.h"

@class JavaIoInputStream;
@class JavaNetURL;
@class JavaSecurityPermission;

/*!
 @brief This subclass extends <code>URLConnection</code>.
 <p>
 This class is responsible for connecting, getting content and input stream of
 the file.
 */
@interface LibcoreNetUrlFileURLConnection : JavaNetURLConnection

#pragma mark Public

/*!
 @brief Creates an instance of <code>FileURLConnection</code> for establishing
 a connection to the file pointed by this <code>URL<code>
 @param url The URL this connection is connected to
 */
- (instancetype)initWithJavaNetURL:(JavaNetURL *)url;

/*!
 @brief This methods will attempt to obtain the input stream of the file pointed
 by this <code>URL</code>.
 If the file is a directory, it will return
 that directory listing as an input stream.
 @throws IOException
 if an IO error occurs while connecting
 */
- (void)connect;

/*!
 @brief Returns the length of the file in bytes, or <code>-1</code> if the length cannot be
 represented as an <code>int</code>.
 See <code>getContentLengthLong()</code> for a method that can
 handle larger files.
 */
- (jint)getContentLength;

/*!
 @brief Returns the length of the file in bytes.
 @return the length of the file
 @since 1.7
  Until ready for a public API change
 */
- (jlong)getContentLengthLong;

/*!
 @brief Returns the content type of the resource.
 Just takes a guess based on the
 name.
 @return the content type
 */
- (NSString *)getContentType;

/*!
 @brief Returns the input stream of the object referred to by this
 <code>URLConnection</code>
 File Sample : "/ZIP211/+/harmony/tools/javac/resources/javac.properties"
 Invalid File Sample:
 "/ZIP/+/harmony/tools/javac/resources/javac.properties"
 "ZIP211/+/harmony/tools/javac/resources/javac.properties"
 @return input stream of the object
 @throws IOException
 if an IO error occurs
 */
- (JavaIoInputStream *)getInputStream;

/*!
 @brief Returns the permission, in this case the subclass, FilePermission object
 which represents the permission necessary for this URLConnection to
 establish the connection.
 @return the permission required for this URLConnection.
 @throws IOException
 if an IO exception occurs while creating the permission.
 */
- (JavaSecurityPermission *)getPermission;

@end

J2OBJC_EMPTY_STATIC_INIT(LibcoreNetUrlFileURLConnection)

FOUNDATION_EXPORT void LibcoreNetUrlFileURLConnection_initWithJavaNetURL_(LibcoreNetUrlFileURLConnection *self, JavaNetURL *url);

FOUNDATION_EXPORT LibcoreNetUrlFileURLConnection *new_LibcoreNetUrlFileURLConnection_initWithJavaNetURL_(JavaNetURL *url) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(LibcoreNetUrlFileURLConnection)

#endif // _LibcoreNetUrlFileURLConnection_H_
