//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/libcore/util/BasicLruCache.java
//

#ifndef _LibcoreUtilBasicLruCache_H_
#define _LibcoreUtilBasicLruCache_H_

#include "J2ObjC_header.h"

@protocol JavaUtilMap;

/*!
 @brief A minimal least-recently-used cache for libcore.
 Prefer <code>android.util.LruCache</code>
  where that is available.
 */
@interface LibcoreUtilBasicLruCache : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)maxSize;

/*!
 @brief Clear the cache, calling <code>entryEvicted</code> on each removed entry.
 */
- (void)evictAll;

/*!
 @brief Returns the value for <code>key</code> if it exists in the cache or can be
 created by <code>#create</code>.
 If a value was returned, it is moved to the
 head of the queue. This returns null if a value is not cached and cannot
 be created.
 */
- (id)getWithId:(id)key;

/*!
 @brief Caches <code>value</code> for <code>key</code>.
 The value is moved to the head of
 the queue.
 @return the previous value mapped by <code>key</code>. Although that entry is
 no longer cached, it has not been passed to <code>entryEvicted</code>.
 */
- (id)putWithId:(id)key
         withId:(id)value;

/*!
 @brief Returns a copy of the current contents of the cache, ordered from least
 recently accessed to most recently accessed.
 */
- (id<JavaUtilMap>)snapshot;

#pragma mark Protected

/*!
 @brief Called after a cache miss to compute a value for the corresponding key.
 Returns the computed value or null if no value can be computed. The
 default implementation returns null.
 */
- (id)createWithId:(id)key;

/*!
 @brief Called for entries that have reached the tail of the least recently used
 queue and are be removed.
 The default implementation does nothing.
 */
- (void)entryEvictedWithId:(id)key
                    withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(LibcoreUtilBasicLruCache)

FOUNDATION_EXPORT void LibcoreUtilBasicLruCache_initWithInt_(LibcoreUtilBasicLruCache *self, jint maxSize);

FOUNDATION_EXPORT LibcoreUtilBasicLruCache *new_LibcoreUtilBasicLruCache_initWithInt_(jint maxSize) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(LibcoreUtilBasicLruCache)

#endif // _LibcoreUtilBasicLruCache_H_
