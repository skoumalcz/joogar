//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../joogar/src/main/java/net/skoumal/joogar/shared/cursor/JoogarCursorList.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "JoogarCursorList.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface JavaJoogarCursorList () {
 @public
  IOSClass *type_;
  id<JavaUtilList> list_;
  jint position_;
  jboolean isClosed_;
}

@end

J2OBJC_FIELD_SETTER(JavaJoogarCursorList, type_, IOSClass *)
J2OBJC_FIELD_SETTER(JavaJoogarCursorList, list_, id<JavaUtilList>)

@implementation JavaJoogarCursorList

- (instancetype)initWithIOSClass:(IOSClass *)gType
                withJavaUtilList:(id<JavaUtilList>)gList {
  JavaJoogarCursorList_initWithIOSClass_withJavaUtilList_(self, gType, gList);
  return self;
}

- (jint)getCount {
  return [self size];
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(list_)) size];
}

- (jint)getPosition {
  return position_;
}

- (void)setPositionWithInt:(jint)gPosition {
  position_ = gPosition;
}

- (id)next {
  position_++;
  if (0 <= position_ && position_ < [((id<JavaUtilList>) nil_chk(list_)) size]) {
    return [list_ getWithInt:position_];
  }
  else {
    return nil;
  }
}

- (jboolean)hasNext {
  return position_ < ([((id<JavaUtilList>) nil_chk(list_)) size] - 1);
}

- (void)close {
  isClosed_ = true;
}

- (jboolean)isClosed {
  return isClosed_;
}

- (id)getItem {
  return [self current];
}

- (id)current {
  @try {
    return [((id<JavaUtilList>) nil_chk(list_)) getWithInt:position_];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

- (id<JavaUtilList>)toList {
  return list_;
}

- (id<JavaUtilList>)toListAndClose {
  id<JavaUtilList> list = [self toList];
  [self close];
  return list;
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(list_)) iterator];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClass:withJavaUtilList:", "JoogarCursorList", NULL, 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "getPosition", NULL, "I", 0x1, NULL, NULL },
    { "setPositionWithInt:", "setPosition", "V", 0x1, NULL, NULL },
    { "next", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "isClosed", NULL, "Z", 0x1, NULL, NULL },
    { "getItem", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "current", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "toList", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "toListAndClose", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x2, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<TT;>;", .constantValue.asLong = 0 },
    { "list_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<TT;>;", .constantValue.asLong = 0 },
    { "position_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "isClosed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _JavaJoogarCursorList = { 2, "JoogarCursorList", "net.skoumal.joogar.shared.cursor", NULL, 0x1, 14, methods, 4, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lnet/skoumal/joogar/shared/cursor/JoogarCursor<TT;>;" };
  return &_JavaJoogarCursorList;
}

@end

void JavaJoogarCursorList_initWithIOSClass_withJavaUtilList_(JavaJoogarCursorList *self, IOSClass *gType, id<JavaUtilList> gList) {
  (void) NSObject_init(self);
  self->list_ = new_JavaUtilArrayList_init();
  self->position_ = -1;
  self->type_ = gType;
  self->list_ = gList;
}

JavaJoogarCursorList *new_JavaJoogarCursorList_initWithIOSClass_withJavaUtilList_(IOSClass *gType, id<JavaUtilList> gList) {
  JavaJoogarCursorList *self = [JavaJoogarCursorList alloc];
  JavaJoogarCursorList_initWithIOSClass_withJavaUtilList_(self, gType, gList);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaJoogarCursorList)
