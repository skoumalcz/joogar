//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../joogar/src/main/java/net/skoumal/joogar/shared/cursor/JoogarCursorImpl.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Joogar.h"
#include "JoogarCursorImpl.h"
#include "JoogarDatabaseResult.h"
#include "JoogarRecord.h"
#include "ReflectionUtils.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface JavaJoogarCursorImpl () {
 @public
  IOSClass *type_;
  id<JavaJoogarDatabaseResult> result_;
  jboolean isClosed_;
  IOSObjectArray *prefetches_;
}

- (void)inflatePrefetchesWithIOSClass:(IOSClass *)type
                               withId:(id)entity
         withJavaJoogarDatabaseResult:(id<JavaJoogarDatabaseResult>)result
   withJavaJoogarRecord_PrefetchArray:(IOSObjectArray *)prefetches
                              withInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(JavaJoogarCursorImpl, type_, IOSClass *)
J2OBJC_FIELD_SETTER(JavaJoogarCursorImpl, result_, id<JavaJoogarDatabaseResult>)
J2OBJC_FIELD_SETTER(JavaJoogarCursorImpl, prefetches_, IOSObjectArray *)

__attribute__((unused)) static void JavaJoogarCursorImpl_inflatePrefetchesWithIOSClass_withId_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_withInt_(JavaJoogarCursorImpl *self, IOSClass *type, id entity, id<JavaJoogarDatabaseResult> result, IOSObjectArray *prefetches, jint index);

@implementation JavaJoogarCursorImpl

- (instancetype)initWithIOSClass:(IOSClass *)gType
    withJavaJoogarDatabaseResult:(id<JavaJoogarDatabaseResult>)gResult {
  JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_(self, gType, gResult);
  return self;
}

- (instancetype)initWithIOSClass:(IOSClass *)gType
    withJavaJoogarDatabaseResult:(id<JavaJoogarDatabaseResult>)gResult
withJavaJoogarRecord_PrefetchArray:(IOSObjectArray *)gPrefetches {
  JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_(self, gType, gResult, gPrefetches);
  return self;
}

- (jint)getCount {
  return [self size];
}

- (jint)size {
  return [((id<JavaJoogarDatabaseResult>) nil_chk(result_)) count];
}

- (jint)getPosition {
  return [((id<JavaJoogarDatabaseResult>) nil_chk(result_)) getPosition];
}

- (void)setPositionWithInt:(jint)position {
  [((id<JavaJoogarDatabaseResult>) nil_chk(result_)) setPositionWithInt:position];
}

- (jboolean)hasNext {
  return [((id<JavaJoogarDatabaseResult>) nil_chk(result_)) getPosition] < ([result_ count] - 1);
}

- (id)next {
  if ([((id<JavaJoogarDatabaseResult>) nil_chk(result_)) next]) {
    return [self getItem];
  }
  else {
    return nil;
  }
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Remove is not supported for joogar cursor iterator.");
}

- (void)close {
  [((id<JavaJoogarDatabaseResult>) nil_chk(result_)) close];
}

- (jboolean)isClosed {
  return isClosed_;
}

- (id)getItem {
  return [self current];
}

- (id)current {
  @try {
    id entity = [((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(type_)) getDeclaredConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
    if (prefetches_ == nil) {
      [((JavaReflectionUtils *) nil_chk(reflectionUtils_)) inflateWithJavaJoogarDatabaseResult:result_ withId:entity withInt:-1];
    }
    else {
      jint index = [((JavaReflectionUtils *) nil_chk(reflectionUtils_)) inflateWithJavaJoogarDatabaseResult:result_ withId:entity withInt:0];
      JavaJoogarCursorImpl_inflatePrefetchesWithIOSClass_withId_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_withInt_(self, type_, entity, result_, prefetches_, index);
    }
    return entity;
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

- (id<JavaUtilList>)toList {
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  [self setPositionWithInt:-1];
  id item;
  while ((item = [self next]) != nil) {
    [list addWithId:item];
  }
  return list;
}

- (id<JavaUtilList>)toListAndClose {
  id<JavaUtilList> list = [self toList];
  [self close];
  return list;
}

- (void)inflatePrefetchesWithIOSClass:(IOSClass *)type
                               withId:(id)entity
         withJavaJoogarDatabaseResult:(id<JavaJoogarDatabaseResult>)result
   withJavaJoogarRecord_PrefetchArray:(IOSObjectArray *)prefetches
                              withInt:(jint)index {
  JavaJoogarCursorImpl_inflatePrefetchesWithIOSClass_withId_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_withInt_(self, type, entity, result, prefetches, index);
}

- (id<JavaUtilIterator>)iterator {
  [self setPositionWithInt:-1];
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClass:withJavaJoogarDatabaseResult:", "JoogarCursorImpl", NULL, 0x1, NULL, NULL },
    { "initWithIOSClass:withJavaJoogarDatabaseResult:withJavaJoogarRecord_PrefetchArray:", "JoogarCursorImpl", NULL, 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "getPosition", NULL, "I", 0x1, NULL, NULL },
    { "setPositionWithInt:", "setPosition", "V", 0x1, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "isClosed", NULL, "Z", 0x1, NULL, NULL },
    { "getItem", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "current", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "toList", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "toListAndClose", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "inflatePrefetchesWithIOSClass:withId:withJavaJoogarDatabaseResult:withJavaJoogarRecord_PrefetchArray:withInt:", "inflatePrefetches", "V", 0x2, "Ljava.lang.InstantiationException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;Ljava.lang.NoSuchMethodException;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<*>;Ljava/lang/Object;Lnet/skoumal/joogar/shared/JoogarDatabaseResult;[Lnet/skoumal/joogar/shared/JoogarRecord$Prefetch;I)V" },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x2, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<TT;>;", .constantValue.asLong = 0 },
    { "result_", NULL, 0x2, "Lnet.skoumal.joogar.shared.JoogarDatabaseResult;", NULL, NULL, .constantValue.asLong = 0 },
    { "isClosed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "prefetches_", NULL, 0x2, "[Lnet.skoumal.joogar.shared.JoogarRecord$Prefetch;", NULL, NULL, .constantValue.asLong = 0 },
    { "reflectionUtils_", NULL, 0x0, "Lnet.skoumal.joogar.shared.util.ReflectionUtils;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _JavaJoogarCursorImpl = { 2, "JoogarCursorImpl", "net.skoumal.joogar.shared.cursor", NULL, 0x1, 17, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lnet/skoumal/joogar/shared/cursor/JoogarCursor<TT;>;Ljava/util/Iterator<TT;>;" };
  return &_JavaJoogarCursorImpl;
}

@end

void JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_(JavaJoogarCursorImpl *self, IOSClass *gType, id<JavaJoogarDatabaseResult> gResult) {
  (void) JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_(self, gType, gResult, nil);
}

JavaJoogarCursorImpl *new_JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_(IOSClass *gType, id<JavaJoogarDatabaseResult> gResult) {
  JavaJoogarCursorImpl *self = [JavaJoogarCursorImpl alloc];
  JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_(self, gType, gResult);
  return self;
}

void JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_(JavaJoogarCursorImpl *self, IOSClass *gType, id<JavaJoogarDatabaseResult> gResult, IOSObjectArray *gPrefetches) {
  (void) NSObject_init(self);
  self->isClosed_ = false;
  self->prefetches_ = nil;
  self->type_ = gType;
  self->result_ = gResult;
  self->prefetches_ = gPrefetches;
  self->reflectionUtils_ = [((JavaJoogar *) nil_chk(JavaJoogar_getInstance())) getReflectionUtils];
}

JavaJoogarCursorImpl *new_JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_(IOSClass *gType, id<JavaJoogarDatabaseResult> gResult, IOSObjectArray *gPrefetches) {
  JavaJoogarCursorImpl *self = [JavaJoogarCursorImpl alloc];
  JavaJoogarCursorImpl_initWithIOSClass_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_(self, gType, gResult, gPrefetches);
  return self;
}

void JavaJoogarCursorImpl_inflatePrefetchesWithIOSClass_withId_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_withInt_(JavaJoogarCursorImpl *self, IOSClass *type, id entity, id<JavaJoogarDatabaseResult> result, IOSObjectArray *prefetches, jint index) {
  {
    IOSObjectArray *a__ = prefetches;
    JavaJoogarRecord_Prefetch * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaJoogarRecord_Prefetch * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaJoogarRecord_Prefetch *p = *b__++;
      if ([p isKindOfClass:[JavaJoogarRecord_OneToOnePrefetch class]]) {
        JavaJoogarRecord_OneToOnePrefetch *otop = (JavaJoogarRecord_OneToOnePrefetch *) check_class_cast(p, [JavaJoogarRecord_OneToOnePrefetch class]);
        JavaLangReflectField *field = [((JavaReflectionUtils *) nil_chk(self->reflectionUtils_)) getDeepFieldWithNSString:[((JavaJoogarRecord_OneToOnePrefetch *) nil_chk(otop)) getField] withIOSClass:type];
        IOSClass *fieldType = [((JavaLangReflectField *) nil_chk(field)) getType];
        id prefetchedEntity = [((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(fieldType)) getDeclaredConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
        index = [self->reflectionUtils_ inflateWithJavaJoogarDatabaseResult:result withId:prefetchedEntity withInt:index];
        [self->reflectionUtils_ setFieldValueNativeWithId:entity withJavaLangReflectField:field withId:prefetchedEntity];
        JavaJoogarCursorImpl_inflatePrefetchesWithIOSClass_withId_withJavaJoogarDatabaseResult_withJavaJoogarRecord_PrefetchArray_withInt_(self, fieldType, prefetchedEntity, result, [otop getChildPrefetch], index);
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaJoogarCursorImpl)
